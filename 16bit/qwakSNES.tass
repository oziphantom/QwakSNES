QWAKSNES.asm:195:2: TopFixedChars = $82a6c0
sharedWRAM.asm:18:1: mBG4HOFS = $0069
QWAKSNES.asm:217:3: mBG4HOFS.lo = $0069
QWAKSNES.asm:218:3: mBG4HOFS.hi = $006a
QWAKSNES.asm:110:1: TestingSprY2 = $001a
QWAKSNES.asm:109:1: TestingSprY1 = $0019
sharedWRAM.asm:75:1: tileMapTemp = $02a6
SNESDef.asm:18:1: kBaseSize_32x32 = 0
sharedWRAM.asm:79:1: OAMMirror = $0405
sharedWRAM.asm:2:1: mINIDISP = $0049
sharedWRAM.asm:3:1: mOBSEL = $004b
QWAKSNES.asm:105:1: ActiveTileIndex = $0015
sharedWRAM.asm:28:1: mOBJLOG = $007d
qwak_structs.asm:17:1: sLevelData.exitTargetFrame = 6
qwak_structs.asm:14:1: sLevelData.playerIndex = 2
qwak_structs.asm:16:1: sLevelData.exitFrame = 5
qwak_structs.asm:18:1: sLevelData.exitFrameDelta = 7
qwak_structs.asm:13:1: sLevelData.totalKeys = 1
qwak_structs.asm:12:1: sLevelData.numKeysLeft = 0
qwak_structs.asm:15:1: sLevelData.exitIndex = 3
qwak_structs.asm:19:1: sLevelData.levelGraphicsSet = 8
sharedWRAM.asm:65:1: PasswordEntryIndex = $0296
QWAKSNES.asm:128:1: CollideInternalTBRX = $002c
sharedWRAM.asm:35:1: mNMITIMEN = $008b
QWAKSNES.asm:107:1: TestingSprX1 = $0017
QWAKSNES.asm:91:1: CollidedEntity = $0003
QWAKSNES.asm:108:1: TestingSprX2 = $0018
SNESDef.asm:8:1: kSPal_2 = 4
SNESDef.asm:13:1: kSPal_7 = 14
SNESDef.asm:12:1: kSPal_6 = 12
SNESDef.asm:11:1: kSPal_5 = 10
SNESDef.asm:10:1: kSPal_4 = 8
SNESDef.asm:9:1: kSPal_3 = 6
QWAKSNES.asm:49:1: gSharedRamStart = $0049
SNESDef.asm:7:1: kSPal_1 = 2
SNESDef.asm:6:1: kSPal_0 = 0
sharedWRAM.asm:77:1: PasswordRAMCache = $03f9
QWAKSNES.asm:113:1: CollideSpriteToCheck = $001d
sharedWRAM.asm:55:1: TICK_DOWN_END = $00df
QWAKSNES.asm:97:1: Pointer4 = $000c
QWAKSNES.asm:217:3: Pointer4.lo = $000c
QWAKSNES.asm:218:3: Pointer4.hi = $000d
QWAKSNES.asm:89:1: EntityDataPointer = $0000
QWAKSNES.asm:217:3: EntityDataPointer.lo = $0000
QWAKSNES.asm:218:3: EntityDataPointer.hi = $0001
SNESDef.asm:21:1: kBaseSize_64x64 = 3
sharedWRAM.asm:44:1: oldJoyUp = $0094
QWAKSNES.asm:111:1: GameStatePointer = $001b
QWAKSNES.asm:217:3: GameStatePointer.lo = $001b
QWAKSNES.asm:218:3: GameStatePointer.hi = $001c
sharedWRAM.asm:68:1: PasswordRedBullets = $0299
QWAKSNES.asm:133:1: ZPLong = $0032
QWAKSNES.asm:235:3: ZPLong.hiWord = $0033
QWAKSNES.asm:226:3: ZPLong.hi = $0033
QWAKSNES.asm:234:3: ZPLong.dummy2 = $0032
QWAKSNES.asm:225:3: ZPLong.lo = $0032
QWAKSNES.asm:231:3: ZPLong.dummy1 = $0034
QWAKSNES.asm:230:3: ZPLong.loWord = $0032
QWAKSNES.asm:227:3: ZPLong.bank = $0034
QWAKSNES.asm:235:3: HLBLong.hiWord = 1
QWAKSNES.asm:226:3: HLBLong.hi = 1
QWAKSNES.asm:234:3: HLBLong.dummy2 = 0
QWAKSNES.asm:225:3: HLBLong.lo = 0
QWAKSNES.asm:231:3: HLBLong.dummy1 = 2
QWAKSNES.asm:230:3: HLBLong.loWord = 0
QWAKSNES.asm:227:3: HLBLong.bank = 2
sharedWRAM.asm:4:1: mBGMODE = $004d
QWAKSNES.asm:121:1: CollideCharBRI = $0025
qwak_structs.asm:27:1: sTimerTickDowns.shieldFlashTimer = 4
qwak_structs.asm:28:1: sTimerTickDowns.shieldFlashTimerSpeedUp = 5
qwak_structs.asm:24:1: sTimerTickDowns.playerAnim = 1
qwak_structs.asm:23:1: sTimerTickDowns.dissBlocks = 0
qwak_structs.asm:29:1: sTimerTickDowns.bubbleTimer = 6
qwak_structs.asm:26:1: sTimerTickDowns.bulletLifeTimer = 3
qwak_structs.asm:25:1: sTimerTickDowns.doorAnim = 2
sharedWRAM.asm:73:1: disableUpdateSpritesXYToOAMNF = $02a5
QWAKSNES.asm:194:2: Font4BPP = $829ec0
SNESDef.asm:15:1: kSFlipX = 64
SNESDef.asm:16:1: kSFlipY = 128
QWAKSNES.asm:131:1: DidClipX = $002f
sharedWRAM.asm:46:1: oldJoyFire = $0096
sharedWRAM.asm:17:1: mBG3VOFS = $0067
QWAKSNES.asm:217:3: mBG3VOFS.lo = $0067
QWAKSNES.asm:218:3: mBG3VOFS.hi = $0068
QWAKSNES.asm:184:1: Bank80 = $808000
sharedWRAM.asm:66:1: Bank80.ValidPassword = $800297
Bank80.asm:3228:1: Bank80.WalkRightFrames = (9248,9250,9252,9254)
Bank80.asm:4841:1: Bank80.BubbleAnimData = (84,84,3,12,2,7)
Bank80.asm:4887:1: Bank80.kSinJumpFall = 17
Bank80.asm:1275:1: Bank80.giveScore = $8085fd
Bank80.asm:1277:1: Bank80.giveScore._ASSERT_axy8 = $8085fd
Bank80.asm:1276:1: Bank80.giveScore._ASSERT_jsr = $8085fd
Bank80.asm:1285:1: Bank80.giveScore._scLoop = $808606
Bank80.asm:1295:1: Bank80.giveScore._ok = $808619
Bank80.asm:1440:1: Bank80.plotStringAAtIndexX = $8086fb
Bank80.asm:1442:1: Bank80.plotStringAAtIndexX._ASSERT_axy8 = $8086fb
Bank80.asm:1441:1: Bank80.plotStringAAtIndexX._ASSERT_jsr = $8086fb
Bank80.asm:5461:1: Bank80.flowerFunc = $80a15d
Bank80.asm:5463:1: Bank80.flowerFunc._ASSERT_axy8 = $80a15d
Bank80.asm:5475:1: Bank80.flowerFunc._exit = $80a17a
Bank80.asm:5462:1: Bank80.flowerFunc._ASSERT_jsr = $80a15d
../music/music.asm:462:1: Bank80.Sound_Stop_All = $80bf13
Bank80.asm:4909:1: Bank80.NextDirectionLUT = $809da1
Bank80.asm:19:1: Bank80.kBulletSpriteOffset = 1
Bank80.asm:4778:1: Bank80.BatRawAnimDataRight = (24832,24834,24836,24838)
Bank80.asm:4439:1: Bank80.entBubble = $809a3b
Bank80.asm:4440:1: Bank80.entBubble._ASSERT_axy8 = $809a3b
Bank80.asm:4449:1: Bank80.entBubble._safe = $809a4c
Bank80.asm:4558:1: Bank80.BossNormal = $809af9
Bank80.asm:4559:1: Bank80.BossNormal._ASSERT_axy8 = $809af9
Bank80.asm:4569:1: Bank80.BossNormal._notFlash = $809b0f
Bank80.asm:4605:1: Bank80.BossNormal._noMove = $809b5f
Bank80.asm:4587:5: Bank80.BossNormal._toggleDir = $809b37
Bank80.asm:4592:2: Bank80.BossNormal._left = $809b41
Bank80.asm:4601:1: Bank80.BossNormal._doneMove = $809b56
Bank80.asm:5832:1: Bank80.PROGRAM = $80bc66
Bank80.asm:71:1: Bank80.kDefault_OBSEL = $62
../music/music.asm:70:1: Bank80.kSCMD_STREAM_STOP = $0c
Bank80.asm:2795:1: Bank80.kPlayerState = $808f90
Bank80.asm:2799:2: Bank80.kPlayerState.jump = 3
Bank80.asm:2800:2: Bank80.kPlayerState.exit = 4
Bank80.asm:2798:2: Bank80.kPlayerState.flap = 2
Bank80.asm:2797:2: Bank80.kPlayerState.normal = 1
Bank80.asm:2801:2: Bank80.kPlayerState.dead = 5
Bank80.asm:2796:2: Bank80.kPlayerState.appear = 0
Bank80.asm:4753:1: Bank80.HeliRawFrames = (8320,8322,8324,8326,8352,8354,8356,8358)
Bank80.asm:2927:1: Bank80.customJumpUpdate = $80903d
Bank80.asm:4806:1: Bank80.FishRawAnimData = (48,52,4,1,0,0)
Bank80.asm:4397:1: Bank80.handleEntCollisionResult = $8099f2
Bank80.asm:4398:1: Bank80.handleEntCollisionResult._ASSERT_axy8 = $8099f2
Bank80.asm:4410:1: Bank80.handleEntCollisionResult._skipIgnore = $809a06
Bank80.asm:4414:1: Bank80.handleEntCollisionResult._addDeltas = $809a0b
Bank80.asm:4404:1: Bank80.handleEntCollisionResult._entHitAndGoNext = $8099fa
Bank80.asm:4434:1: Bank80.handleEntCollisionResult._skipFlipDueToX = $809a36
Bank80.asm:4423:1: Bank80.handleEntCollisionResult._ignoreCollision = $809a1d
Bank80.asm:1496:1: Bank80.plotStatusArea = $80872a
Bank80.asm:1498:1: Bank80.plotStatusArea._ASSERT_axy8 = $80872a
Bank80.asm:1497:1: Bank80.plotStatusArea._ASSERT_jsr = $80872a
Bank80.asm:1503:2: Bank80.plotStatusArea._statusStart = $7e2600
Bank80.asm:2842:1: Bank80.joyToPlayerDelta_88 = $808f90
Bank80.asm:2844:1: Bank80.joyToPlayerDelta_88._ASSERT_axy8 = $808f90
Bank80.asm:2843:1: Bank80.joyToPlayerDelta_88._ASSERT_jsr = $808f90
Bank80.asm:2871:1: Bank80.joyToPlayerDelta_88._fullSpeedRight = $808fcc
Bank80.asm:2894:1: Bank80.joyToPlayerDelta_88._clearSpeedLeft = $808ff9
Bank80.asm:2903:1: Bank80.joyToPlayerDelta_88._noLR = $809008
Bank80.asm:2897:1: Bank80.joyToPlayerDelta_88._fullSpeedLeft = $808ffe
Bank80.asm:2878:1: Bank80.joyToPlayerDelta_88._left = $808fd7
Bank80.asm:2907:1: Bank80.joyToPlayerDelta_88._endLR = $809010
Bank80.asm:2868:3: Bank80.joyToPlayerDelta_88._clearSpeedRight = $808fc7
Bank80.asm:5444:1: Bank80.TileFuncLookup = $80a12b
sharedWRAM.asm:44:1: Bank80.oldJoyUp = $800094
Bank80.asm:3382:1: Bank80.UpdateBulletEndYColl = $809306
Bank80.asm:3384:1: Bank80.UpdateBulletEndYColl._ASSERT_axy8 = $809306
Bank80.asm:3383:1: Bank80.UpdateBulletEndYColl._ASSERT_jsr = $809306
Bank80.asm:3391:1: Bank80.UpdateBulletEndYColl._updateY = $809314
Bank80.asm:3396:1: Bank80.UpdateBulletEndYColl._checkX = $80931e
Bank80.asm:4297:1: Bank80.entGhostXResults = $809944
Bank80.asm:4298:1: Bank80.entGhostXResults._ASSERT_axy8 = $809944
Bank80.asm:4308:2: Bank80.entGhostXResults._toggleXForce = $809956
Bank80.asm:4316:1: Bank80.entGhostXResults._addXDelta = $809965
Bank80.asm:4302:2: Bank80.entGhostXResults._toggleX = $80994a
Bank80.asm:4323:1: Bank80.entGhostXResults._ignoreCollision = $809974
Bank80.asm:1139:1: Bank80.scanJoystick_88 = $80855d
Bank80.asm:1142:1: Bank80.scanJoystick_88._ASSERT_axy8 = $80855d
Bank80.asm:1168:1: Bank80.scanJoystick_88._checkUD = $808576
Bank80.asm:1173:1: Bank80.scanJoystick_88._checkFire = $80857c
Bank80.asm:1203:1: Bank80.scanJoystick_88._joyY = $8085b1
Bank80.asm:1178:1: Bank80.scanJoystick_88._checkB = $808581
Bank80.asm:1216:1: Bank80.scanJoystick_88._joyRight = $8085c1
Bank80.asm:1207:1: Bank80.scanJoystick_88._joyDown = $8085b6
Bank80.asm:1141:1: Bank80.scanJoystick_88._ASSERT_jsr = $80855d
Bank80.asm:1199:1: Bank80.scanJoystick_88._joyUp = $8085ac
Bank80.asm:1212:1: Bank80.scanJoystick_88._joyLeft = $8085bc
Bank80.asm:1182:1: Bank80.scanJoystick_88._joyEnd = $808587
Bank80.asm:3839:1: Bank80.entUpNoDelta = $809607
Bank80.asm:3840:1: Bank80.entUpNoDelta._ASSERT_axy8 = $809607
Bank80.asm:1433:1: Bank80.plotStringAAtIndexXGameScreen = $8086f7
Bank80.asm:1435:1: Bank80.plotStringAAtIndexXGameScreen._ASSERT_axy8 = $8086f7
Bank80.asm:1434:1: Bank80.plotStringAAtIndexXGameScreen._ASSERT_jsr = $8086f7
../music/music.asm:51:1: Bank80.kAPU2 = $2142
../music/music.asm:52:1: Bank80.kAPU3 = $2143
../music/music.asm:48:1: Bank80.kAPU0 = $2140
../music/music.asm:49:1: Bank80.kAPU1 = $2141
Bank80.asm:1421:1: Bank80.WallCharLUT = $8086ef
Bank80.asm:1422:2: Bank80.WallCharLUT._offset = 512
Bank80.asm:1423:2: Bank80.WallCharLUT._values = [$828200,$828880,$828f00,$829580]
Bank80.asm:3021:1: Bank80.enterOnGround = $8090e8
Bank80.asm:3023:1: Bank80.enterOnGround._ASSERT_axy8 = $8090e8
Bank80.asm:3022:1: Bank80.enterOnGround._ASSERT_jsr = $8090e8
../music/music.asm:479:1: Bank80.SFX_Play_Center = $80bf20
Bank80.asm:20:1: Bank80.kEntsSpriteOffset = 2
sharedWRAM.asm:17:1: Bank80.mBG3VOFS = $800067
QWAKSNES.asm:217:3: Bank80.mBG3VOFS.lo = $800067
QWAKSNES.asm:218:3: Bank80.mBG3VOFS.hi = $800068
Bank80.asm:15:1: Bank80.kTileXCount = 16
Bank80.asm:4842:1: Bank80.allEntFrames := (8320,8322,8324,8326,8352,8354,8356,8358,8268,8270,8328,8330,8332,8334,8392,8394,8384,8386,8388,8390,8416,8418,8420,8422,8448,8450,8452,8454,24832,24834,24836,24838,8480,8482,8484,8486,24864,24866,24868,24870,8512,8514,8516,8518,8544,8546,8548,8550,8576,8578,8580,8582,8608,8610,8612,8614,8640,8642,8644,8646,8672,8674,8676,8678,8448,8452,8456,8460,8512,8516,8448,8452,8456,8460,8512,8516,8520,8524,8576,8580,8520,8524,8576,8580,8456,8460,8520)
Bank80.asm:5527:1: Bank80.potionFunc = $80a1c1
Bank80.asm:5528:1: Bank80.potionFunc._ASSERT_axy8 = $80a1c1
Bank80.asm:5532:1: Bank80.potionFunc._loop = $80a1c8
Bank80.asm:5539:1: Bank80.potionFunc._next = $80a1d7
Bank80.asm:3233:1: Bank80.FlapLeftFrames = (25608,25612)
Bank80.asm:2817:1: Bank80.kJumpIndexs = $808f90
Bank80.asm:2819:2: Bank80.kJumpIndexs.floaty = 2
Bank80.asm:2818:2: Bank80.kJumpIndexs.normal = 0
Bank80.asm:2713:1: Bank80.BCDELUT = $808ec0
sharedWRAM.asm:72:1: Bank80.bulletFrame = $8002a4
Bank80.asm:2737:1: Bank80.toolToTileLUT = $808ed0
Bank80.asm:2933:1: Bank80.falling = $809047
Bank80.asm:2934:1: Bank80.falling._ASSERT_axy8 = $809047
Bank80.asm:101:1: Bank80.ClearWRAM = $80801d
Bank80.asm:5607:1: Bank80.animateDoor_88 = $80a235
Bank80.asm:5609:1: Bank80.animateDoor_88._ASSERT_axy8 = $80a235
Bank80.asm:5608:1: Bank80.animateDoor_88._ASSERT_jsr = $80a235
Bank80.asm:17:1: Bank80.kLevelSizeMax = 192
sharedWRAM.asm:48:1: Bank80.joyUpStop = $800098
Bank80.asm:3653:1: Bank80.setEntitySprites = $8094ce
Bank80.asm:3655:1: Bank80.setEntitySprites._ASSERT_axy8 = $8094ce
Bank80.asm:3654:1: Bank80.setEntitySprites._ASSERT_jsr = $8094ce
Bank80.asm:3696:1: Bank80.setEntitySprites._bossOctopuss = $809514
Bank80.asm:3679:1: Bank80.setEntitySprites._loop = $8094f9
Bank80.asm:3687:1: Bank80.setEntitySprites._bossBear = $809502
Bank80.asm:3684:1: Bank80.setEntitySprites._exit2 = $809501
Bank80.asm:3674:1: Bank80.setEntitySprites._exit = $8094ef
Bank80.asm:3658:2: Bank80.setEntitySprites._active = $8094d3
Bank80.asm:3671:2: Bank80.setEntitySprites._nextEnt = $8094ec
Bank80.asm:3322:1: Bank80.removeBullet = $8092a3
Bank80.asm:3324:1: Bank80.removeBullet._ASSERT_axy8 = $8092a3
Bank80.asm:3323:1: Bank80.removeBullet._ASSERT_jsr = $8092a3
Bank80.asm:5849:1: Bank80.PASSWORD_LIVES = $80bd2c
sharedWRAM.asm:52:1: Bank80.PlayerData = $8000b4
qwak_structs.asm:44:1: Bank80.PlayerData.hasJumpedNZ = $8000bd
qwak_structs.asm:65:1: Bank80.PlayerData.flashColour = $8000cf
qwak_structs.asm:63:1: Bank80.PlayerData.exitAtIndex = $8000ce
qwak_structs.asm:61:1: Bank80.PlayerData.numBulletEgg = $8000cd
qwak_structs.asm:47:1: Bank80.PlayerData.startedJumpLR = $8000c0
qwak_structs.asm:66:1: Bank80.PlayerData.baseFlashTimeDelta = $8000d0
qwak_structs.asm:49:1: Bank80.PlayerData.slowMoveNZ = $8000c2
qwak_structs.asm:54:1: Bank80.PlayerData.currAnim = $8000c7
qwak_structs.asm:41:1: Bank80.PlayerData.floatTimer = $8000bb
qwak_structs.asm:35:1: Bank80.PlayerData.minorState = $8000b5
qwak_structs.asm:58:1: Bank80.PlayerData.bulletUD = $8000ca
qwak_structs.asm:43:1: Bank80.PlayerData.onGroundNZ = $8000bc
qwak_structs.asm:53:1: Bank80.PlayerData.yDeltaAccum = $8000c5
QWAKSNES.asm:217:3: Bank80.PlayerData.yDeltaAccum.lo = $8000c5
QWAKSNES.asm:218:3: Bank80.PlayerData.yDeltaAccum.hi = $8000c6
qwak_structs.asm:59:1: Bank80.PlayerData.bulletLR = $8000cb
qwak_structs.asm:51:1: Bank80.PlayerData.forceJumpNZ = $8000c4
qwak_structs.asm:45:1: Bank80.PlayerData.isFallingNZ = $8000be
qwak_structs.asm:40:1: Bank80.PlayerData.canFloatNZ = $8000ba
qwak_structs.asm:37:1: Bank80.PlayerData.deadNZ = $8000b6
qwak_structs.asm:55:1: Bank80.PlayerData.frameOffset = $8000c8
qwak_structs.asm:60:1: Bank80.PlayerData.bulletBurstNZ = $8000cc
qwak_structs.asm:34:1: Bank80.PlayerData.state = $8000b4
qwak_structs.asm:50:1: Bank80.PlayerData.hitBubbleNum = $8000c3
qwak_structs.asm:57:1: Bank80.PlayerData.bulletActive = $8000c9
qwak_structs.asm:39:1: Bank80.PlayerData.shieldTimer = $8000b8
QWAKSNES.asm:217:3: Bank80.PlayerData.shieldTimer.lo = $8000b8
QWAKSNES.asm:218:3: Bank80.PlayerData.shieldTimer.hi = $8000b9
qwak_structs.asm:46:1: Bank80.PlayerData.facingRight = $8000bf
qwak_structs.asm:38:1: Bank80.PlayerData.hasShieldNZ = $8000b7
qwak_structs.asm:48:1: Bank80.PlayerData.movingLRNZ = $8000c1
sharedWRAM.asm:47:1: Bank80.joyUpStart = $800097
Bank80.asm:29:1: Bank80.kTiles = $808000
Bank80.asm:56:2: Bank80.kTiles.diss = 20
Bank80.asm:47:2: Bank80.kTiles.shield = 13
Bank80.asm:32:2: Bank80.kTiles.wall = 1
Bank80.asm:48:2: Bank80.kTiles.spring = 14
Bank80.asm:42:2: Bank80.kTiles.key1 = 9
Bank80.asm:30:2: Bank80.kTiles.back = 0
Bank80.asm:49:2: Bank80.kTiles.potion = 15
Bank80.asm:45:2: Bank80.kTiles.key4 = 12
Bank80.asm:33:2: Bank80.kTiles.wall1 = 2
Bank80.asm:53:2: Bank80.kTiles.player = 18
Bank80.asm:35:2: Bank80.kTiles.wall3 = 4
Bank80.asm:40:2: Bank80.kTiles.fruit = 8
Bank80.asm:57:2: Bank80.kTiles.dissNoColide = 33
Bank80.asm:36:2: Bank80.kTiles.wall4 = 5
Bank80.asm:43:2: Bank80.kTiles.key2 = 10
Bank80.asm:44:2: Bank80.kTiles.key3 = 11
Bank80.asm:65:2: Bank80.kTiles.intermissionOldWall = 37
Bank80.asm:39:2: Bank80.kTiles.flower = 7
Bank80.asm:59:2: Bank80.kTiles.underHangStart = 34
Bank80.asm:34:2: Bank80.kTiles.wall2 = 3
Bank80.asm:63:2: Bank80.kTiles.middlesideShadow = 38
Bank80.asm:64:2: Bank80.kTiles.topLeftCorner = 39
Bank80.asm:60:2: Bank80.kTiles.underHang = 35
Bank80.asm:55:2: Bank80.kTiles.pipe = 19
Bank80.asm:61:2: Bank80.kTiles.shadowOpenCorner = 36
Bank80.asm:52:2: Bank80.kTiles.exit = 17
Bank80.asm:38:2: Bank80.kTiles.spike = 6
Bank80.asm:50:2: Bank80.kTiles.egg = 16
Bank80.asm:62:2: Bank80.kTiles.sideShadow = 37
../music/music.asm:738:1: Bank80.SPC_All_Echo = $80bffa
Bank80.asm:4823:1: Bank80.OctopussRawFramesRight = (8460,8512,8516)
Bank80.asm:3772:1: Bank80.EntitiesActive = $809574
Bank80.asm:1310:1: Bank80.FlowerScore = $808628
Bank80.asm:2364:1: Bank80.END_LEFT_RIGHT_CHECK = $808cd7
Bank80.asm:2384:2: Bank80.END_LEFT_RIGHT_CHECK._testC = $808cf7
Bank80.asm:2405:1: Bank80.END_LEFT_RIGHT_CHECK._noE = $808d1a
Bank80.asm:2381:2: Bank80.END_LEFT_RIGHT_CHECK._noB = $808cf4
Bank80.asm:2397:1: Bank80.END_LEFT_RIGHT_CHECK._doneFirstRow = $808d0c
Bank80.asm:2394:2: Bank80.END_LEFT_RIGHT_CHECK._noRight = $808d09
Bank80.asm:5856:1: Bank80.kSFX = $80bd62
Bank80.asm:5858:2: Bank80.kSFX.DOOROPEN = 1
Bank80.asm:5864:2: Bank80.kSFX.JUMP = 7
Bank80.asm:5860:2: Bank80.kSFX.FLOWER = 3
Bank80.asm:5857:2: Bank80.kSFX.DOORCLOSE = 0
Bank80.asm:5863:2: Bank80.kSFX.POWERUP = 6
Bank80.asm:5859:2: Bank80.kSFX.COINS = 2
Bank80.asm:5862:2: Bank80.kSFX.BUBBLE = 5
Bank80.asm:5861:2: Bank80.kSFX.HURT = 4
Bank80.asm:3765:1: Bank80.updateEntitiesLoop = $809570
Bank80.asm:2822:1: Bank80.kPlayerParams = $808f90
Bank80.asm:2825:2: Bank80.kPlayerParams.jumpDeltaAccumFloat = 4
Bank80.asm:2823:2: Bank80.kPlayerParams.jumpStartDelta = 254
Bank80.asm:2824:2: Bank80.kPlayerParams.jumpDeltaAccum = 19
Bank80.asm:2826:2: Bank80.kPlayerParams.maxFallSpeed = 4
Bank80.asm:1311:1: Bank80.KeyScore = $808630
Bank80.asm:1660:1: Bank80.pltScore = $808824
Bank80.asm:1662:1: Bank80.pltScore._ASSERT_axy8 = $808824
Bank80.asm:1661:1: Bank80.pltScore._ASSERT_jsr = $808824
Bank80.asm:1663:1: Bank80.pltScore._statusScore = $7e264e
Bank80.asm:3812:1: Bank80.entRight = $8095d1
Bank80.asm:3813:1: Bank80.entRight._ASSERT_axy8 = $8095d1
Bank80.asm:3229:1: Bank80.WalkLeftFrames = (25632,25634,25636,25638)
Bank80.asm:5224:1: Bank80.newCollision = $809fe9
Bank80.asm:5226:1: Bank80.newCollision._ASSERT_axy8 = $809fe9
Bank80.asm:5225:1: Bank80.newCollision._ASSERT_jsr = $809fe9
Bank80.asm:4834:1: Bank80.OctopussBodyRawFramesLeft = (8520,8524)
Bank80.asm:1490:1: Bank80.kStatusAttributes = $20
Bank80.asm:3333:1: Bank80.bulletExit = $8092b3
Bank80.asm:3746:1: Bank80.updateEntities = $80954a
Bank80.asm:3748:1: Bank80.updateEntities._ASSERT_axy8 = $80954a
Bank80.asm:3747:1: Bank80.updateEntities._ASSERT_jsr = $80954a
Bank80.asm:1384:1: Bank80.clearScreenMirrorToEmptyChar = $8086b4
Bank80.asm:1386:1: Bank80.clearScreenMirrorToEmptyChar._ASSERT_axy8 = $8086b4
Bank80.asm:1385:1: Bank80.clearScreenMirrorToEmptyChar._ASSERT_jsr = $8086b4
sharedWRAM.asm:45:1: Bank80.oldJoyDown = $800095
Bank80.asm:3100:1: Bank80.setPlayerSpritePtrFromFrameNumber_88 = $80915a
Bank80.asm:3102:1: Bank80.setPlayerSpritePtrFromFrameNumber_88._ASSERT_axy8 = $80915a
Bank80.asm:3101:1: Bank80.setPlayerSpritePtrFromFrameNumber_88._ASSERT_jsr = $80915a
sharedWRAM.asm:76:1: Bank80.mplexBuffer = $800396
qwak_structs.asm:102:1: Bank80.mplexBuffer.xmsb = $8003b7
qwak_structs.asm:101:1: Bank80.mplexBuffer.xpos = $800396
qwak_structs.asm:103:1: Bank80.mplexBuffer.ypos = $8003d8
Bank80.asm:4149:1: Bank80.springEntYCollideEnd = $809848
Bank80.asm:4150:1: Bank80.springEntYCollideEnd._ASSERT_axy8 = $809848
Bank80.asm:4167:1: Bank80.springEntYCollideEnd._ASSERT_A_lt_34 = $809868
Bank80.asm:4171:1: Bank80.springEntYCollideEnd._hit = $80986d
Bank80.asm:4166:1: Bank80.springEntYCollideEnd._store = $809868
Bank80.asm:4174:2: Bank80.springEntYCollideEnd._ASSERT2_A_lt_34 = $809871
Bank80.asm:5835:1: Bank80.MUSIC = $80bc8a
Bank80.asm:3996:1: Bank80.spiderFall = $809726
Bank80.asm:3997:1: Bank80.spiderFall._ASSERT_axy8 = $809726
Bank80.asm:4021:1: Bank80.spiderFall._noColide = $80975a
Bank80.asm:4013:2: Bank80.spiderFall._collide = $80974b
Bank80.asm:4822:1: Bank80.OctopussRawFramesLeft = (8448,8452,8456)
Bank80.asm:1644:1: Bank80.plot3EmptyStatusCharToZPLong = $808813
Bank80.asm:1646:1: Bank80.plot3EmptyStatusCharToZPLong._ASSERT_axy8 = $808813
Bank80.asm:1645:1: Bank80.plot3EmptyStatusCharToZPLong._ASSERT_jsr = $808813
Bank80.asm:2964:1: Bank80.StartJump = $809073
Bank80.asm:2965:1: Bank80.StartJump._ASSERT_axy8 = $809073
Bank80.asm:69:1: Bank80.kDoorOpen = 14
Bank80.asm:4549:1: Bank80.entBoss = $809aeb
Bank80.asm:4550:1: Bank80.entBoss._ASSERT_axy8 = $809aeb
Bank80.asm:3231:1: Bank80.JumpLeftFrames = (25664,25666)
Bank80.asm:666:1: Bank80.TSWaitForFire = $8083f5
Bank80.asm:667:1: Bank80.TSWaitForFire._ASSERT_axy8 = $8083f5
Bank80.asm:783:1: Bank80.TSWaitForFire._exit = $808409
Bank80.asm:5837:1: Bank80.NONE = $80bc94
Bank80.asm:18:1: Bank80.kSprBase = 0
Bank80.asm:567:1: Bank80.playerDead = $808344
Bank80.asm:579:1: Bank80.playerDead._exit = $80835b
Bank80.asm:580:1: Bank80.playerDead._waitForAnimation = $80835d
Bank80.asm:592:1: Bank80.playerDead._gameOver = $808372
Bank80.asm:5846:1: Bank80.SNESMUSIC = $80bd18
Bank80.asm:1765:1: Bank80.kSpriteEmptyVal = 224
Bank80.asm:2045:1: Bank80.Ent16_16_ORVal = $808ac8
Bank80.asm:4817:1: Bank80.BearRawFramesRight = (8460,8512,8516)
Bank80.asm:2942:1: Bank80.OnGround = $809053
Bank80.asm:2943:1: Bank80.OnGround._ASSERT_axy8 = $809053
Bank80.asm:2950:1: Bank80.OnGround._skip = $809060
sharedWRAM.asm:19:1: Bank80.mBG4VOFS = $80006b
QWAKSNES.asm:217:3: Bank80.mBG4VOFS.lo = $80006b
QWAKSNES.asm:218:3: Bank80.mBG4VOFS.hi = $80006c
Bank80.asm:4824:1: Bank80.OctopussEntAnimData = (70,73,3,4,2,4)
Bank80.asm:2451:1: Bank80.pltSingleTileNoLookup = $808d51
Bank80.asm:2454:1: Bank80.pltSingleTileNoLookup._ASSERT_axy8 = $808d51
Bank80.asm:2453:1: Bank80.pltSingleTileNoLookup._ASSERT_jsr = $808d51
Bank80.asm:3461:1: Bank80.PlayerBulletFrames = (9420,9422,9452,9454,9676)
Bank80.asm:1051:1: Bank80.GoSetup = $8084ea
Bank80.asm:1052:1: Bank80.GoSetup._ASSERT_axy8 = $8084ea
Bank80.asm:1071:1: Bank80.GoSetup._clearScore = $80850b
Bank80.asm:1085:1: Bank80.GoSetup._higher = $808523
Bank80.asm:1067:1: Bank80.GoSetup._next = $808506
Bank80.asm:301:1: Bank80.NMIFast = $808174
Bank80.asm:311:1: Bank80.NMIFast._ready = $808183
Bank80.asm:337:1: Bank80.NMIFast._Notvisible = $8081ba
Bank80.asm:4794:1: Bank80.SpiderRawFramesWaitRight = (8516,8518)
Bank80.asm:5550:1: Bank80.shildFunction = $80a1e5
Bank80.asm:5551:1: Bank80.shildFunction._ASSERT_axy8 = $80a1e5
Bank80.asm:913:1: Bank80.TSStartGame = $80840a
Bank80.asm:914:1: Bank80.TSStartGame._ASSERT_axy8 = $80840a
Bank80.asm:5449:1: Bank80.fruitFunc = $80a14f
Bank80.asm:5451:1: Bank80.fruitFunc._ASSERT_axy8 = $80a14f
Bank80.asm:5450:1: Bank80.fruitFunc._ASSERT_jsr = $80a14f
Bank80.asm:1116:1: Bank80.kTimers = $80854f
Bank80.asm:1119:2: Bank80.kTimers.DoorAnimeRate = 10
Bank80.asm:1118:2: Bank80.kTimers.floatTimer = $50
Bank80.asm:1120:2: Bank80.kTimers.spawnBubble = 30
Bank80.asm:1117:2: Bank80.kTimers.dissBlocksValue = $8
Bank80.asm:5197:1: Bank80.Ent_Ent_Coll_skipSelf = $809fc7
Bank80.asm:4507:1: Bank80.updateBubbles = $809a9b
Bank80.asm:4509:1: Bank80.updateBubbles._ASSERT_axy8 = $809a9b
Bank80.asm:4508:1: Bank80.updateBubbles._ASSERT_jsr = $809a9b
Bank80.asm:4515:1: Bank80.updateBubbles._findFreeEnt = $809aa8
Bank80.asm:4544:1: Bank80.updateBubbles._store = $809ae7
Bank80.asm:4546:1: Bank80.updateBubbles._exit = $809aea
Bank80.asm:4522:1: Bank80.updateBubbles._foundOne = $809ab5
../music/music.asm:497:1: Bank80.SFX_Play_common = $80bf30
sharedWRAM.asm:12:1: Bank80.mBG1HOFS = $80005d
QWAKSNES.asm:217:3: Bank80.mBG1HOFS.lo = $80005d
QWAKSNES.asm:218:3: Bank80.mBG1HOFS.hi = $80005e
Bank80.asm:4771:1: Bank80.WormRawFramesRight = (8416,8418,8420,8422)
Bank80.asm:3226:1: Bank80.RightFrames = (9216,)
../music/music.asm:62:1: Bank80.kSCMD_GLOBAL_VOLUME = $04
Bank80.asm:4488:1: Bank80.updateEntAnimAndSetSprite = $809a7a
Bank80.asm:4490:1: Bank80.updateEntAnimAndSetSprite._ASSERT_axy8 = $809a7a
Bank80.asm:4489:1: Bank80.updateEntAnimAndSetSprite._ASSERT_jsr = $809a7a
Bank80.asm:4503:1: Bank80.updateEntAnimAndSetSprite._notAnimUpdate = $809a9a
Bank80.asm:3734:1: Bank80.addYDeltaEnt = $80953d
Bank80.asm:3736:1: Bank80.addYDeltaEnt._ASSERT_axy8 = $80953d
Bank80.asm:3735:1: Bank80.addYDeltaEnt._ASSERT_jsr = $80953d
Bank80.asm:2956:1: Bank80.AbortJump = $809068
Bank80.asm:2957:1: Bank80.AbortJump._ASSERT_axy8 = $809068
Bank80.asm:5851:1: Bank80.PASSWORD_SPRING = $80bd44
Bank80.asm:4470:1: Bank80.setEntFrameForDir = $809a65
Bank80.asm:4471:1: Bank80.setEntFrameForDir._ASSERT_axy8 = $809a65
Bank80.asm:1470:1: Bank80.kSBC = $80872a
Bank80.asm:1487:2: Bank80.kSBC.Digits = 240
Bank80.asm:1478:2: Bank80.kSBC.B = 251
Bank80.asm:1482:2: Bank80.kSBC.Score = 223
Bank80.asm:1477:2: Bank80.kSBC.BL = 250
Bank80.asm:1471:2: Bank80.kSBC.M = 205
Bank80.asm:1475:2: Bank80.kSBC.L = 208
Bank80.asm:1486:2: Bank80.kSBC.Flower = 236
Bank80.asm:1483:2: Bank80.kSBC.High = 229
Bank80.asm:1484:2: Bank80.kSBC.QwakP = 232
Bank80.asm:1472:2: Bank80.kSBC.TL = 206
Bank80.asm:1476:2: Bank80.kSBC.R = 210
Bank80.asm:1480:2: Bank80.kSBC.QWAKT = 211
Bank80.asm:1479:2: Bank80.kSBC.BR = 252
Bank80.asm:1485:2: Bank80.kSBC.X = 204
Bank80.asm:1481:2: Bank80.kSBC.QWAKB = 217
Bank80.asm:1473:2: Bank80.kSBC.T = 207
Bank80.asm:1474:2: Bank80.kSBC.TR = 209
Bank80.asm:6:1: Bank80.kVRAM = $808000
Bank80.asm:8:2: Bank80.kVRAM.gameScreen = 1024
Bank80.asm:12:2: Bank80.kVRAM.Sprite = 16384
Bank80.asm:7:2: Bank80.kVRAM.titleScreen = 0
Bank80.asm:10:2: Bank80.kVRAM.fontDest = 2560
Bank80.asm:9:2: Bank80.kVRAM.font = 2048
Bank80.asm:11:2: Bank80.kVRAM.gameChars = 4096
Bank80.asm:4556:1: Bank80.BossLut = $809af5
Bank80.asm:5802:1: Bank80.kStrings = $80bbfc
Bank80.asm:5805:2: Bank80.kStrings.cx16port = 4
Bank80.asm:5814:2: Bank80.kStrings.none = 22
Bank80.asm:5807:2: Bank80.kStrings.art = 8
Bank80.asm:5816:2: Bank80.kStrings.version = 26
Bank80.asm:5813:2: Bank80.kStrings.sfx = 20
Bank80.asm:5818:2: Bank80.kStrings.passwordBlank = 30
Bank80.asm:5811:2: Bank80.kStrings.didi = 16
Bank80.asm:5815:2: Bank80.kStrings.both = 24
Bank80.asm:5810:2: Bank80.kStrings.soci = 14
Bank80.asm:5819:2: Bank80.kStrings.optiroc = 32
Bank80.asm:5806:2: Bank80.kStrings.program = 6
Bank80.asm:5808:2: Bank80.kStrings.music = 10
Bank80.asm:5803:2: Bank80.kStrings.gameOver = 0
Bank80.asm:5820:2: Bank80.kStrings.snesMusic = 34
Bank80.asm:5817:2: Bank80.kStrings.password = 28
Bank80.asm:5809:2: Bank80.kStrings.specialThanks = 12
Bank80.asm:5804:2: Bank80.kStrings.original = 2
Bank80.asm:5812:2: Bank80.kStrings.saul = 18
sharedWRAM.asm:75:1: Bank80.tileMapTemp = $8002a6
sharedWRAM.asm:26:1: Bank80.mWH3 = $800079
../music/music.asm:59:1: Bank80.kSCMD_INITIALIZE = $01
sharedWRAM.asm:3:1: Bank80.mOBSEL = $80004b
Bank80.asm:5867:1: Bank80.kMus = $80bd62
Bank80.asm:5869:2: Bank80.kMus.THEME_1 = 1
Bank80.asm:5871:2: Bank80.kMus.BOSS = 3
Bank80.asm:5870:2: Bank80.kMus.THEME_2 = 2
Bank80.asm:5872:2: Bank80.kMus.THEME_3 = 4
Bank80.asm:5868:2: Bank80.kMus.TITLE = 0
Bank80.asm:1312:1: Bank80.BossScore = $808638
sharedWRAM.asm:28:1: Bank80.mOBJLOG = $80007d
../music/music.asm:304:1: Bank80.SPC_Command_ASM = $80be89
Bank80.asm:3200:1: Bank80.awardLife_88 = $8091dc
Bank80.asm:3202:1: Bank80.awardLife_88._ASSERT_axy8 = $8091dc
Bank80.asm:3201:1: Bank80.awardLife_88._ASSERT_jsr = $8091dc
Bank80.asm:4677:1: Bank80.isTypeBoss = $809bd8
Bank80.asm:4680:1: Bank80.isTypeBoss._ASSERT_axy8 = $809bd8
Bank80.asm:4687:1: Bank80.isTypeBoss._notBoss = $809be4
Bank80.asm:4679:1: Bank80.isTypeBoss._ASSERT_jsr = $809bd8
Bank80.asm:4690:1: Bank80.isTypeBoss._boss = $809be6
Bank80.asm:3947:1: Bank80.SpiderEntFuncLUT = $8096cb
Bank80.asm:5629:1: Bank80.animateInternal_88 = $80a257
Bank80.asm:5631:1: Bank80.animateInternal_88._ASSERT_axy8 = $80a257
Bank80.asm:5630:1: Bank80.animateInternal_88._ASSERT_jsr = $80a257
Bank80.asm:3750:1: Bank80.innerEntitiesLoop = $80954c
Bank80.asm:4797:1: Bank80.SpiderRawAnimData = (40,42,2,8,0,0)
Bank80.asm:3235:1: Bank80.ExitFrames = (9312,9314,25696,25698)
Bank80.asm:555:1: Bank80.incLevelGraphicSet = $808338
Bank80.asm:557:1: Bank80.incLevelGraphicSet._ASSERT_axy8 = $808338
Bank80.asm:556:1: Bank80.incLevelGraphicSet._ASSERT_jsr = $808338
../music/music.asm:15:1: Bank80.LOROM = 1
Bank80.asm:987:1: Bank80.interMovePlayer = $808481
Bank80.asm:988:1: Bank80.interMovePlayer._ASSERT_axy8 = $808481
Bank80.asm:363:1: Bank80.PlayerCodeLUT = $8081d5
Bank80.asm:3810:1: Bank80.entNegativeTBLUD = $8095cf
../music/music.asm:442:1: Bank80.Music_Pause = $80bf03
../music/music.asm:58:1: Bank80.kSCMD_NONE = $00
../music/music.asm:42:1: Bank80.kFULL_VOL = 127
Bank80.asm:2213:1: Bank80.ScreenMirror = $7e2000
Bank80.asm:2314:1: Bank80.tileIsSafeToChange_88 = $808cae
Bank80.asm:2318:1: Bank80.tileIsSafeToChange_88._ASSERT_axy8 = $808cae
Bank80.asm:2317:1: Bank80.tileIsSafeToChange_88._ASSERT_jsr = $808cae
Bank80.asm:2324:1: Bank80.tileIsSafeToChange_88._yes = $808cb8
Bank80.asm:3248:1: Bank80.PlayerFrameSpec := [(0,0,(9216,),0,255),(0,0,(25600,),0,255),(0,1,(9248,9250,9252,9254),0,8),(0,1,(25632,25634,25636,25638),0,8),(0,1,(9280,9282),0,8),(0,1,(25664,25666),0,8),(2,1,(9224,9228),0,8),(2,1,(25608,25612),-16,8),(1,1,(9284,9286,9288,9290),0,8),(0,1,(9312,9314,25696,25698),0,8)]
Bank80.asm:4029:1: Bank80.spiderRise = $809769
Bank80.asm:4030:1: Bank80.spiderRise._ASSERT_axy8 = $809769
Bank80.asm:3178:1: Bank80.clearPlayerStuct_88 = $8091c7
Bank80.asm:3180:1: Bank80.clearPlayerStuct_88._ASSERT_axy8 = $8091c7
Bank80.asm:3179:1: Bank80.clearPlayerStuct_88._ASSERT_jsr = $8091c7
Bank80.asm:4884:1: Bank80.SinJumpTable = $809d1f
Bank80.asm:3783:1: Bank80.entNormalMovement = $80959a
Bank80.asm:3785:1: Bank80.entNormalMovement._ASSERT_axy8 = $80959a
Bank80.asm:3784:1: Bank80.entNormalMovement._ASSERT_jsr = $80959a
Bank80.asm:5674:1: Bank80.Level04 = $80a52c
Bank80.asm:5677:1: Bank80.Level07 = $80a793
Bank80.asm:5676:1: Bank80.Level06 = $80a6c2
Bank80.asm:2183:1: Bank80.dmaScreenMirrorToTitleScreen_xx = $808bf9
Bank80.asm:2184:1: Bank80.dmaScreenMirrorToTitleScreen_xx._ASSERT_JSR = $808bf9
Bank80.asm:5673:1: Bank80.Level03 = $80a461
Bank80.asm:5672:1: Bank80.Level02 = $80a394
sharedWRAM.asm:68:1: Bank80.PasswordRedBullets = $800299
Bank80.asm:4918:1: Bank80.BaseAnimeFrameForDir = $809dc1
Bank80.asm:5679:1: Bank80.Level09 = $80a92f
Bank80.asm:5678:1: Bank80.Level08 = $80a866
../music/music.asm:53:1: Bank80.kAPU23 = $2142
Bank80.asm:287:1: Bank80.NMIReadyNF = $0035
../music/music.asm:365:1: Bank80.SPC_Global_Volume = $80bec4
sharedWRAM.asm:13:1: Bank80.mBG1VOFS = $80005f
QWAKSNES.asm:217:3: Bank80.mBG1VOFS.lo = $80005f
QWAKSNES.asm:218:3: Bank80.mBG1VOFS.hi = $800060
Bank80.asm:527:1: Bank80.playerExit = $808306
Bank80.asm:539:1: Bank80.playerExit._exit = $80831e
Bank80.asm:540:1: Bank80.playerExit._waitForAnimation = $808320
Bank80.asm:1629:1: Bank80.plotStatusRangeY = $808800
Bank80.asm:1631:1: Bank80.plotStatusRangeY._ASSERT_axy8 = $808800
Bank80.asm:1630:1: Bank80.plotStatusRangeY._ASSERT_jsr = $808800
Bank80.asm:2081:1: Bank80.dmaLevelChars_xx = $808b15
Bank80.asm:2082:1: Bank80.dmaLevelChars_xx._ASSERT_JSR = $808b15
Bank80.asm:5671:1: Bank80.fileTileMap = $80a2c7
Bank80.asm:4830:1: Bank80.BearBodyAnimData = (76,78,2,4,2,5)
Bank80.asm:3859:1: Bank80.entLeftNoDelta = $80962e
Bank80.asm:3860:1: Bank80.entLeftNoDelta._ASSERT_axy8 = $80962e
sharedWRAM.asm:11:1: Bank80.mBG23NBA = $80005b
Bank80.asm:2044:1: Bank80.EntUpperANDMask = $808ac4
Bank80.asm:4773:1: Bank80.WormRawAnimData = (16,20,4,8,0,0)
Bank80.asm:90:1: Bank80.RESETHi = $80800b
sharedWRAM.asm:57:1: Bank80.PasswordTemp = $80027b
sharedWRAM.asm:61:2: Bank80.PasswordTemp.high = $800283
sharedWRAM.asm:60:2: Bank80.PasswordTemp.score = $80027d
sharedWRAM.asm:58:2: Bank80.PasswordTemp.lives = $80027b
sharedWRAM.asm:59:2: Bank80.PasswordTemp.flowers = $80027c
sharedWRAM.asm:62:2: Bank80.PasswordTemp.currLevel = $800289
Bank80.asm:5624:1: Bank80.aDexit = $80a256
Bank80.asm:4785:1: Bank80.GhostRawAnimData = (32,36,4,8,0,0)
Bank80.asm:5675:1: Bank80.Level05 = $80a5fb
../music/music.asm:83:1: Bank80.spc_pointer = $003f
Bank80.asm:3877:1: Bank80.entDownNoDelta = $809651
Bank80.asm:3878:1: Bank80.entDownNoDelta._ASSERT_axy8 = $809651
../music/music.asm:64:1: Bank80.kSCMD_MUSIC_PLAY = $06
Bank80.asm:75:1: Bank80.kShieldTimer = 500
Bank80.asm:1624:1: Bank80.StatusRangePairsLUT = $8087f8
Bank80.asm:1625:2: Bank80.StatusRangePairsLUT.start = $8087f8
Bank80.asm:1626:2: Bank80.StatusRangePairsLUT.end = $8087fc
sharedWRAM.asm:49:1: Bank80.joyFireEvent = $800099
Bank80.asm:4811:1: Bank80.CirclerRawFramesRight = (8672,8674,8676,8678)
Bank80.asm:22:1: Bank80.kBounds = $808000
Bank80.asm:26:2: Bank80.kBounds.screenMaxY = 192
Bank80.asm:23:2: Bank80.kBounds.screenMinX = 0
Bank80.asm:4374:1: Bank80.entBat = $8099cd
Bank80.asm:4375:1: Bank80.entBat._ASSERT_axy8 = $8099cd
Bank80.asm:5130:1: Bank80.collideAgainstRestEntry = $809f50
Bank80.asm:4293:1: Bank80.ghostLeft = $809941
Bank80.asm:1648:1: Bank80.plot2EmptyStatusCharToZPLong = $808816
Bank80.asm:4940:1: Bank80.checkSpriteToCharCollision_88 = $809df5
Bank80.asm:4942:1: Bank80.checkSpriteToCharCollision_88._ASSERT_axy8 = $809df5
Bank80.asm:4941:1: Bank80.checkSpriteToCharCollision_88._ASSERT_JSR = $809df5
Bank80.asm:4993:1: Bank80.checkSpriteToCharCollision_88._skipBL = $809e64
Bank80.asm:5002:1: Bank80.checkSpriteToCharCollision_88._skipBR = $809e74
Bank80.asm:4966:1: Bank80.checkSpriteToCharCollision_88._otherIsSame = $809e2b
Bank80.asm:4986:1: Bank80.checkSpriteToCharCollision_88._skipTR = $809e58
Bank80.asm:4608:1: Bank80.BossMoveTimerLut = $809b62
../music/music.asm:79:1: Bank80.spc_temp = $0037
Bank80.asm:2694:1: Bank80.removeAllTilesOf_88 = $808ea4
Bank80.asm:2696:1: Bank80.removeAllTilesOf_88._ASSERT_axy8 = $808ea4
Bank80.asm:2695:1: Bank80.removeAllTilesOf_88._ASSERT_jsr = $808ea4
Bank80.asm:2700:1: Bank80.removeAllTilesOf_88._loop = $808eaa
Bank80.asm:2706:1: Bank80.removeAllTilesOf_88._next = $808eb7
Bank80.asm:2221:1: Bank80.plotTileMap_88 = $808c2f
Bank80.asm:2223:1: Bank80.plotTileMap_88._ASSERT_axy8 = $808c2f
Bank80.asm:2274:1: Bank80.plotTileMap_88._exit = $808c87
Bank80.asm:2222:1: Bank80.plotTileMap_88._ASSERT_jsr = $808c2f
Bank80.asm:2240:1: Bank80.plotTileMap_88._pltY = $808c49
Bank80.asm:2243:1: Bank80.plotTileMap_88._pltX = $808c4c
../music/music.asm:45:1: Bank80.kPAN_RIGHT = 255
sharedWRAM.asm:38:1: Bank80.joyRight = $80008e
Bank80.asm:2984:1: Bank80.handleFall = $80909f
Bank80.asm:2985:1: Bank80.handleFall._ASSERT_axy8 = $80909f
Bank80.asm:3004:1: Bank80.handleFall._dontStopFloat = $8090c6
Bank80.asm:3012:1: Bank80.handleFall._checkUpStart = $8090d6
Bank80.asm:2995:1: Bank80.handleFall._didntJustStartFalling = $8090b2
Bank80.asm:2046:1: Bank80.Ent16_32_ORVal = $808acc
sharedWRAM.asm:31:1: Bank80.mTMW = $800083
Bank80.asm:4829:1: Bank80.BearBodyRawFramesRight = (8576,8580)
../music/music.asm:69:1: Bank80.kSCMD_STREAM_START = $0b
Bank80.asm:4795:1: Bank80.SpiderRawFramesFallLeft = (8544,8546)
Bank80.asm:3035:1: Bank80.changePlayerDir = $809102
Bank80.asm:3036:1: Bank80.changePlayerDir._ASSERT_axy8 = $809102
Bank80.asm:2837:1: Bank80.kIntermission = $808f90
Bank80.asm:2838:2: Bank80.kIntermission.firstExit = 80
Bank80.asm:2839:2: Bank80.kIntermission.secondExit = 95
Bank80.asm:2295:1: Bank80.tileIsWall_88 = $808c9d
Bank80.asm:2298:1: Bank80.tileIsWall_88._ASSERT_axy8 = $808c9d
Bank80.asm:2297:1: Bank80.tileIsWall_88._ASSERT_jsr = $808c9d
Bank80.asm:2306:1: Bank80.tileIsWall_88._yes = $808cab
Bank80.asm:2308:1: Bank80.tileIsWall_88._no = $808cac
Bank80.asm:602:1: Bank80.EndOfGameLoop = $80837f
Bank80.asm:603:1: Bank80.EndOfGameLoop._ASSERT_axy8 = $80837f
Bank80.asm:609:1: Bank80.EndOfGameLoop._noBulletStart = $80838d
Bank80.asm:1612:1: Bank80.kStatusRanges = $8087f8
Bank80.asm:1615:2: Bank80.kStatusRanges.High = 2
Bank80.asm:1613:2: Bank80.kStatusRanges.Score = 0
Bank80.asm:1616:2: Bank80.kStatusRanges.QWAKB = 3
Bank80.asm:1614:2: Bank80.kStatusRanges.QWAKT = 1
Bank80.asm:2047:1: Bank80.Ent32_32_ORVal = $808ad0
sharedWRAM.asm:73:1: Bank80.disableUpdateSpritesXYToOAMNF = $8002a5
sharedWRAM.asm:70:1: Bank80.PasswordLevelSkip = $80029b
Bank80.asm:1302:1: Bank80.kScoreIndex = $808620
Bank80.asm:1303:2: Bank80.kScoreIndex.fruit = 0
Bank80.asm:1304:2: Bank80.kScoreIndex.flower = 1
Bank80.asm:1305:2: Bank80.kScoreIndex.key = 2
Bank80.asm:1306:2: Bank80.kScoreIndex.boss = 3
sharedWRAM.asm:64:1: Bank80.ActivePassword = $80028a
Bank80.asm:67:1: Bank80.kKeyToWallDelta = 7
sharedWRAM.asm:8:1: Bank80.mBG3SC = $800055
Bank80.asm:1403:1: Bank80.clearScreenMirrorCommon_16x = $8086c9
Bank80.asm:1404:1: Bank80.clearScreenMirrorCommon_16x._ASSERT_a16 = $8086c9
Bank80.asm:4328:1: Bank80.entGhostCheckY = $80997d
Bank80.asm:4343:1: Bank80.entGhostCheckY._down = $809996
Bank80.asm:4903:1: Bank80.CircleJumpTableCount = 48
Bank80.asm:5445:1: Bank80.TileFuncLUT = $80a137
Bank80.asm:5423:1: Bank80.checkActionTile = $80a114
Bank80.asm:5425:1: Bank80.checkActionTile._ASSERT_axy8 = $80a114
Bank80.asm:5437:1: Bank80.checkActionTile._ASSERT_Y_LT_12 = $80a125
Bank80.asm:5424:1: Bank80.checkActionTile._ASSERT_jsr = $80a114
Bank80.asm:5436:1: Bank80.checkActionTile._found = $80a125
Bank80.asm:5516:1: Bank80.springFunc = $80a1b3
Bank80.asm:5517:1: Bank80.springFunc._ASSERT_axy8 = $80a1b3
Bank80.asm:1771:1: Bank80.disableAllEntSprites_88 = $8088cb
Bank80.asm:1773:1: Bank80.disableAllEntSprites_88._ASSERT_axy8 = $8088cb
Bank80.asm:1772:1: Bank80.disableAllEntSprites_88._ASSERT_jsr = $8088cb
Bank80.asm:68:1: Bank80.kDoorClosed = 10
../music/music.asm:43:1: Bank80.kPAN_CENTER = 128
Bank80.asm:1316:1: Bank80.PlotTransitionScreenAndMakeNextChars = $808640
Bank80.asm:1318:1: Bank80.PlotTransitionScreenAndMakeNextChars._ASSERT_axy8 = $808640
Bank80.asm:1317:1: Bank80.PlotTransitionScreenAndMakeNextChars._ASSERT_jsr = $808640
Bank80.asm:1369:1: Bank80.PlotTransitionScreenAndMakeNextChars._secondLoop = $8086a6
Bank80.asm:1356:1: Bank80.PlotTransitionScreenAndMakeNextChars._firstLoop = $808692
../music/music.asm:82:1: Bank80.save_stack = $003d
Bank80.asm:3122:1: Bank80.updatePlayerAnim_88 = $80917d
Bank80.asm:3124:1: Bank80.updatePlayerAnim_88._ASSERT_axy8 = $80917d
Bank80.asm:3144:1: Bank80.updatePlayerAnim_88._store = $80919b
Bank80.asm:3123:1: Bank80.updatePlayerAnim_88._ASSERT_jsr = $80917d
Bank80.asm:3134:1: Bank80.updatePlayerAnim_88._skip = $80918d
Bank80.asm:3137:1: Bank80.updatePlayerAnim_88._itTime = $80918e
Bank80.asm:4802:1: Bank80.kSpiderFallAnimOffset = 4
sharedWRAM.asm:21:1: Bank80.mW34SEL = $80006f
sharedWRAM.asm:40:1: Bank80.joyDown = $800090
Bank80.asm:270:1: Bank80.MainLoopWait = $808157
Bank80.asm:5836:1: Bank80.SFX = $80bc90
Bank80.asm:5337:1: Bank80.checkSolidTile = $80a09d
Bank80.asm:5339:1: Bank80.checkSolidTile._ASSERT_axy8 = $80a09d
Bank80.asm:5338:1: Bank80.checkSolidTile._ASSERT_jsr = $80a09d
Bank80.asm:5359:1: Bank80.checkSolidTile._checkNotShadow = $80a0bc
Bank80.asm:5362:1: Bank80.checkSolidTile._exitSafe = $80a0c0
Bank80.asm:5344:1: Bank80.checkSolidTile._skipDoorCheck = $80a0a6
Bank80.asm:5355:1: Bank80.checkSolidTile._notsafe = $80a0ba
Bank80.asm:4747:1: Bank80.kESprFlags = 32
Bank80.asm:2504:1: Bank80.convertIndexToScreenAndCRAM = $808d9a
Bank80.asm:2507:1: Bank80.convertIndexToScreenAndCRAM._ASSERT_axy8 = $808d9a
Bank80.asm:2506:1: Bank80.convertIndexToScreenAndCRAM._ASSERT_jsr = $808d9a
Bank80.asm:5841:1: Bank80.MARTINPIPER = $80bcc6
Bank80.asm:4766:1: Bank80.SpringRawAnimData = (8,8,8,2,1,0)
Bank80.asm:1223:1: Bank80.addXWithMSBAndClip_88 = $8085c7
Bank80.asm:1225:1: Bank80.addXWithMSBAndClip_88._ASSERT_axy8 = $8085c7
Bank80.asm:1224:1: Bank80.addXWithMSBAndClip_88._ASSERT_jsr = $8085c7
Bank80.asm:1247:1: Bank80.addXWithMSBAndClip_88._justStore = $8085e8
Bank80.asm:1244:1: Bank80.addXWithMSBAndClip_88._wentUnder = $8085e3
Bank80.asm:1785:1: Bank80.clearSpritesMirror_xx = $8088de
Bank80.asm:1786:1: Bank80.clearSpritesMirror_xx._ASSERT_JSR = $8088de
Bank80.asm:1921:1: Bank80.Ent16_16 = $8089d3
Bank80.asm:1922:1: Bank80.Ent16_16._ASSERT_axy8 = $8089d3
Bank80.asm:3227:1: Bank80.LeftFrames = (25600,)
Bank80.asm:4796:1: Bank80.SpiderRawFramesFallRight = (8548,8550)
Bank80.asm:1012:1: Bank80.interEnterDoor = $8084ae
Bank80.asm:1013:1: Bank80.interEnterDoor._ASSERT_axy8 = $8084ae
Bank80.asm:1037:1: Bank80.interEnterDoor._exit = $8084dd
Bank80.asm:1026:2: Bank80.interEnterDoor._bossLevel = $8084c6
Bank80.asm:4435:1: Bank80.nextEnt = $809a36
Bank80.asm:4714:1: Bank80.hurtBoss = $809bf4
Bank80.asm:4716:1: Bank80.hurtBoss._ASSERT_axy8 = $809bf4
Bank80.asm:4734:1: Bank80.hurtBoss._exit = $809c1c
Bank80.asm:4715:1: Bank80.hurtBoss._ASSERT_jsr = $809bf4
Bank80.asm:4736:1: Bank80.hurtBoss._killedBoss = $809c1d
Bank80.asm:5151:1: Bank80.collideEntAgainstRest = $809f78
Bank80.asm:5153:1: Bank80.collideEntAgainstRest._ASSERT_axy8 = $809f78
Bank80.asm:5152:1: Bank80.collideEntAgainstRest._ASSERT_jsr = $809f78
Bank80.asm:268:1: Bank80.MainLoop = $808155
Bank80.asm:3488:1: Bank80.kFishLimits = $8093a3
Bank80.asm:3489:2: Bank80.kFishLimits.startTwo = 181
Bank80.asm:3490:2: Bank80.kFishLimits.maxY = 197
Bank80.asm:369:1: Bank80.playerAppear = $8081e1
sharedWRAM.asm:2:1: Bank80.mINIDISP = $800049
../music/music.asm:539:1: Bank80.SFX_Play_Right = $80bf5d
Bank80.asm:2344:1: Bank80.calcBCDEforTileY_88 = $808cba
Bank80.asm:2346:1: Bank80.calcBCDEforTileY_88._ASSERT_axy8 = $808cba
Bank80.asm:2363:1: Bank80.calcBCDEforTileY_88._canDoRight = $808cd7
Bank80.asm:2345:1: Bank80.calcBCDEforTileY_88._ASSERT_jsr = $808cba
Bank80.asm:2354:1: Bank80.calcBCDEforTileY_88._canDoLeft = $808cc7
Bank80.asm:4818:1: Bank80.BearEntAnimData = (64,67,3,4,2,4)
Bank80.asm:406:1: Bank80.playerNormal = $808226
Bank80.asm:490:1: Bank80.playerNormal._addY = $8082b7
Bank80.asm:438:6: Bank80.playerNormal._skipDeath = $80826f
Bank80.asm:449:2: Bank80.playerNormal._checkBossDeath = $808282
Bank80.asm:455:1: Bank80.playerNormal._noSpriteCollision = $80828b
Bank80.asm:453:1: Bank80.playerNormal._normalEnt = $808289
Bank80.asm:521:1: Bank80.playerNormal._noShield = $808304
Bank80.asm:469:1: Bank80.playerNormal._skipDeathCheck = $8082a4
Bank80.asm:441:2: Bank80.playerNormal._bossBounce = $808273
Bank80.asm:4859:1: Bank80.EntityAnimData = $809cdf
Bank80.asm:4861:2: Bank80.EntityAnimData.frameRate = $809ced
Bank80.asm:4862:2: Bank80.EntityAnimData.frameSize = $809cfb
Bank80.asm:4860:2: Bank80.EntityAnimData.frameCount = $809cdf
Bank80.asm:4863:2: Bank80.EntityAnimData.collisionBox = $809d09
sharedWRAM.asm:79:1: Bank80.OAMMirror = $800405
../music/music.asm:338:1: Bank80.SPC_Stereo = $80beb4
Bank80.asm:3888:1: Bank80.entFishFunc = $809665
Bank80.asm:3889:1: Bank80.entFishFunc._ASSERT_axy8 = $809665
Bank80.asm:3905:1: Bank80.entFishFunc._moveFish = $809682
Bank80.asm:3925:1: Bank80.entFishFunc._store = $8096a7
Bank80.asm:3902:1: Bank80.entFishFunc._next = $80967d
Bank80.asm:3912:1: Bank80.entFishFunc._storeDirect = $80968e
Bank80.asm:3899:1: Bank80.entFishFunc._exit = $80967a
Bank80.asm:3914:1: Bank80.entFishFunc._keepGoing = $809691
Bank80.asm:3933:1: Bank80.entFishFunc._safe = $8096b5
sharedWRAM.asm:35:1: Bank80.mNMITIMEN = $80008b
Bank80.asm:1766:1: Bank80.SpriteEmptyVal = $8088c9
Bank80.asm:2106:1: Bank80.dmaFixedChars_xx = $808b48
Bank80.asm:2107:1: Bank80.dmaFixedChars_xx._ASSERT_JSR = $808b48
Bank80.asm:4844:1: Bank80.BossDummyAnimData = (87,87,2,12,2,6)
Bank80.asm:2674:1: Bank80.countTempMapTile_88 = $808e93
Bank80.asm:2678:1: Bank80.countTempMapTile_88._ASSERT_axy8 = $808e93
Bank80.asm:2677:1: Bank80.countTempMapTile_88._ASSERT_jsr = $808e93
Bank80.asm:2685:1: Bank80.countTempMapTile_88._skip = $808e9d
Bank80.asm:2681:1: Bank80.countTempMapTile_88._loop = $808e97
Bank80.asm:5850:1: Bank80.PASSWORD_RED = $80bd38
Bank80.asm:2829:1: Bank80.kPlayerStateExit = $808f90
Bank80.asm:2830:2: Bank80.kPlayerStateExit.waitForAnimation = 0
Bank80.asm:5705:1: Bank80.TitleScreenData = $80bbb4
Bank80.asm:5744:1: Bank80.TitleScreenData.G3 = ((16,10,17),(18,13,11),(18,13,12),(34,2,13),(32,12,18))
Bank80.asm:5724:1: Bank80.TitleScreenData.Code = (6,7,10)
Bank80.asm:5725:1: Bank80.TitleScreenData.Art = (8,7,11)
Bank80.asm:5730:1: Bank80.TitleScreenData.Saul1 = (18,13,11)
Bank80.asm:5731:1: Bank80.TitleScreenData.Saul2 = (18,13,12)
Bank80.asm:5752:1: Bank80.TitleScreenData.allPos = (8464,8576,8710,8846,8910,8974,9100,9230,9300,8922,8986,9028,9368,8982)
Bank80.asm:5742:1: Bank80.TitleScreenData.G1 = ((26,8,4),(2,0,6),(4,3,8),(6,7,10))
Bank80.asm:5750:1: Bank80.TitleScreenData.string = $80bbc4
Bank80.asm:5739:1: Bank80.TitleScreenData.MusicSNES = (34,2,13)
Bank80.asm:5707:1: Bank80.TitleScreenData.SpriteStruct = $80bbb4
Bank80.asm:5709:2: Bank80.TitleScreenData.SpriteStruct._WDef = 12680
Bank80.asm:5711:2: Bank80.TitleScreenData.SpriteStruct._KDef = 12744
Bank80.asm:5710:2: Bank80.TitleScreenData.SpriteStruct._ADef = 12684
Bank80.asm:5708:2: Bank80.TitleScreenData.SpriteStruct._QDef = 12620
Bank80.asm:5713:2: Bank80.TitleScreenData.SpriteStruct.sprites = $80bbb4
Bank80.asm:5717:2: Bank80.TitleScreenData.SpriteStruct.kUpper = $aa
Bank80.asm:5737:1: Bank80.TitleScreenData.Password = (28,5,19)
Bank80.asm:5743:1: Bank80.TitleScreenData.G2 = ((8,7,11),(10,7,12),(12,6,14),(14,7,16))
Bank80.asm:5727:1: Bank80.TitleScreenData.Special = (12,6,14)
Bank80.asm:5733:1: Bank80.TitleScreenData.Both = (24,7,22)
Bank80.asm:5736:1: Bank80.TitleScreenData.None = (22,30,22)
Bank80.asm:5734:1: Bank80.TitleScreenData.Music2 = (10,15,22)
Bank80.asm:5723:1: Bank80.TitleScreenData.Ported = (4,3,8)
Bank80.asm:5738:1: Bank80.TitleScreenData.PasswordBlank = (30,14,20)
Bank80.asm:5729:1: Bank80.TitleScreenData.Didi = (16,10,17)
Bank80.asm:5728:1: Bank80.TitleScreenData.Soci = (14,7,16)
Bank80.asm:5732:1: Bank80.TitleScreenData.Optiroc = (32,12,18)
Bank80.asm:5722:1: Bank80.TitleScreenData.Original = (2,0,6)
Bank80.asm:5721:1: Bank80.TitleScreenData.Version = (26,8,4)
Bank80.asm:5726:1: Bank80.TitleScreenData.Music = (10,7,12)
Bank80.asm:5754:1: Bank80.TitleScreenData.stringPos = $80bbe0
Bank80.asm:5735:1: Bank80.TitleScreenData.SFX = (20,24,22)
Bank80.asm:5747:1: Bank80.TitleScreenData.AllStrings = ((26,8,4),(2,0,6),(4,3,8),(6,7,10),(8,7,11),(10,7,12),(12,6,14),(14,7,16),(16,10,17),(18,13,11),(18,13,12),(34,2,13),(32,12,18))
Bank80.asm:4784:1: Bank80.GhostRawFramesRight = (24864,24866,24868,24870)
Bank80.asm:5125:1: Bank80.collidePlayerAgainstRest = $809f4c
Bank80.asm:5127:1: Bank80.collidePlayerAgainstRest._ASSERT_axy8 = $809f4c
Bank80.asm:5126:1: Bank80.collidePlayerAgainstRest._ASSERT_jsr = $809f4c
Bank80.asm:3038:1: Bank80.changePlayerAnimForCurrentDir = $809105
Bank80.asm:3039:1: Bank80.changePlayerAnimForCurrentDir._ASSERT_axy8 = $809105
Bank80.asm:3057:1: Bank80.changePlayerAnimForCurrentDir._notMoving = $809122
Bank80.asm:3046:1: Bank80.changePlayerAnimForCurrentDir._notFlap = $809110
Bank80.asm:3052:1: Bank80.changePlayerAnimForCurrentDir._onGround = $809119
Bank80.asm:3059:1: Bank80.changePlayerAnimForCurrentDir._still = $809124
Bank80.asm:3274:1: Bank80.PlayerColourLUT = $809256
Bank80.asm:3276:2: Bank80.PlayerColourLUT.lo = $809256
Bank80.asm:3277:2: Bank80.PlayerColourLUT.hi = $809258
Bank80.asm:3275:2: Bank80.PlayerColourLUT._colours = (16250,28144)
Bank80.asm:16:1: Bank80.kTileYCount = 12
Bank80.asm:4900:1: Bank80.CircleJumpTableStart = $809d64
Bank80.asm:5830:1: Bank80.ORIGINAL = $80bc2a
Bank80.asm:4176:1: Bank80.springEntHandleX = $809874
Bank80.asm:4194:1: Bank80.springEntHandleX._left = $809899
Bank80.asm:4805:1: Bank80.FishRawFramesDown = (8608,8610,8612,8614)
Bank80.asm:620:1: Bank80.titleScreenLoop = $80839a
Bank80.asm:621:1: Bank80.titleScreenLoop._ASSERT_axy8 = $80839a
Bank80.asm:1125:1: Bank80.updateTickdowns_88 = $80854f
Bank80.asm:1127:1: Bank80.updateTickdowns_88._ASSERT_axy8 = $80854f
Bank80.asm:1126:1: Bank80.updateTickdowns_88._ASSERT_jsr = $80854f
Bank80.asm:1129:1: Bank80.updateTickdowns_88._l = $808551
Bank80.asm:1132:1: Bank80.updateTickdowns_88._next = $808559
../music/music.asm:68:1: Bank80.kSCMD_STOP_ALL_SOUNDS = $0a
Bank80.asm:3230:1: Bank80.JumpRightFrames = (9280,9282)
Bank80.asm:1909:1: Bank80.EntSpriteConvertToOAMIndex = $8089c8
Bank80.asm:1910:1: Bank80.EntSpriteConvertToOAMIndex._ASSERT_axy8 = $8089c8
Bank80.asm:4111:1: Bank80.springEntFunc = $809802
Bank80.asm:4145:1: Bank80.springEntFunc._falling = $809843
Bank80.asm:4117:1: Bank80.springEntFunc._move = $80980c
Bank80.asm:5833:1: Bank80.ART = $80bc79
Bank80.asm:5322:1: Bank80.doMinMaxBitTest = $80a093
Bank80.asm:5324:1: Bank80.doMinMaxBitTest._ASSERT_axy8 = $80a093
Bank80.asm:5328:1: Bank80.doMinMaxBitTest._secPass = $80a099
Bank80.asm:5323:1: Bank80.doMinMaxBitTest._ASSERT_jsr = $80a093
Bank80.asm:5330:1: Bank80.doMinMaxBitTest._secFail = $80a09a
Bank80.asm:3940:1: Bank80.entSpiderFunc = $8096c1
Bank80.asm:3941:1: Bank80.entSpiderFunc._ASSERT_axy8 = $8096c1
Bank80.asm:3085:1: Bank80.setPlayerAnimeTo_88 = $809147
Bank80.asm:3087:1: Bank80.setPlayerAnimeTo_88._ASSERT_axy8 = $809147
Bank80.asm:3086:1: Bank80.setPlayerAnimeTo_88._ASSERT_jsr = $809147
Bank80.asm:3095:1: Bank80.setPlayerAnimeTo_88._dontchange = $809159
sharedWRAM.asm:46:1: Bank80.oldJoyFire = $800096
sharedWRAM.asm:27:1: Bank80.mWBGLOG = $80007b
Bank80.asm:5655:1: Bank80.setAnimateDoorToClose_88 = $80a279
Bank80.asm:5657:1: Bank80.setAnimateDoorToClose_88._ASSERT_axy8 = $80a279
Bank80.asm:5656:1: Bank80.setAnimateDoorToClose_88._ASSERT_jsr = $80a279
sharedWRAM.asm:10:1: Bank80.mBG12NBA = $800059
Bank80.asm:3314:1: Bank80.updateBullet = $809299
Bank80.asm:3316:1: Bank80.updateBullet._ASSERT_axy8 = $809299
Bank80.asm:3315:1: Bank80.updateBullet._ASSERT_jsr = $809299
Bank80.asm:4762:1: Bank80.HeliRawAnimData = (0,0,8,8,0,0)
sharedWRAM.asm:50:1: Bank80.GameData = $80009a
qwak_structs.asm:5:1: Bank80.GameData.high = $8000a2
qwak_structs.asm:7:1: Bank80.GameData.exitOpenNZ = $8000a9
qwak_structs.asm:4:1: Bank80.GameData.score = $80009c
qwak_structs.asm:2:1: Bank80.GameData.lives = $80009a
qwak_structs.asm:3:1: Bank80.GameData.flowers = $80009b
qwak_structs.asm:8:1: Bank80.GameData.musicMode = $8000aa
qwak_structs.asm:6:1: Bank80.GameData.currLevel = $8000a8
Bank80.asm:4835:1: Bank80.OctopussBodyRawFramesRight = (8576,8580)
Bank80.asm:5682:1: Bank80.Level12 = $80ab96
Bank80.asm:5683:1: Bank80.Level13 = $80ac65
Bank80.asm:5680:1: Bank80.Level10 = $80aa00
Bank80.asm:5681:1: Bank80.Level11 = $80aac7
Bank80.asm:5686:1: Bank80.Level16 = $80aed2
Bank80.asm:5687:1: Bank80.Level17 = $80afa1
Bank80.asm:5684:1: Bank80.Level14 = $80ad36
Bank80.asm:5685:1: Bank80.Level15 = $80ae09
Bank80.asm:5688:1: Bank80.Level18 = $80b072
Bank80.asm:5689:1: Bank80.Level19 = $80b143
Bank80.asm:4465:1: Bank80.setEntSpriteForDirection = $809a62
Bank80.asm:4467:1: Bank80.setEntSpriteForDirection._ASSERT_axy8 = $809a62
Bank80.asm:4466:1: Bank80.setEntSpriteForDirection._ASSERT_jsr = $809a62
../music/music.asm:74:1: Bank80.kSCMD_ECHO_FB_FIR = $0d
Bank80.asm:73:1: Bank80.kBossOctoBankOR = $10
Bank80.asm:4696:1: Bank80.isTypeBossBounceDetect = $809be8
Bank80.asm:4701:1: Bank80.isTypeBossBounceDetect._ASSERT_axy8 = $809be8
Bank80.asm:4700:1: Bank80.isTypeBossBounceDetect._ASSERT_jsr = $809be8
Bank80.asm:4708:1: Bank80.isTypeBossBounceDetect._yes = $809bf2
sharedWRAM.asm:32:1: Bank80.mTSW = $800085
sharedWRAM.asm:18:1: Bank80.mBG4HOFS = $800069
QWAKSNES.asm:217:3: Bank80.mBG4HOFS.lo = $800069
QWAKSNES.asm:218:3: Bank80.mBG4HOFS.hi = $80006a
Bank80.asm:1379:1: Bank80.kEmptyTileNum = 47
Bank80.asm:4816:1: Bank80.BearRawFramesLeft = (8448,8452,8456)
Bank80.asm:2408:1: Bank80.DoIndexCheck = $808d1d
Bank80.asm:5838:1: Bank80.BOTH = $80bc99
Bank80.asm:944:1: Bank80.interSetUp = $80843b
Bank80.asm:945:1: Bank80.interSetUp._ASSERT_axy8 = $80843b
Bank80.asm:5206:1: Bank80.hitY = $809fcf
Bank80.asm:5207:1: Bank80.hitY._ASSERT_axy8 = $809fcf
Bank80.asm:4881:1: Bank80.SpringDirectionToDeltaLUT = $809d17
Bank80.asm:5580:1: Bank80.exitFunc = $80a214
Bank80.asm:5582:1: Bank80.exitFunc._ASSERT_axy8 = $80a214
Bank80.asm:5581:1: Bank80.exitFunc._ASSERT_jsr = $80a214
Bank80.asm:5591:1: Bank80.exitFunc._notOpen = $80a229
sharedWRAM.asm:51:1: Bank80.LevelData = $8000ab
qwak_structs.asm:17:1: Bank80.LevelData.exitTargetFrame = $8000b1
qwak_structs.asm:14:1: Bank80.LevelData.playerIndex = $8000ad
qwak_structs.asm:16:1: Bank80.LevelData.exitFrame = $8000b0
qwak_structs.asm:18:1: Bank80.LevelData.exitFrameDelta = $8000b2
qwak_structs.asm:13:1: Bank80.LevelData.totalKeys = $8000ac
qwak_structs.asm:12:1: Bank80.LevelData.numKeysLeft = $8000ab
qwak_structs.asm:15:1: Bank80.LevelData.exitIndex = $8000ae
qwak_structs.asm:19:1: Bank80.LevelData.levelGraphicsSet = $8000b3
Bank80.asm:1767:1: Bank80.SpriteUpperEmpty = $8088ca
sharedWRAM.asm:41:1: Bank80.joyFire = $800091
Bank80.asm:3804:1: Bank80.ENTDirectionCheckFuncLUT = $8095c1
Bank80.asm:5875:1: Bank80.playSFX = $80bd62
Bank80.asm:2022:1: Bank80.entSpriteUpdateUpperFlagsGetIndexes = $808aad
Bank80.asm:2039:1: Bank80.entSpriteUpdateUpperFlagsGetIndexes._noMSB = $808ac3
Bank80.asm:3949:1: Bank80.spiderLookPlayer = $8096d1
Bank80.asm:3950:1: Bank80.spiderLookPlayer._ASSERT_axy8 = $8096d1
Bank80.asm:3972:2: Bank80.spiderLookPlayer._storeSprite = $8096fe
Bank80.asm:3981:1: Bank80.spiderLookPlayer._left = $80970d
Bank80.asm:3978:2: Bank80.spiderLookPlayer._noAnim = $80970a
sharedWRAM.asm:42:1: Bank80.oldJoyLeft = $800092
../music/music.asm:81:1: Bank80.gss_command = $003b
Bank80.asm:290:1: Bank80.DMAZero = $80816e
sharedWRAM.asm:69:1: Bank80.PasswordHaveSpring = $80029a
sharedWRAM.asm:22:1: Bank80.mWOBJSEL = $800071
Bank80.asm:1726:1: Bank80.pltFlowers = $808888
Bank80.asm:1728:1: Bank80.pltFlowers._ASSERT_axy8 = $808888
Bank80.asm:1727:1: Bank80.pltFlowers._ASSERT_jsr = $808888
Bank80.asm:1729:1: Bank80.pltFlowers._statusFlowers = $7e26ba
Bank80.asm:4045:1: Bank80.circlerFunc = $809789
Bank80.asm:4046:1: Bank80.circlerFunc._ASSERT_axy8 = $809789
Bank80.asm:4081:1: Bank80.circlerFunc._subbedX = $8097ce
Bank80.asm:4106:1: Bank80.circlerFunc._cirStore = $8097f9
Bank80.asm:4091:1: Bank80.circlerFunc._storeX = $8097dc
Bank80.asm:4051:1: Bank80.circlerFunc._cirActive = $809793
Bank80.asm:4090:1: Bank80.circlerFunc._loadX = $8097dc
Bank80.asm:5829:1: Bank80.GAMEOVER = $80bc20
Bank80.asm:3232:1: Bank80.FlapRightFrames = (9224,9228)
Bank80.asm:5854:1: Bank80.BossLevels = $80bd5c
sharedWRAM.asm:33:1: Bank80.mCOLDATA = $800087
Bank80.asm:4783:1: Bank80.GhostRawFramesLeft = (8480,8482,8484,8486)
sharedWRAM.asm:20:1: Bank80.mW12SEL = $80006d
Bank80.asm:3808:1: Bank80.entPositiveTBLUD = $8095cb
Bank80.asm:4793:1: Bank80.SpiderRawFramesWaitLeft = (8512,8514)
Bank80.asm:1746:1: Bank80.dmaOAM_xx = $8088a2
Bank80.asm:1747:1: Bank80.dmaOAM_xx._ASSERT_JSR = $8088a2
Bank80.asm:4866:1: Bank80.kSprites = $809d17
Bank80.asm:4874:2: Bank80.kSprites.springFall = 12
Bank80.asm:4867:2: Bank80.kSprites.fish = 48
Bank80.asm:4876:2: Bank80.kSprites.bulletSprite = 0
Bank80.asm:4870:2: Bank80.kSprites.springNormal = 8
Bank80.asm:4877:2: Bank80.kSprites.bulletSplat = 6
Bank80.asm:4878:2: Bank80.kSprites.bulletRed = 8
Bank80.asm:4873:2: Bank80.kSprites.springFull = 11
Bank80.asm:4869:2: Bank80.kSprites.spiderRight = 42
Bank80.asm:4871:2: Bank80.kSprites.springCompress = 9
Bank80.asm:4875:2: Bank80.kSprites.bubbles = 84
Bank80.asm:4868:2: Bank80.kSprites.spiderLeft = 40
Bank80.asm:4872:2: Bank80.kSprites.springExpand = 10
Bank80.asm:1395:1: Bank80.clearMapInScreenMirror = $8086c0
Bank80.asm:1397:1: Bank80.clearMapInScreenMirror._ASSERT_axy8 = $8086c0
Bank80.asm:1396:1: Bank80.clearMapInScreenMirror._ASSERT_jsr = $8086c0
sharedWRAM.asm:5:1: Bank80.mMOSIAC = $80004f
Bank80.asm:3719:1: Bank80.BuildEntCollisionTable = $80952f
Bank80.asm:3721:1: Bank80.BuildEntCollisionTable._ASSERT_axy8 = $80952f
Bank80.asm:3720:1: Bank80.BuildEntCollisionTable._ASSERT_jsr = $80952f
Bank80.asm:5842:1: Bank80.OPTIROC = $80bcd3
Bank80.asm:2207:1: Bank80.LevelCharsLUT = $808c27
../music/music.asm:254:1: Bank80.SPC_Play_Song = $80be4f
Bank80.asm:5699:1: Bank80.Level29 = $80b951
Bank80.asm:5698:1: Bank80.Level28 = $80b884
Bank80.asm:5693:1: Bank80.Level23 = $80b477
Bank80.asm:5692:1: Bank80.Level22 = $80b3ac
Bank80.asm:5691:1: Bank80.Level21 = $80b2db
Bank80.asm:5690:1: Bank80.Level20 = $80b212
Bank80.asm:5697:1: Bank80.Level27 = $80b7b1
Bank80.asm:5696:1: Bank80.Level26 = $80b6e0
Bank80.asm:5695:1: Bank80.Level25 = $80b615
Bank80.asm:5694:1: Bank80.Level24 = $80b542
Bank80.asm:3159:1: Bank80.setPlayerToIndexA = $8091ad
../music/music.asm:65:1: Bank80.kSCMD_MUSIC_STOP = $07
Bank80.asm:3480:1: Bank80.kBoss = $8093a3
Bank80.asm:3482:2: Bank80.kBoss.hitPointsOctopuss = 9
Bank80.asm:3483:2: Bank80.kBoss.deathAnimTime = 25
Bank80.asm:3481:2: Bank80.kBoss.hitPoints = 7
Bank80.asm:3485:2: Bank80.kBoss.dead = 1
Bank80.asm:3484:2: Bank80.kBoss.normal = 0
Bank80.asm:3189:1: Bank80.removePickups_88 = $8091d0
Bank80.asm:3191:1: Bank80.removePickups_88._ASSERT_axy8 = $8091d0
Bank80.asm:3190:1: Bank80.removePickups_88._ASSERT_jsr = $8091d0
Bank80.asm:5839:1: Bank80.SPECIALTHANKS = $80bc9e
Bank80.asm:2534:1: Bank80.convertIndexToEntSpriteXY = $808dbb
Bank80.asm:2536:1: Bank80.convertIndexToEntSpriteXY._ASSERT_axy8 = $808dbb
Bank80.asm:2535:1: Bank80.convertIndexToEntSpriteXY._ASSERT_jsr = $808dbb
../music/music.asm:44:1: Bank80.kPAN_LEFT = 0
Bank80.asm:5845:1: Bank80.PASSWORDBLANK = $80bd0b
Bank80.asm:5852:1: Bank80.PASSWORD_LEVEL = $80bd50
sharedWRAM.asm:16:1: Bank80.mBG3HOFS = $800065
QWAKSNES.asm:217:3: Bank80.mBG3HOFS.lo = $800065
QWAKSNES.asm:218:3: Bank80.mBG3HOFS.hi = $800066
Bank80.asm:3066:1: Bank80.incPlayerYDeltaAndReturn = $80912a
Bank80.asm:3068:1: Bank80.incPlayerYDeltaAndReturn._ASSERT_axy8 = $80912a
Bank80.asm:3067:1: Bank80.incPlayerYDeltaAndReturn._ASSERT_jsr = $80912a
Bank80.asm:4836:1: Bank80.OctopussBodyAnimData = (80,82,2,4,2,5)
Bank80.asm:5898:1: Bank80.MusTable = $80bd8b
Bank80.asm:3831:1: Bank80.entUp = $8095f6
Bank80.asm:3832:1: Bank80.entUp._ASSERT_axy8 = $8095f6
Bank80.asm:4779:1: Bank80.BatRawAnimData = (24,28,4,8,0,0)
Bank80.asm:5642:1: Bank80.setAnimateDoorToOpen_88 = $80a269
Bank80.asm:5644:1: Bank80.setAnimateDoorToOpen_88._ASSERT_axy8 = $80a269
Bank80.asm:5643:1: Bank80.setAnimateDoorToOpen_88._ASSERT_jsr = $80a269
../music/music.asm:394:1: Bank80.SPC_Channel_Volume = $80bedd
sharedWRAM.asm:37:1: Bank80.joyLeft = $80008d
Bank80.asm:5881:1: Bank80.playMusic = $80bd6b
Bank80.asm:1907:1: Bank80.ENTSpriteDispatchLUT = $8089c2
Bank80.asm:4828:1: Bank80.BearBodyRawFramesLeft = (8520,8524)
Bank80.asm:2465:1: Bank80.renderTile_88 = $808d5c
Bank80.asm:2467:1: Bank80.renderTile_88._ASSERT_axy8 = $808d5c
Bank80.asm:2466:1: Bank80.renderTile_88._ASSERT_jsr = $808d5c
Bank80.asm:5831:1: Bank80.CX16PORT = $80bc4b
Bank80.asm:1650:1: Bank80.plotEmptyStatusCharToZPLong = $808819
Bank80.asm:3850:1: Bank80.entLeft = $80961b
Bank80.asm:3851:1: Bank80.entLeft._ASSERT_axy8 = $80961b
Bank80.asm:940:1: Bank80.InterFuncLUT = $808435
Bank80.asm:4199:1: Bank80.springEntXCollideEnd = $8098a1
Bank80.asm:4205:3: Bank80.springEntXCollideEnd._hit = $8098ab
Bank80.asm:4222:3: Bank80.springEntXCollideEnd._noclip = $8098ca
Bank80.asm:4227:3: Bank80.springEntXCollideEnd._store = $8098d2
Bank80.asm:4211:2: Bank80.springEntXCollideEnd._noCollideRight = $8098b4
../music/music.asm:73:1: Bank80.kSCMD_ECHO_ADDR = $0c
sharedWRAM.asm:80:1: Bank80.OAMMirrorHigh = $800605
Bank80.asm:5069:1: Bank80.CSTCCX = $809ee0
Bank80.asm:5071:1: Bank80.CSTCCX._ASSERT_axy8 = $809ee0
Bank80.asm:5107:1: Bank80.CSTCCX._exit = $809f25
Bank80.asm:5070:1: Bank80.CSTCCX._ASSERT_jsr = $809ee0
Bank80.asm:5098:1: Bank80.CSTCCX._noX = $809f18
Bank80.asm:5103:1: Bank80.CSTCCX._checkRight = $809f1f
Bank80.asm:3155:1: Bank80.setPlayerToSpawnPoint_88 = $8091aa
Bank80.asm:3157:1: Bank80.setPlayerToSpawnPoint_88._ASSERT_axy8 = $8091aa
Bank80.asm:3156:1: Bank80.setPlayerToSpawnPoint_88._ASSERT_jsr = $8091aa
Bank80.asm:3505:1: Bank80.unpackEntityBytes = $8093a3
Bank80.asm:3507:1: Bank80.unpackEntityBytes._ASSERT_axy8 = $8093a3
Bank80.asm:3506:1: Bank80.unpackEntityBytes._ASSERT_jsr = $8093a3
Bank80.asm:3526:2: Bank80.unpackEntityBytes._l = $8093c9
Bank80.asm:3641:1: Bank80.unpackEntityBytes._BossOctopuss = $8094ba
Bank80.asm:3567:2: Bank80.unpackEntityBytes._setupBubbleLoop = $809417
Bank80.asm:3580:1: Bank80.unpackEntityBytes._BossBear = $80942f
Bank80.asm:3557:1: Bank80.unpackEntityBytes._e = $809404
Bank80.asm:3588:1: Bank80.unpackEntityBytes._sharedBoss = $809440
Bank80.asm:3577:1: Bank80.unpackEntityBytes._noPipes = $80942e
Bank80.asm:3551:2: Bank80.unpackEntityBytes._nextEnt = $8093fc
Bank80.asm:2925:1: Bank80.normalJumpUpdate = $80903b
Bank80.asm:4346:1: Bank80.entGhostYResults = $809999
Bank80.asm:4347:1: Bank80.entGhostYResults._ASSERT_axy8 = $809999
Bank80.asm:4369:1: Bank80.entGhostYResults._ignoreCollision = $8099c5
Bank80.asm:4351:2: Bank80.entGhostYResults._toggleY = $80999f
Bank80.asm:4360:2: Bank80.entGhostYResults._entHitAndGoNext = $8099b3
Bank80.asm:4362:1: Bank80.entGhostYResults._entGhostCheckSprites = $8099b6
Bank80.asm:5114:1: Bank80.CollisionBoxesH = $809f3e
Bank80.asm:1309:1: Bank80.FruitScore = $808620
Bank80.asm:3410:1: Bank80.UpdateBulletEndXColl = $809337
Bank80.asm:3412:1: Bank80.UpdateBulletEndXColl._ASSERT_axy8 = $809337
Bank80.asm:3411:1: Bank80.UpdateBulletEndXColl._ASSERT_jsr = $809337
Bank80.asm:3427:1: Bank80.UpdateBulletEndXColl._checkEnts = $809356
Bank80.asm:3446:2: Bank80.UpdateBulletEndXColl._exit2 = $809382
Bank80.asm:3457:1: Bank80.UpdateBulletEndXColl._found = $809393
Bank80.asm:3419:1: Bank80.UpdateBulletEndXColl._updateX = $809345
Bank80.asm:3448:1: Bank80.UpdateBulletEndXColl._boss = $809383
Bank80.asm:4812:1: Bank80.CirclerRawAnimData = (56,60,4,2,0,0)
Bank80.asm:2216:1: Bank80.ScreenUpdateRequiredN0 = $0036
Bank80.asm:5118:1: Bank80.collideBulletAgainstRest = $809f46
Bank80.asm:5120:1: Bank80.collideBulletAgainstRest._ASSERT_axy8 = $809f46
Bank80.asm:5119:1: Bank80.collideBulletAgainstRest._ASSERT_jsr = $809f46
Bank80.asm:1704:1: Bank80.pltLives = $808868
Bank80.asm:1706:1: Bank80.pltLives._ASSERT_axy8 = $808868
Bank80.asm:1705:1: Bank80.pltLives._ASSERT_jsr = $808868
Bank80.asm:1707:1: Bank80.pltLives._statusLives = $7e26b0
Bank80.asm:1721:1: Bank80.pltLives._safe = $808883
Bank80.asm:628:1: Bank80.TSSetup = $8083a8
Bank80.asm:629:1: Bank80.TSSetup._ASSERT_axy8 = $8083a8
../music/music.asm:66:1: Bank80.kSCMD_MUSIC_PAUSE = $08
../music/music.asm:84:1: Bank80.spc_music_load_adr = $0043
Bank80.asm:3349:1: Bank80.bulletNotDead = $8092c9
Bank80.asm:3351:1: Bank80.bulletNotDead._ASSERT_axy8 = $8092c9
Bank80.asm:3350:1: Bank80.bulletNotDead._ASSERT_jsr = $8092c9
Bank80.asm:3365:1: Bank80.bulletNotDead._bulletFull = $8092e7
Bank80.asm:1652:1: Bank80.plotStatusCharToZPLong = $80881b
../music/music.asm:72:1: Bank80.kSCMD_ECHO_VOL = $0b
../music/music.asm:67:1: Bank80.kSCMD_SFX_PLAY = $09
Bank80.asm:626:1: Bank80.TitleScreenLoopFuncLUT = $8083a2
sharedWRAM.asm:65:1: Bank80.PasswordEntryIndex = $800296
Bank80.asm:3820:1: Bank80.entRightNoDelta = $8095e2
Bank80.asm:3821:1: Bank80.entRightNoDelta._ASSERT_axy8 = $8095e2
../music/music.asm:420:1: Bank80.Music_Stop = $80bef6
Bank80.asm:4804:1: Bank80.FishRawFramesUp = (8576,8578,8580,8582)
sharedWRAM.asm:77:1: Bank80.PasswordRAMCache = $8003f9
Bank80.asm:5844:1: Bank80.PASSWORD = $80bcec
sharedWRAM.asm:55:1: Bank80.TICK_DOWN_END = $8000df
Bank80.asm:2445:1: Bank80.pltSingleTile = $808d4d
Bank80.asm:2448:1: Bank80.pltSingleTile._ASSERT_axy8 = $808d4d
Bank80.asm:2447:1: Bank80.pltSingleTile._ASSERT_jsr = $808d4d
Bank80.asm:3779:1: Bank80.EntUpdateFuncLUT = $80957e
Bank80.asm:4388:1: Bank80.entBatYResults = $8099e6
Bank80.asm:4393:1: Bank80.entBatYResults._dontFall = $8099ef
Bank80.asm:1380:1: Bank80.ClearEmptyTile = $8086b3
../music/music.asm:715:1: Bank80.SPC_Common_End = $80bff4
Bank80.asm:3870:1: Bank80.entDown = $809642
Bank80.asm:3871:1: Bank80.entDown._ASSERT_axy8 = $809642
Bank80.asm:3336:1: Bank80.burstBullet = $8092b4
Bank80.asm:3338:1: Bank80.burstBullet._ASSERT_axy8 = $8092b4
Bank80.asm:3337:1: Bank80.burstBullet._ASSERT_jsr = $8092b4
Bank80.asm:4261:1: Bank80.springEndAnimate = $809908
sharedWRAM.asm:4:1: Bank80.mBGMODE = $80004d
Bank80.asm:3282:1: Bank80.startBullet = $80925a
Bank80.asm:3284:1: Bank80.startBullet._ASSERT_axy8 = $80925a
Bank80.asm:3308:1: Bank80.startBullet._normal = $809293
Bank80.asm:3283:1: Bank80.startBullet._ASSERT_jsr = $80925a
Bank80.asm:3310:1: Bank80.startBullet._store = $809295
../music/music.asm:63:1: Bank80.kSCMD_CHANNEL_VOLUME = $05
Bank80.asm:4634:1: Bank80.AnimateLowerHalfBoss = $809b99
Bank80.asm:4636:1: Bank80.AnimateLowerHalfBoss._ASSERT_axy8 = $809b99
Bank80.asm:4645:1: Bank80.AnimateLowerHalfBoss._exit = $809bae
Bank80.asm:4635:1: Bank80.AnimateLowerHalfBoss._ASSERT_jsr = $809b99
Bank80.asm:347:1: Bank80.justRTI = $8081c7
sharedWRAM.asm:23:1: Bank80.mWH0 = $800073
sharedWRAM.asm:24:1: Bank80.mWH1 = $800075
sharedWRAM.asm:25:1: Bank80.mWH2 = $800077
Bank80.asm:5834:1: Bank80.SAUL = $80bc7d
Bank80.asm:1622:1: Bank80.StatusRangePairs := ((223,229),(211,217),(229,232),(217,223))
Bank80.asm:2052:1: Bank80.dmaPalletes_XX = $808ad4
Bank80.asm:2053:1: Bank80.dmaPalletes_XX._ASSERT_JSR = $808ad4
sharedWRAM.asm:39:1: Bank80.joyUp = $80008f
sharedWRAM.asm:67:1: Bank80.PasswordInfiLives = $800298
sharedWRAM.asm:9:1: Bank80.mBG4SC = $800057
sharedWRAM.asm:71:1: Bank80.checkSpriteToCharData = $80029c
qwak_structs.asm:94:1: Bank80.checkSpriteToCharData.xDeltaCheck = $80029c
QWAKSNES.asm:217:3: Bank80.checkSpriteToCharData.xDeltaCheck.lo = $80029c
QWAKSNES.asm:218:3: Bank80.checkSpriteToCharData.xDeltaCheck.hi = $80029d
qwak_structs.asm:96:1: Bank80.checkSpriteToCharData.xDeltaBackup = $8002a0
QWAKSNES.asm:217:3: Bank80.checkSpriteToCharData.xDeltaBackup.lo = $8002a0
QWAKSNES.asm:218:3: Bank80.checkSpriteToCharData.xDeltaBackup.hi = $8002a1
qwak_structs.asm:95:1: Bank80.checkSpriteToCharData.yDeltaCheck = $80029e
QWAKSNES.asm:217:3: Bank80.checkSpriteToCharData.yDeltaCheck.lo = $80029e
QWAKSNES.asm:218:3: Bank80.checkSpriteToCharData.yDeltaCheck.hi = $80029f
qwak_structs.asm:97:1: Bank80.checkSpriteToCharData.yDeltaBackup = $8002a2
QWAKSNES.asm:217:3: Bank80.checkSpriteToCharData.yDeltaBackup.lo = $8002a2
QWAKSNES.asm:218:3: Bank80.checkSpriteToCharData.yDeltaBackup.hi = $8002a3
Bank80.asm:5112:1: Bank80.CollisionBoxesW = $809f2e
Bank80.asm:5111:1: Bank80.CollisionBoxesX = $809f26
Bank80.asm:5113:1: Bank80.CollisionBoxesY = $809f36
Bank80.asm:1444:1: Bank80.psaaixCommon = $8086fd
Bank80.asm:1465:1: Bank80.psaaixCommon._done = $808729
Bank80.asm:5826:1: Bank80.StringTableLUT = $80bbfc
../music/music.asm:60:1: Bank80.kSCMD_LOAD = $02
Bank80.asm:4764:1: Bank80.SpringRawFrames = (8268,8270,8328,8330,8332,8334,8392,8394)
Bank80.asm:4610:1: Bank80.BossDeath = $809b64
Bank80.asm:4612:1: Bank80.BossDeath._ASSERT_axy8 = $809b64
Bank80.asm:4631:1: Bank80.BossDeath._exit = $809b96
Bank80.asm:4611:1: Bank80.BossDeath._ASSERT_jsr = $809b64
Bank80.asm:3707:1: Bank80.deactivateAllEntities = $809526
Bank80.asm:3709:1: Bank80.deactivateAllEntities._ASSERT_axy8 = $809526
Bank80.asm:3708:1: Bank80.deactivateAllEntities._ASSERT_jsr = $809526
../music/music.asm:80:1: Bank80.gss_param = $0039
Bank80.asm:5178:1: Bank80.collideAgainstEntPlayerEntry = $809fa0
Bank80.asm:5179:1: Bank80.collideAgainstEntPlayerEntry._ASSERT_axy8 = $809fa0
Bank80.asm:5669:1: Bank80.LevelTable = $80a289
Bank80.asm:5508:1: Bank80.spikeFunc = $80a1ad
Bank80.asm:5509:1: Bank80.spikeFunc._ASSERT_axy8 = $80a1ad
Bank80.asm:5300:1: Bank80.makeMinMaxXYForX = $80a069
Bank80.asm:5302:1: Bank80.makeMinMaxXYForX._ASSERT_axy8 = $80a069
Bank80.asm:5301:1: Bank80.makeMinMaxXYForX._ASSERT_jsr = $80a069
../music/music.asm:516:1: Bank80.SFX_Play_Left = $80bf4a
Bank80.asm:2279:1: Bank80.addShadowsToMap_88 = $808c88
Bank80.asm:2281:1: Bank80.addShadowsToMap_88._ASSERT_axy8 = $808c88
Bank80.asm:2280:1: Bank80.addShadowsToMap_88._ASSERT_jsr = $808c88
../music/music.asm:156:1: Bank80.SPC_Load_Data = $80bdc6
../music/music.asm:185:1: Bank80.SPC_Load_Data._load_loop = $80bdfe
Bank80.asm:3807:1: Bank80.entPositiveTBL = $8095c9
Bank80.asm:1821:1: Bank80.updateAllSpriteXYsToOAMMirror_88 = $80891a
Bank80.asm:1823:1: Bank80.updateAllSpriteXYsToOAMMirror_88._ASSERT_axy8 = $80891a
Bank80.asm:1822:1: Bank80.updateAllSpriteXYsToOAMMirror_88._ASSERT_jsr = $80891a
Bank80.asm:1880:1: Bank80.updateAllSpriteXYsToOAMMirror_88._noBullet = $808992
Bank80.asm:1884:1: Bank80.updateAllSpriteXYsToOAMMirror_88._bulletTile = $80899a
Bank80.asm:1902:1: Bank80.updateAllSpriteXYsToOAMMirror_88._notActive = $8089bd
Bank80.asm:1893:1: Bank80.updateAllSpriteXYsToOAMMirror_88._EntLoop = $8089ab
Bank80.asm:3251:1: Bank80.PlayerFrameData = $8091e2
Bank80.asm:3267:2: Bank80.PlayerFrameData.animFrameRate = $809248
Bank80.asm:3260:3: Bank80.PlayerFrameData._frameWords := (9216,25600,9248,9250,9252,9254,25632,25634,25636,25638,9280,9282,25664,25666,9224,9228,25608,25612,9284,9286,9288,9290,9312,9314,25696,25698)
Bank80.asm:3264:2: Bank80.PlayerFrameData.animFrameChar = $80920a
Bank80.asm:3261:3: Bank80.PlayerFrameData._frameCount := [1,1,4,4,2,2,2,2,4,4]
Bank80.asm:3263:2: Bank80.PlayerFrameData.animFrameIndexs = $809200
Bank80.asm:3252:2: Bank80.PlayerFrameData.sizes = $8091e2
Bank80.asm:3253:2: Bank80.PlayerFrameData.animTypes = $8091ec
Bank80.asm:3265:2: Bank80.PlayerFrameData.animFrameAttri = $809224
Bank80.asm:3254:2: Bank80.PlayerFrameData.animXOffset = $8091f6
Bank80.asm:3258:7: Bank80.PlayerFrameData.frames := (9312,9314,25696,25698)
Bank80.asm:3259:3: Bank80.PlayerFrameData._animDataIndex := [0,1,2,6,10,12,14,16,18,22]
Bank80.asm:3266:2: Bank80.PlayerFrameData.animFrameCount = $80923e
../music/music.asm:61:1: Bank80.kSCMD_STEREO = $03
Bank80.asm:5843:1: Bank80.VERSION = $80bcdb
../music/music.asm:667:1: Bank80.Echo_Addr = $80bfc5
../music/music.asm:50:1: Bank80.kAPU01 = $2140
Bank80.asm:4777:1: Bank80.BatRawAnimDataLeft = (8448,8450,8452,8454)
Bank80.asm:2833:1: Bank80.kPlayerStateDeath = $808f90
Bank80.asm:2834:2: Bank80.kPlayerStateDeath.animate = 0
Bank80.asm:3218:1: Bank80.kSpriteAnimationType = $8091e2
Bank80.asm:3219:2: Bank80.kSpriteAnimationType.none = 0
Bank80.asm:3220:2: Bank80.kSpriteAnimationType.loop = 1
Bank80.asm:5480:1: Bank80.keyFunc = $80a17d
Bank80.asm:5481:1: Bank80.keyFunc._ASSERT_axy8 = $80a17d
Bank80.asm:5499:1: Bank80.keyFunc._changeDoor = $80a1a2
Bank80.asm:5493:1: Bank80.keyFunc._done = $80a197
Bank80.asm:4649:1: Bank80.AnimateUpperHalfBoss = $809baf
Bank80.asm:4651:1: Bank80.AnimateUpperHalfBoss._ASSERT_axy8 = $809baf
Bank80.asm:4665:2: Bank80.AnimateUpperHalfBoss._under = $809bca
Bank80.asm:4650:1: Bank80.AnimateUpperHalfBoss._ASSERT_jsr = $809baf
Bank80.asm:4668:1: Bank80.AnimateUpperHalfBoss._playerLeft = $809bcd
Bank80.asm:355:1: Bank80.GAMELOOP = $8081c8
Bank80.asm:359:2: Bank80.GAMELOOP._ASSERT_A_LT_6 = $8081d0
Bank80.asm:4852:1: Bank80.AllAnimData := ((0,0,8,8,0,0),(8,8,8,2,1,0),(16,20,4,8,0,0),(24,28,4,8,0,0),(32,36,4,8,0,0),(40,42,2,8,0,0),(48,52,4,1,0,0),(56,60,4,2,0,0),(64,67,3,4,2,4),(70,73,3,4,2,4),(76,78,2,4,2,5),(80,82,2,4,2,5),(84,84,3,12,2,7),(87,87,2,12,2,6))
Bank80.asm:5840:1: Bank80.SOCI = $80bcb3
../music/music.asm:109:1: Bank80.SPC_Init = $80bd95
Bank80.asm:5007:1: Bank80.CSTCCY = $809e75
Bank80.asm:5009:1: Bank80.CSTCCY._ASSERT_axy8 = $809e75
Bank80.asm:5008:1: Bank80.CSTCCY._ASSERT_jsr = $809e75
Bank80.asm:5054:1: Bank80.CSTCCY._checkDown = $809eca
Bank80.asm:5049:2: Bank80.CSTCCY._onGround = $809ec1
Bank80.asm:5064:1: Bank80.CSTCCY._exit = $809edf
Bank80.asm:5041:2: Bank80.CSTCCY._startFall = $809eb4
sharedWRAM.asm:43:1: Bank80.oldJoyRight = $800093
../music/music.asm:695:1: Bank80.Echo_Fb_Fir = $80bfde
Bank80.asm:3212:1: Bank80.kSpriteType = $8091e2
Bank80.asm:3215:2: Bank80.kSpriteType.s32x32 = 2
Bank80.asm:3214:2: Bank80.kSpriteType.s16x32 = 1
Bank80.asm:3213:2: Bank80.kSpriteType.s16x16 = 0
sharedWRAM.asm:6:1: Bank80.mBG1SC = $800051
Bank80.asm:4476:1: Bank80.getEntTableIndex = $809a6c
Bank80.asm:4478:1: Bank80.getEntTableIndex._ASSERT_axy8 = $809a6c
Bank80.asm:4477:1: Bank80.getEntTableIndex._ASSERT_jsr = $809a6c
sharedWRAM.asm:14:1: Bank80.mBG2HOFS = $800061
QWAKSNES.asm:217:3: Bank80.mBG2HOFS.lo = $800061
QWAKSNES.asm:218:3: Bank80.mBG2HOFS.hi = $800062
Bank80.asm:1682:1: Bank80.pltHighScore = $808846
Bank80.asm:1684:1: Bank80.pltHighScore._ASSERT_axy8 = $808846
Bank80.asm:1685:1: Bank80.pltHighScore._statusHScore = $7e268e
Bank80.asm:1683:1: Bank80.pltHighScore._ASSERT_jsr = $808846
Bank80.asm:1696:1: Bank80.pltHighScore._l = $80885a
Bank80.asm:84:1: Bank80.RESET = $808000
sharedWRAM.asm:53:1: Bank80.TICK_DOWN_START = $8000d1
Bank80.asm:4840:1: Bank80.BubbleRawFrames = (8456,8460,8520)
sharedWRAM.asm:30:1: Bank80.mTS = $800081
Bank80.asm:1952:1: Bank80.Ent16_32 = $808a17
Bank80.asm:1953:1: Bank80.Ent16_32._ASSERT_axy8 = $808a17
Bank80.asm:3271:1: Bank80.PlayerJumpLUT = $809252
sharedWRAM.asm:15:1: Bank80.mBG2VOFS = $800063
QWAKSNES.asm:217:3: Bank80.mBG2VOFS.lo = $800063
QWAKSNES.asm:218:3: Bank80.mBG2VOFS.hi = $800064
Bank80.asm:5370:1: Bank80.checkOnDissTile = $80a0c2
Bank80.asm:5372:1: Bank80.checkOnDissTile._ASSERT_axy8 = $80a0c2
Bank80.asm:5375:1: Bank80.checkOnDissTile._exit = $80a0c7
Bank80.asm:5371:1: Bank80.checkOnDissTile._ASSERT_jsr = $80a0c2
Bank80.asm:5378:1: Bank80.checkOnDissTile._c = $80a0c8
sharedWRAM.asm:29:1: Bank80.mTM = $80007f
Bank80.asm:1255:1: Bank80.ClipY = $8085ee
Bank80.asm:1257:1: Bank80.ClipY._ASSERT_axy8 = $8085ee
Bank80.asm:1256:1: Bank80.ClipY._ASSERT_jsr = $8085ee
Bank80.asm:1269:1: Bank80.ClipY._bottomOfScreen = $8085fa
Bank80.asm:21:1: Bank80.kBulletCollisionbox = 1
Bank80.asm:4810:1: Bank80.CirclerRawFramesLeft = (8640,8642,8644,8646)
Bank80.asm:5569:1: Bank80.clearShieldState = $80a207
Bank80.asm:5571:1: Bank80.clearShieldState._ASSERT_axy8 = $80a207
Bank80.asm:5570:1: Bank80.clearShieldState._ASSERT_jsr = $80a207
sharedWRAM.asm:56:1: Bank80.EntityData = $8000df
qwak_structs.asm:90:1: Bank80.EntityData.pipeBubbleStart = $80027a
qwak_structs.asm:72:1: Bank80.EntityData.direction = $8000f9
qwak_structs.asm:86:1: Bank80.EntityData.palleteOffset = $800257
qwak_structs.asm:77:1: Bank80.EntityData.animFrame = $800176
qwak_structs.asm:70:1: Bank80.EntityData.number = $8000df
qwak_structs.asm:75:1: Bank80.EntityData.animTimer = $800144
qwak_structs.asm:76:1: Bank80.EntityData.animBase = $80015d
qwak_structs.asm:74:1: Bank80.EntityData.movTimer = $80012b
qwak_structs.asm:73:1: Bank80.EntityData.active = $800112
qwak_structs.asm:79:1: Bank80.EntityData.entState = $8001a8
qwak_structs.asm:84:1: Bank80.EntityData.speed = $800225
qwak_structs.asm:85:1: Bank80.EntityData.ignoreColl = $80023e
qwak_structs.asm:78:1: Bank80.EntityData.originalY = $80018f
qwak_structs.asm:82:1: Bank80.EntityData.collisionY1 = $8001f3
qwak_structs.asm:83:1: Bank80.EntityData.collisionY2 = $80020c
qwak_structs.asm:81:1: Bank80.EntityData.collisionX2 = $8001da
qwak_structs.asm:88:1: Bank80.EntityData.pipeIndex = $800271
qwak_structs.asm:80:1: Bank80.EntityData.collisionX1 = $8001c1
qwak_structs.asm:87:1: Bank80.EntityData.numPipes = $800270
qwak_structs.asm:71:1: Bank80.EntityData.type = $8000e0
qwak_structs.asm:89:1: Bank80.EntityData.lastPipeUsed = $800279
Bank80.asm:933:1: Bank80.INTERLOOP = $80842a
Bank80.asm:934:1: Bank80.INTERLOOP._ASSERT_axy8 = $80842a
sharedWRAM.asm:7:1: Bank80.mBG2SC = $800053
Bank80.asm:3493:1: Bank80.kSpiderValues = $8093a3
Bank80.asm:3495:2: Bank80.kSpiderValues.rightStartWiggle = 209
Bank80.asm:3498:2: Bank80.kSpiderValues.leftStartFall = 30
Bank80.asm:3494:2: Bank80.kSpiderValues.yFallDelta = 2
Bank80.asm:3497:2: Bank80.kSpiderValues.leftStartWiggle = 46
Bank80.asm:3496:2: Bank80.kSpiderValues.rightStartFall = 225
Bank80.asm:3499:2: Bank80.kSpiderValues.pauseEndFallFrames = 32
Bank80.asm:3500:2: Bank80.kSpiderValues.riseDelayTime = 3
../music/music.asm:633:1: Bank80.Echo_Vol = $80bfac
Bank80.asm:4854:1: Bank80.EntityFrameData = $809c31
Bank80.asm:4855:2: Bank80.EntityFrameData.lo = $809c31
Bank80.asm:4856:2: Bank80.EntityFrameData.hi = $809c88
Bank80.asm:1049:1: Bank80.GameOverFuncLUT = $8084e6
Bank80.asm:2435:1: Bank80.clearTile = $808d3e
Bank80.asm:2438:1: Bank80.clearTile._ASSERT_axy8 = $808d3e
Bank80.asm:2437:1: Bank80.clearTile._ASSERT_jsr = $808d3e
Bank80.asm:1097:1: Bank80.GOWaitForFire = $808538
Bank80.asm:1098:1: Bank80.GOWaitForFire._ASSERT_axy8 = $808538
Bank80.asm:1110:1: Bank80.GOWaitForFire._exit = $80854e
Bank80.asm:72:1: Bank80.kBossBearBankOR = $08
Bank80.asm:4770:1: Bank80.WormRawFramesLeft = (8384,8386,8388,8390)
Bank80.asm:5396:1: Bank80.CheckForShadowPlots = $80a0ed
Bank80.asm:5397:1: Bank80.CheckForShadowPlots._ASSERT_axy8 = $80a0ed
Bank80.asm:5416:1: Bank80.CheckForShadowPlots._exit2 = $80a110
Bank80.asm:5403:1: Bank80.CheckForShadowPlots._checkRemoveTile = $80a0f9
Bank80.asm:3234:1: Bank80.DeadFramesUpper = (9284,9286,9288,9290)
../music/music.asm:619:1: Bank80.SPC_Stream_Update = $80bfac
Bank80.asm:3462:1: Bank80.PlayerBulletAnimData = $809399
Bank80.asm:292:1: Bank80.kHideScreen = $808170
Bank80.asm:293:2: Bank80.kHideScreen.hide = $80
Bank80.asm:294:2: Bank80.kHideScreen.show = $0f
Bank80.asm:114:1: Bank80.InitSNESAndMirror = $808041
Bank80.asm:4270:1: Bank80.entGhostFunc = $809919
Bank80.asm:4271:1: Bank80.entGhostFunc._ASSERT_axy8 = $809919
../music/music.asm:71:1: Bank80.kSCMD_STREAM_SEND = $0d
sharedWRAM.asm:54:1: Bank80.TickDowns = $8000d1
qwak_structs.asm:27:1: Bank80.TickDowns.shieldFlashTimer = $8000d5
qwak_structs.asm:28:1: Bank80.TickDowns.shieldFlashTimerSpeedUp = $8000d6
qwak_structs.asm:24:1: Bank80.TickDowns.playerAnim = $8000d2
qwak_structs.asm:23:1: Bank80.TickDowns.dissBlocks = $8000d1
qwak_structs.asm:29:1: Bank80.TickDowns.bubbleTimer = $8000d7
qwak_structs.asm:26:1: Bank80.TickDowns.bulletLifeTimer = $8000d4
qwak_structs.asm:25:1: Bank80.TickDowns.doorAnim = $8000d3
Bank80.asm:4455:1: Bank80.setNextEntDir = $809a54
Bank80.asm:4456:1: Bank80.setNextEntDir._ASSERT_axy8 = $809a54
Bank80.asm:2553:1: Bank80.convertLevelToTileMap_88 = $808dd3
Bank80.asm:2612:1: Bank80.convertLevelToTileMap_88._cont = $808e34
Bank80.asm:2648:1: Bank80.convertLevelToTileMap_88._exitPos = $808e6b
Bank80.asm:2593:1: Bank80.convertLevelToTileMap_88._loop = $808e12
Bank80.asm:2592:1: Bank80.convertLevelToTileMap_88._row = $808e10
Bank80.asm:2640:1: Bank80.convertLevelToTileMap_88._key = $808e5f
Bank80.asm:2656:1: Bank80.convertLevelToTileMap_88._2nd = $808e79
Bank80.asm:2644:1: Bank80.convertLevelToTileMap_88._dissBlock = $808e67
Bank80.asm:2634:1: Bank80.convertLevelToTileMap_88._playerPos = $808e56
Bank80.asm:2660:1: Bank80.convertLevelToTileMap_88._pipe = $808e80
Bank80.asm:2554:1: Bank80.convertLevelToTileMap_88._ASSERT_JSR = $808dd3
Bank80.asm:5700:1: Bank80.Level30 = $80ba22
Bank80.asm:5701:1: Bank80.Level31 = $80baed
Bank80.asm:299:1: Bank80.NMI = $808170
../music/music.asm:85:1: Bank80.echo_pointer = $0045
Bank80.asm:4231:1: Bank80.springEntXLeft = $8098d7
Bank80.asm:4240:1: Bank80.springEntXLeft._noCollideLeft = $8098e4
Bank80.asm:4234:2: Bank80.springEntXLeft._hit = $8098db
Bank80.asm:4259:1: Bank80.springEntXLeft._store2 = $809905
Bank80.asm:4252:1: Bank80.springEntXLeft._noClip2 = $8098fa
Bank80.asm:5218:1: Bank80.hitX = $809fe7
Bank80.asm:4890:1: Bank80.kSinJumpMax = 34
../music/music.asm:571:1: Bank80.SFX_Play = $80bf70
Bank80.asm:1991:1: Bank80.Ent32_32 = $808a69
Bank80.asm:1992:1: Bank80.Ent32_32._ASSERT_axy8 = $808a69
Bank80.asm:5596:1: Bank80.eggFunc = $80a22a
Bank80.asm:5598:1: Bank80.eggFunc._ASSERT_axy8 = $80a22a
Bank80.asm:5597:1: Bank80.eggFunc._ASSERT_jsr = $80a22a
Bank80.asm:1043:1: Bank80.gameOverLoop = $8084de
Bank80.asm:1044:1: Bank80.gameOverLoop._ASSERT_axy8 = $8084de
Bank80.asm:4892:1: Bank80.SpringFrameFrameTable = $809d42
Bank80.asm:2412:1: Bank80.BCDEYVALUECHECK = $808d22
Bank80.asm:2420:1: Bank80.BCDEYVALUECHECK._checkH = $808d2d
Bank80.asm:2428:1: Bank80.BCDEYVALUECHECK._HNotWall = $808d3a
Bank80.asm:2415:2: Bank80.BCDEYVALUECHECK._writeMap = $808d27
Bank80.asm:2749:1: Bank80.fileTiles = $808ef8
Bank80.asm:2804:1: Bank80.kPlayerAnimsIndex = $808f90
Bank80.asm:2806:2: Bank80.kPlayerAnimsIndex.standLeft = 1
Bank80.asm:2811:2: Bank80.kPlayerAnimsIndex.flapRight = 6
Bank80.asm:2812:2: Bank80.kPlayerAnimsIndex.flapLeft = 7
Bank80.asm:2810:2: Bank80.kPlayerAnimsIndex.jumpLeft = 5
Bank80.asm:2808:2: Bank80.kPlayerAnimsIndex.standWalkLeft = 3
Bank80.asm:2814:2: Bank80.kPlayerAnimsIndex.exit = 9
Bank80.asm:2809:2: Bank80.kPlayerAnimsIndex.jumpRight = 4
Bank80.asm:2805:2: Bank80.kPlayerAnimsIndex.standRight = 0
Bank80.asm:2807:2: Bank80.kPlayerAnimsIndex.standWalkRight = 2
Bank80.asm:2813:2: Bank80.kPlayerAnimsIndex.dead = 8
sharedWRAM.asm:34:1: Bank80.mSETINI = $800089
Bank80.asm:2161:1: Bank80.dmaScreenMirror_xx = $808bcb
Bank80.asm:2162:1: Bank80.dmaScreenMirror_xx._ASSERT_JSR = $808bcb
Bank80.asm:3809:1: Bank80.entNegativeTBL = $8095cd
Bank80.asm:3223:1: Bank80.kPlayerSprFlags = 36
sharedWRAM.asm:27:1: mWBGLOG = $007b
QWAKSNES.asm:188:1: spc700_code_1 = $818000
sharedWRAM.asm:23:1: mWH0 = $0073
sharedWRAM.asm:24:1: mWH1 = $0075
sharedWRAM.asm:25:1: mWH2 = $0077
sharedWRAM.asm:26:1: mWH3 = $0079
qwak_structs.asm:90:1: sEntityData.pipeBubbleStart = 411
qwak_structs.asm:72:1: sEntityData.direction = 26
qwak_structs.asm:86:1: sEntityData.palleteOffset = 376
qwak_structs.asm:77:1: sEntityData.animFrame = 151
qwak_structs.asm:70:1: sEntityData.number = 0
qwak_structs.asm:75:1: sEntityData.animTimer = 101
qwak_structs.asm:76:1: sEntityData.animBase = 126
qwak_structs.asm:74:1: sEntityData.movTimer = 76
qwak_structs.asm:73:1: sEntityData.active = 51
qwak_structs.asm:79:1: sEntityData.entState = 201
qwak_structs.asm:84:1: sEntityData.speed = 326
qwak_structs.asm:85:1: sEntityData.ignoreColl = 351
qwak_structs.asm:78:1: sEntityData.originalY = 176
qwak_structs.asm:82:1: sEntityData.collisionY1 = 276
qwak_structs.asm:83:1: sEntityData.collisionY2 = 301
qwak_structs.asm:81:1: sEntityData.collisionX2 = 251
qwak_structs.asm:88:1: sEntityData.pipeIndex = 402
qwak_structs.asm:80:1: sEntityData.collisionX1 = 226
qwak_structs.asm:87:1: sEntityData.numPipes = 401
qwak_structs.asm:71:1: sEntityData.type = 1
qwak_structs.asm:89:1: sEntityData.lastPipeUsed = 410
sharedWRAM.asm:13:1: mBG1VOFS = $005f
QWAKSNES.asm:217:3: mBG1VOFS.lo = $005f
QWAKSNES.asm:218:3: mBG1VOFS.hi = $0060
sharedWRAM.asm:39:1: joyUp = $008f
sharedWRAM.asm:29:1: mTM = $007f
QWAKSNES.asm:98:1: playerTempCol = $000e
qwak_structs.asm:94:1: sCSTCCParams.xDeltaCheck = 0
QWAKSNES.asm:217:3: sCSTCCParams.xDeltaCheck.lo = 0
QWAKSNES.asm:218:3: sCSTCCParams.xDeltaCheck.hi = 1
qwak_structs.asm:96:1: sCSTCCParams.xDeltaBackup = 4
QWAKSNES.asm:217:3: sCSTCCParams.xDeltaBackup.lo = 4
QWAKSNES.asm:218:3: sCSTCCParams.xDeltaBackup.hi = 5
qwak_structs.asm:95:1: sCSTCCParams.yDeltaCheck = 2
QWAKSNES.asm:217:3: sCSTCCParams.yDeltaCheck.lo = 2
QWAKSNES.asm:218:3: sCSTCCParams.yDeltaCheck.hi = 3
qwak_structs.asm:97:1: sCSTCCParams.yDeltaBackup = 6
QWAKSNES.asm:217:3: sCSTCCParams.yDeltaBackup.lo = 6
QWAKSNES.asm:218:3: sCSTCCParams.yDeltaBackup.hi = 7
sharedWRAM.asm:57:1: PasswordTemp = $027b
sharedWRAM.asm:61:2: PasswordTemp.high = $0283
sharedWRAM.asm:60:2: PasswordTemp.score = $027d
sharedWRAM.asm:58:2: PasswordTemp.lives = $027b
sharedWRAM.asm:59:2: PasswordTemp.flowers = $027c
sharedWRAM.asm:62:2: PasswordTemp.currLevel = $0289
sharedWRAM.asm:67:1: PasswordInfiLives = $0298
sharedWRAM.asm:48:1: joyUpStop = $0098
sharedWRAM.asm:32:1: mTSW = $0085
sharedWRAM.asm:50:1: GameData = $009a
qwak_structs.asm:5:1: GameData.high = $00a2
qwak_structs.asm:7:1: GameData.exitOpenNZ = $00a9
qwak_structs.asm:4:1: GameData.score = $009c
qwak_structs.asm:2:1: GameData.lives = $009a
qwak_structs.asm:3:1: GameData.flowers = $009b
qwak_structs.asm:8:1: GameData.musicMode = $00aa
qwak_structs.asm:6:1: GameData.currLevel = $00a8
sharedWRAM.asm:47:1: joyUpStart = $0097
QWAKSNES.asm:90:1: CurrentEntity = $0002
QWAKSNES.asm:127:1: CollideInternalTTLX = $002b
QWAKSNES.asm:129:1: CollideInternalTTLY = $002d
SNESDef.asm:4:1: kSPri_3 = 48
SNESDef.asm:3:1: kSPri_2 = 32
SNESDef.asm:2:1: kSPri_1 = 16
SNESDef.asm:1:1: kSPri_0 = 0
QWAKSNES.asm:60:1: kEntity = $7f0000
QWAKSNES.asm:65:2: kEntity.ghost = $04
QWAKSNES.asm:68:2: kEntity.circler = $07
QWAKSNES.asm:64:2: kEntity.bat = $03
QWAKSNES.asm:74:2: kEntity.bossDummy = $0d
QWAKSNES.asm:73:2: kEntity.bubble = $0c
QWAKSNES.asm:67:2: kEntity.fish = $06
QWAKSNES.asm:62:2: kEntity.spring = $01
QWAKSNES.asm:70:2: kEntity.octopuss = $09
QWAKSNES.asm:71:2: kEntity.bearBody = $0a
QWAKSNES.asm:66:2: kEntity.spider = $05
QWAKSNES.asm:69:2: kEntity.bear = $08
QWAKSNES.asm:76:2: kEntity.maxBubbleMakers = 8
QWAKSNES.asm:72:2: kEntity.octopussBody = $0b
QWAKSNES.asm:77:2: kEntity.maxNumBubblesPerMaker = 2
QWAKSNES.asm:79:2: kEntity.deadFromRedBullet = 254
QWAKSNES.asm:78:2: kEntity.removedFromBullet = 255
QWAKSNES.asm:75:2: kEntity.maxEntities = 25
QWAKSNES.asm:61:2: kEntity.heli = $00
QWAKSNES.asm:63:2: kEntity.worm = $02
sharedWRAM.asm:49:1: joyFireEvent = $0099
sharedWRAM.asm:71:1: checkSpriteToCharData = $029c
qwak_structs.asm:94:1: checkSpriteToCharData.xDeltaCheck = $029c
QWAKSNES.asm:217:3: checkSpriteToCharData.xDeltaCheck.lo = $029c
QWAKSNES.asm:218:3: checkSpriteToCharData.xDeltaCheck.hi = $029d
qwak_structs.asm:96:1: checkSpriteToCharData.xDeltaBackup = $02a0
QWAKSNES.asm:217:3: checkSpriteToCharData.xDeltaBackup.lo = $02a0
QWAKSNES.asm:218:3: checkSpriteToCharData.xDeltaBackup.hi = $02a1
qwak_structs.asm:95:1: checkSpriteToCharData.yDeltaCheck = $029e
QWAKSNES.asm:217:3: checkSpriteToCharData.yDeltaCheck.lo = $029e
QWAKSNES.asm:218:3: checkSpriteToCharData.yDeltaCheck.hi = $029f
qwak_structs.asm:97:1: checkSpriteToCharData.yDeltaBackup = $02a2
QWAKSNES.asm:217:3: checkSpriteToCharData.yDeltaBackup.lo = $02a2
QWAKSNES.asm:218:3: checkSpriteToCharData.yDeltaBackup.hi = $02a3
sharedWRAM.asm:51:1: LevelData = $00ab
qwak_structs.asm:17:1: LevelData.exitTargetFrame = $00b1
qwak_structs.asm:14:1: LevelData.playerIndex = $00ad
qwak_structs.asm:16:1: LevelData.exitFrame = $00b0
qwak_structs.asm:18:1: LevelData.exitFrameDelta = $00b2
qwak_structs.asm:13:1: LevelData.totalKeys = $00ac
qwak_structs.asm:12:1: LevelData.numKeysLeft = $00ab
qwak_structs.asm:15:1: LevelData.exitIndex = $00ae
qwak_structs.asm:19:1: LevelData.levelGraphicsSet = $00b3
sharedWRAM.asm:41:1: joyFire = $0091
sharedWRAM.asm:10:1: mBG12NBA = $0059
qwak_structs.asm:44:1: sPlayerData.hasJumpedNZ = 9
qwak_structs.asm:65:1: sPlayerData.flashColour = 27
qwak_structs.asm:63:1: sPlayerData.exitAtIndex = 26
qwak_structs.asm:61:1: sPlayerData.numBulletEgg = 25
qwak_structs.asm:47:1: sPlayerData.startedJumpLR = 12
qwak_structs.asm:66:1: sPlayerData.baseFlashTimeDelta = 28
qwak_structs.asm:49:1: sPlayerData.slowMoveNZ = 14
qwak_structs.asm:54:1: sPlayerData.currAnim = 19
qwak_structs.asm:41:1: sPlayerData.floatTimer = 7
qwak_structs.asm:35:1: sPlayerData.minorState = 1
qwak_structs.asm:58:1: sPlayerData.bulletUD = 22
qwak_structs.asm:43:1: sPlayerData.onGroundNZ = 8
qwak_structs.asm:53:1: sPlayerData.yDeltaAccum = 17
QWAKSNES.asm:217:3: sPlayerData.yDeltaAccum.lo = 17
QWAKSNES.asm:218:3: sPlayerData.yDeltaAccum.hi = 18
qwak_structs.asm:59:1: sPlayerData.bulletLR = 23
qwak_structs.asm:51:1: sPlayerData.forceJumpNZ = 16
qwak_structs.asm:45:1: sPlayerData.isFallingNZ = 10
qwak_structs.asm:40:1: sPlayerData.canFloatNZ = 6
qwak_structs.asm:37:1: sPlayerData.deadNZ = 2
qwak_structs.asm:55:1: sPlayerData.frameOffset = 20
qwak_structs.asm:60:1: sPlayerData.bulletBurstNZ = 24
qwak_structs.asm:34:1: sPlayerData.state = 0
qwak_structs.asm:50:1: sPlayerData.hitBubbleNum = 15
qwak_structs.asm:57:1: sPlayerData.bulletActive = 21
qwak_structs.asm:39:1: sPlayerData.shieldTimer = 4
QWAKSNES.asm:217:3: sPlayerData.shieldTimer.lo = 4
QWAKSNES.asm:218:3: sPlayerData.shieldTimer.hi = 5
qwak_structs.asm:46:1: sPlayerData.facingRight = 11
qwak_structs.asm:38:1: sPlayerData.hasShieldNZ = 3
qwak_structs.asm:48:1: sPlayerData.movingLRNZ = 13
sharedWRAM.asm:42:1: oldJoyLeft = $0092
sharedWRAM.asm:56:1: EntityData = $00df
qwak_structs.asm:90:1: EntityData.pipeBubbleStart = $027a
qwak_structs.asm:72:1: EntityData.direction = $00f9
qwak_structs.asm:86:1: EntityData.palleteOffset = $0257
qwak_structs.asm:77:1: EntityData.animFrame = $0176
qwak_structs.asm:70:1: EntityData.number = $00df
qwak_structs.asm:75:1: EntityData.animTimer = $0144
qwak_structs.asm:76:1: EntityData.animBase = $015d
qwak_structs.asm:74:1: EntityData.movTimer = $012b
qwak_structs.asm:73:1: EntityData.active = $0112
qwak_structs.asm:79:1: EntityData.entState = $01a8
qwak_structs.asm:84:1: EntityData.speed = $0225
qwak_structs.asm:85:1: EntityData.ignoreColl = $023e
qwak_structs.asm:78:1: EntityData.originalY = $018f
qwak_structs.asm:82:1: EntityData.collisionY1 = $01f3
qwak_structs.asm:83:1: EntityData.collisionY2 = $020c
qwak_structs.asm:81:1: EntityData.collisionX2 = $01da
qwak_structs.asm:88:1: EntityData.pipeIndex = $0271
qwak_structs.asm:80:1: EntityData.collisionX1 = $01c1
qwak_structs.asm:87:1: EntityData.numPipes = $0270
qwak_structs.asm:71:1: EntityData.type = $00e0
qwak_structs.asm:89:1: EntityData.lastPipeUsed = $0279
QWAKSNES.asm:196:2: CharPallete = $82aec0
sharedWRAM.asm:69:1: PasswordHaveSpring = $029a
sharedWRAM.asm:22:1: mWOBJSEL = $0071
QWAKSNES.asm:197:2: SpritePallete = $82aee0
QWAKSNES.asm:104:1: TempX = $0014
sharedWRAM.asm:38:1: joyRight = $008e
sharedWRAM.asm:45:1: oldJoyDown = $0095
QWAKSNES.asm:117:1: CollideCharTRI = $0021
QWAKSNES.asm:94:1: Pointer1 = $0006
QWAKSNES.asm:217:3: Pointer1.lo = $0006
QWAKSNES.asm:218:3: Pointer1.hi = $0007
QWAKSNES.asm:96:1: Pointer3 = $000a
QWAKSNES.asm:217:3: Pointer3.lo = $000a
QWAKSNES.asm:218:3: Pointer3.hi = $000b
QWAKSNES.asm:95:1: Pointer2 = $0008
QWAKSNES.asm:217:3: Pointer2.lo = $0008
QWAKSNES.asm:218:3: Pointer2.hi = $0009
QWAKSNES.asm:118:1: CollideCharTRC = $0022
sharedWRAM.asm:31:1: mTMW = $0083
QWAKSNES.asm:125:1: CollideInternalSprTLY = $0029
QWAKSNES.asm:123:1: CollideInternalSprTLX = $0027
sharedWRAM.asm:43:1: oldJoyRight = $0093
sharedWRAM.asm:33:1: mCOLDATA = $0087
sharedWRAM.asm:6:1: mBG1SC = $0051
sharedWRAM.asm:11:1: mBG23NBA = $005b
sharedWRAM.asm:20:1: mW12SEL = $006d
sharedWRAM.asm:9:1: mBG4SC = $0057
QWAKSNES.asm:192:2: BackShadowChars = $828000
QWAKSNES.asm:93:1: CollisionResult = $0005
QWAKSNES.asm:99:1: ZPTemp = $000f
QWAKSNES.asm:92:1: EntNum = $0004
sharedWRAM.asm:14:1: mBG2HOFS = $0061
QWAKSNES.asm:217:3: mBG2HOFS.lo = $0061
QWAKSNES.asm:218:3: mBG2HOFS.hi = $0062
sharedWRAM.asm:70:1: PasswordLevelSkip = $029b
qwak_structs.asm:5:1: sGameData.high = 8
qwak_structs.asm:7:1: sGameData.exitOpenNZ = 15
qwak_structs.asm:4:1: sGameData.score = 2
qwak_structs.asm:2:1: sGameData.lives = 0
qwak_structs.asm:3:1: sGameData.flowers = 1
qwak_structs.asm:8:1: sGameData.musicMode = 16
qwak_structs.asm:6:1: sGameData.currLevel = 14
sharedWRAM.asm:64:1: ActivePassword = $028a
sharedWRAM.asm:53:1: TICK_DOWN_START = $00d1
sharedWRAM.asm:30:1: mTS = $0081
sharedWRAM.asm:5:1: mMOSIAC = $004f
sharedWRAM.asm:15:1: mBG2VOFS = $0063
QWAKSNES.asm:217:3: mBG2VOFS.lo = $0063
QWAKSNES.asm:218:3: mBG2VOFS.hi = $0064
sharedWRAM.asm:8:1: mBG3SC = $0055
QWAKSNES.asm:116:1: CollideCharTLC = $0020
QWAKSNES.asm:115:1: CollideCharTLI = $001f
sharedWRAM.asm:34:1: mSETINI = $0089
QWAKSNES.asm:114:1: CollideSpriteBoxIndex = $001e
sharedWRAM.asm:7:1: mBG2SC = $0053
QWAKSNES.asm:82:1: mplex = $7f0000
QWAKSNES.asm:83:2: mplex.kMaxSpr = $20
QWAKSNES.asm:200:2: music_3 = $82c57d
QWAKSNES.asm:199:2: music_2 = $82be6b
QWAKSNES.asm:198:2: music_1 = $82af40
QWAKSNES.asm:202:2: music_5 = $82d68e
QWAKSNES.asm:201:2: music_4 = $82d0c7
SNESDef.asm:19:1: kBaseSize_64x32 = 1
sharedWRAM.asm:19:1: mBG4VOFS = $006b
QWAKSNES.asm:217:3: mBG4VOFS.lo = $006b
QWAKSNES.asm:218:3: mBG4VOFS.hi = $006c
QWAKSNES.asm:193:2: FixedSectionChars = $829a00
sharedWRAM.asm:76:1: mplexBuffer = $0396
qwak_structs.asm:102:1: mplexBuffer.xmsb = $03b7
qwak_structs.asm:101:1: mplexBuffer.xpos = $0396
qwak_structs.asm:103:1: mplexBuffer.ypos = $03d8
SNESDef.asm:20:1: kBaseSize_32x64 = 2
QWAKSNES.asm:130:1: CollideInternalTBRY = $002e
sharedWRAM.asm:21:1: mW34SEL = $006f
sharedWRAM.asm:40:1: joyDown = $0090
sharedWRAM.asm:16:1: mBG3HOFS = $0065
QWAKSNES.asm:217:3: mBG3HOFS.lo = $0065
QWAKSNES.asm:218:3: mBG3HOFS.hi = $0066
QWAKSNES.asm:120:1: CollideCharBLC = $0024
sharedWRAM.asm:52:1: PlayerData = $00b4
qwak_structs.asm:44:1: PlayerData.hasJumpedNZ = $00bd
qwak_structs.asm:65:1: PlayerData.flashColour = $00cf
qwak_structs.asm:63:1: PlayerData.exitAtIndex = $00ce
qwak_structs.asm:61:1: PlayerData.numBulletEgg = $00cd
qwak_structs.asm:47:1: PlayerData.startedJumpLR = $00c0
qwak_structs.asm:66:1: PlayerData.baseFlashTimeDelta = $00d0
qwak_structs.asm:49:1: PlayerData.slowMoveNZ = $00c2
qwak_structs.asm:54:1: PlayerData.currAnim = $00c7
qwak_structs.asm:41:1: PlayerData.floatTimer = $00bb
qwak_structs.asm:35:1: PlayerData.minorState = $00b5
qwak_structs.asm:58:1: PlayerData.bulletUD = $00ca
qwak_structs.asm:43:1: PlayerData.onGroundNZ = $00bc
qwak_structs.asm:53:1: PlayerData.yDeltaAccum = $00c5
QWAKSNES.asm:217:3: PlayerData.yDeltaAccum.lo = $00c5
QWAKSNES.asm:218:3: PlayerData.yDeltaAccum.hi = $00c6
qwak_structs.asm:59:1: PlayerData.bulletLR = $00cb
qwak_structs.asm:51:1: PlayerData.forceJumpNZ = $00c4
qwak_structs.asm:45:1: PlayerData.isFallingNZ = $00be
qwak_structs.asm:40:1: PlayerData.canFloatNZ = $00ba
qwak_structs.asm:37:1: PlayerData.deadNZ = $00b6
qwak_structs.asm:55:1: PlayerData.frameOffset = $00c8
qwak_structs.asm:60:1: PlayerData.bulletBurstNZ = $00cc
qwak_structs.asm:34:1: PlayerData.state = $00b4
qwak_structs.asm:50:1: PlayerData.hitBubbleNum = $00c3
qwak_structs.asm:57:1: PlayerData.bulletActive = $00c9
qwak_structs.asm:39:1: PlayerData.shieldTimer = $00b8
QWAKSNES.asm:217:3: PlayerData.shieldTimer.lo = $00b8
QWAKSNES.asm:218:3: PlayerData.shieldTimer.hi = $00b9
qwak_structs.asm:46:1: PlayerData.facingRight = $00bf
qwak_structs.asm:38:1: PlayerData.hasShieldNZ = $00b7
qwak_structs.asm:48:1: PlayerData.movingLRNZ = $00c1
sharedWRAM.asm:54:1: TickDowns = $00d1
qwak_structs.asm:27:1: TickDowns.shieldFlashTimer = $00d5
qwak_structs.asm:28:1: TickDowns.shieldFlashTimerSpeedUp = $00d6
qwak_structs.asm:24:1: TickDowns.playerAnim = $00d2
qwak_structs.asm:23:1: TickDowns.dissBlocks = $00d1
qwak_structs.asm:29:1: TickDowns.bubbleTimer = $00d7
qwak_structs.asm:26:1: TickDowns.bulletLifeTimer = $00d4
qwak_structs.asm:25:1: TickDowns.doorAnim = $00d3
QWAKSNES.asm:103:1: ZPTemp5 = $0013
QWAKSNES.asm:102:1: ZPTemp4 = $0012
QWAKSNES.asm:101:1: ZPTemp3 = $0011
QWAKSNES.asm:100:1: ZPTemp2 = $0010
sharedWRAM.asm:37:1: joyLeft = $008d
QWAKSNES.asm:206:2: SpritesChars = $838000
QWAKSNES.asm:119:1: CollideCharBLI = $0023
sharedWRAM.asm:12:1: mBG1HOFS = $005d
QWAKSNES.asm:217:3: mBG1HOFS.lo = $005d
QWAKSNES.asm:218:3: mBG1HOFS.hi = $005e
QWAKSNES.asm:106:1: ActiveTile = $0016
QWAKSNES.asm:122:1: CollideCharBRC = $0026
sharedWRAM.asm:72:1: bulletFrame = $02a4
QWAKSNES.asm:126:1: CollideInternalSprBRY = $002a
QWAKSNES.asm:124:1: CollideInternalSprBRX = $0028
QWAKSNES.asm:217:3: HLWord.lo = 0
QWAKSNES.asm:218:3: HLWord.hi = 1
QWAKSNES.asm:132:1: HideScreen = $0031
sharedWRAM.asm:80:1: OAMMirrorHigh = $0605
sharedWRAM.asm:66:1: ValidPassword = $0297
qwak_structs.asm:102:1: sMplexBuffer.xmsb = 33
qwak_structs.asm:101:1: sMplexBuffer.xpos = 0
qwak_structs.asm:103:1: sMplexBuffer.ypos = 66
