QWAKSNES.asm:195:2: TopFixedChars = $82a6c0
sharedWRAM.asm:12:1: mBG1HOFS = $004b
QWAKSNES.asm:212:3: mBG1HOFS.lo = $004b
QWAKSNES.asm:213:3: mBG1HOFS.hi = $004c
QWAKSNES.asm:110:1: TestingSprY2 = $001a
QWAKSNES.asm:109:1: TestingSprY1 = $0019
sharedWRAM.asm:31:1: mTMW = $0071
SNESDef.asm:9:1: kSPal_3 = 6
sharedWRAM.asm:50:1: GameData = $0088
qwak_structs.asm:5:1: GameData.high = $0090
qwak_structs.asm:7:1: GameData.exitOpenNZ = $0097
qwak_structs.asm:4:1: GameData.score = $008a
qwak_structs.asm:2:1: GameData.lives = $0088
qwak_structs.asm:3:1: GameData.flowers = $0089
qwak_structs.asm:8:1: GameData.musicMode = $0098
qwak_structs.asm:6:1: GameData.currLevel = $0096
sharedWRAM.asm:25:1: mWH2 = $0065
sharedWRAM.asm:23:1: mWH0 = $0061
SNESDef.asm:1:1: kSPri_0 = 0
sharedWRAM.asm:26:1: mWH3 = $0067
sharedWRAM.asm:22:1: mWOBJSEL = $005f
sharedWRAM.asm:49:1: joyFireEvent = $0087
QWAKSNES.asm:197:2: SpritePallete = $82aee0
sharedWRAM.asm:2:1: mINIDISP = $0037
sharedWRAM.asm:3:1: mOBSEL = $0039
sharedWRAM.asm:35:1: mNMITIMEN = $0079
sharedWRAM.asm:37:1: joyLeft = $007b
sharedWRAM.asm:38:1: joyRight = $007c
sharedWRAM.asm:45:1: oldJoyDown = $0083
QWAKSNES.asm:117:1: CollideCharTRI = $0021
QWAKSNES.asm:94:1: Pointer1 = $0006
QWAKSNES.asm:212:3: Pointer1.lo = $0006
QWAKSNES.asm:213:3: Pointer1.hi = $0007
QWAKSNES.asm:105:1: ActiveTileIndex = $0015
QWAKSNES.asm:96:1: Pointer3 = $000a
QWAKSNES.asm:212:3: Pointer3.lo = $000a
QWAKSNES.asm:213:3: Pointer3.hi = $000b
QWAKSNES.asm:95:1: Pointer2 = $0008
QWAKSNES.asm:212:3: Pointer2.lo = $0008
QWAKSNES.asm:213:3: Pointer2.hi = $0009
sharedWRAM.asm:28:1: mOBJLOG = $006b
QWAKSNES.asm:118:1: CollideCharTRC = $0022
QWAKSNES.asm:49:1: gSharedRamStart = $0037
qwak_structs.asm:17:1: sLevelData.exitTargetFrame = 6
qwak_structs.asm:14:1: sLevelData.playerIndex = 2
qwak_structs.asm:16:1: sLevelData.exitFrame = 5
qwak_structs.asm:18:1: sLevelData.exitFrameDelta = 7
qwak_structs.asm:13:1: sLevelData.totalKeys = 1
qwak_structs.asm:12:1: sLevelData.numKeysLeft = 0
qwak_structs.asm:15:1: sLevelData.exitIndex = 3
qwak_structs.asm:19:1: sLevelData.levelGraphicsSet = 8
QWAKSNES.asm:125:1: CollideInternalSprTLY = $0029
QWAKSNES.asm:123:1: CollideInternalSprTLX = $0027
sharedWRAM.asm:43:1: oldJoyRight = $0081
sharedWRAM.asm:33:1: mCOLDATA = $0075
sharedWRAM.asm:66:1: ValidPassword = $0285
SNESDef.asm:7:1: kSPal_1 = 2
qwak_structs.asm:94:1: sCSTCCParams.xDeltaCheck = 0
QWAKSNES.asm:212:3: sCSTCCParams.xDeltaCheck.lo = 0
QWAKSNES.asm:213:3: sCSTCCParams.xDeltaCheck.hi = 1
qwak_structs.asm:96:1: sCSTCCParams.xDeltaBackup = 4
QWAKSNES.asm:212:3: sCSTCCParams.xDeltaBackup.lo = 4
QWAKSNES.asm:213:3: sCSTCCParams.xDeltaBackup.hi = 5
qwak_structs.asm:95:1: sCSTCCParams.yDeltaCheck = 2
QWAKSNES.asm:212:3: sCSTCCParams.yDeltaCheck.lo = 2
QWAKSNES.asm:213:3: sCSTCCParams.yDeltaCheck.hi = 3
qwak_structs.asm:97:1: sCSTCCParams.yDeltaBackup = 6
QWAKSNES.asm:212:3: sCSTCCParams.yDeltaBackup.lo = 6
QWAKSNES.asm:213:3: sCSTCCParams.yDeltaBackup.hi = 7
QWAKSNES.asm:128:1: CollideInternalTBRX = $002c
QWAKSNES.asm:130:1: CollideInternalTBRY = $002e
QWAKSNES.asm:107:1: TestingSprX1 = $0017
QWAKSNES.asm:91:1: CollidedEntity = $0003
QWAKSNES.asm:108:1: TestingSprX2 = $0018
sharedWRAM.asm:20:1: mW12SEL = $005b
sharedWRAM.asm:30:1: mTS = $006f
sharedWRAM.asm:21:1: mW34SEL = $005d
QWAKSNES.asm:192:2: BackShadowChars = $828000
SNESDef.asm:13:1: kSPal_7 = 14
SNESDef.asm:12:1: kSPal_6 = 12
SNESDef.asm:11:1: kSPal_5 = 10
SNESDef.asm:10:1: kSPal_4 = 8
QWAKSNES.asm:93:1: CollisionResult = $0005
SNESDef.asm:8:1: kSPal_2 = 4
QWAKSNES.asm:99:1: ZPTemp = $000f
SNESDef.asm:6:1: kSPal_0 = 0
sharedWRAM.asm:14:1: mBG2HOFS = $004f
QWAKSNES.asm:212:3: mBG2HOFS.lo = $004f
QWAKSNES.asm:213:3: mBG2HOFS.hi = $0050
sharedWRAM.asm:77:1: PasswordRAMCache = $03e7
QWAKSNES.asm:113:1: CollideSpriteToCheck = $001d
sharedWRAM.asm:42:1: oldJoyLeft = $0080
QWAKSNES.asm:111:1: GameStatePointer = $001b
QWAKSNES.asm:212:3: GameStatePointer.lo = $001b
QWAKSNES.asm:213:3: GameStatePointer.hi = $001c
sharedWRAM.asm:55:1: TICK_DOWN_END = $00cd
sharedWRAM.asm:46:1: oldJoyFire = $0084
qwak_structs.asm:5:1: sGameData.high = 8
qwak_structs.asm:7:1: sGameData.exitOpenNZ = 15
qwak_structs.asm:4:1: sGameData.score = 2
qwak_structs.asm:2:1: sGameData.lives = 0
qwak_structs.asm:3:1: sGameData.flowers = 1
qwak_structs.asm:8:1: sGameData.musicMode = 16
qwak_structs.asm:6:1: sGameData.currLevel = 14
QWAKSNES.asm:194:2: Font4BPP = $829ec0
sharedWRAM.asm:64:1: ActivePassword = $0278
sharedWRAM.asm:53:1: TICK_DOWN_START = $00bf
sharedWRAM.asm:80:1: OAMMirrorHigh = $05f3
sharedWRAM.asm:40:1: joyDown = $007e
QWAKSNES.asm:89:1: EntityDataPointer = $0000
QWAKSNES.asm:212:3: EntityDataPointer.lo = $0000
QWAKSNES.asm:213:3: EntityDataPointer.hi = $0001
sharedWRAM.asm:5:1: mMOSIAC = $003d
SNESDef.asm:3:1: kSPri_2 = 32
SNESDef.asm:21:1: kBaseSize_64x64 = 3
sharedWRAM.asm:44:1: oldJoyUp = $0082
sharedWRAM.asm:67:1: PasswordInfiLives = $0286
sharedWRAM.asm:15:1: mBG2VOFS = $0051
QWAKSNES.asm:212:3: mBG2VOFS.lo = $0051
QWAKSNES.asm:213:3: mBG2VOFS.hi = $0052
sharedWRAM.asm:8:1: mBG3SC = $0043
QWAKSNES.asm:90:1: CurrentEntity = $0002
QWAKSNES.asm:116:1: CollideCharTLC = $0020
sharedWRAM.asm:68:1: PasswordRedBullets = $0287
QWAKSNES.asm:133:1: ZPLong = $0032
QWAKSNES.asm:230:3: ZPLong.hiWord = $0033
QWAKSNES.asm:221:3: ZPLong.hi = $0033
QWAKSNES.asm:229:3: ZPLong.dummy2 = $0032
QWAKSNES.asm:220:3: ZPLong.lo = $0032
QWAKSNES.asm:226:3: ZPLong.dummy1 = $0034
QWAKSNES.asm:225:3: ZPLong.loWord = $0032
QWAKSNES.asm:222:3: ZPLong.bank = $0034
QWAKSNES.asm:230:3: HLBLong.hiWord = 1
QWAKSNES.asm:221:3: HLBLong.hi = 1
QWAKSNES.asm:229:3: HLBLong.dummy2 = 0
QWAKSNES.asm:220:3: HLBLong.lo = 0
QWAKSNES.asm:226:3: HLBLong.dummy1 = 2
QWAKSNES.asm:225:3: HLBLong.loWord = 0
QWAKSNES.asm:222:3: HLBLong.bank = 2
QWAKSNES.asm:115:1: CollideCharTLI = $001f
sharedWRAM.asm:4:1: mBGMODE = $003b
sharedWRAM.asm:56:1: EntityData = $00cd
qwak_structs.asm:90:1: EntityData.pipeBubbleStart = $0268
qwak_structs.asm:82:1: EntityData.collisionY1 = $01e1
qwak_structs.asm:72:1: EntityData.direction = $00e7
qwak_structs.asm:86:1: EntityData.palleteOffset = $0245
qwak_structs.asm:88:1: EntityData.pipeIndex = $025f
qwak_structs.asm:83:1: EntityData.collisionY2 = $01fa
qwak_structs.asm:81:1: EntityData.collisionX2 = $01c8
qwak_structs.asm:80:1: EntityData.collisionX1 = $01af
qwak_structs.asm:77:1: EntityData.animFrame = $0164
qwak_structs.asm:85:1: EntityData.ignoreColl = $022c
qwak_structs.asm:70:1: EntityData.number = $00cd
qwak_structs.asm:78:1: EntityData.originalY = $017d
qwak_structs.asm:76:1: EntityData.animBase = $014b
qwak_structs.asm:74:1: EntityData.movTimer = $0119
qwak_structs.asm:87:1: EntityData.numPipes = $025e
qwak_structs.asm:73:1: EntityData.active = $0100
qwak_structs.asm:79:1: EntityData.entState = $0196
qwak_structs.asm:71:1: EntityData.type = $00ce
qwak_structs.asm:84:1: EntityData.speed = $0213
qwak_structs.asm:75:1: EntityData.animTimer = $0132
qwak_structs.asm:89:1: EntityData.lastPipeUsed = $0267
QWAKSNES.asm:114:1: CollideSpriteBoxIndex = $001e
SNESDef.asm:20:1: kBaseSize_32x64 = 2
qwak_structs.asm:27:1: sTimerTickDowns.shieldFlashTimer = 4
qwak_structs.asm:28:1: sTimerTickDowns.shieldFlashTimerSpeedUp = 5
qwak_structs.asm:24:1: sTimerTickDowns.playerAnim = 1
qwak_structs.asm:23:1: sTimerTickDowns.dissBlocks = 0
qwak_structs.asm:29:1: sTimerTickDowns.bubbleTimer = 6
qwak_structs.asm:26:1: sTimerTickDowns.bulletLifeTimer = 3
qwak_structs.asm:25:1: sTimerTickDowns.doorAnim = 2
QWAKSNES.asm:82:1: mplex = $7f0000
QWAKSNES.asm:83:2: mplex.kMaxSpr = $20
SNESDef.asm:15:1: kSFlipX = 64
SNESDef.asm:16:1: kSFlipY = 128
QWAKSNES.asm:92:1: EntNum = $0004
QWAKSNES.asm:131:1: DidClipX = $002f
qwak_structs.asm:90:1: sEntityData.pipeBubbleStart = 411
qwak_structs.asm:82:1: sEntityData.collisionY1 = 276
qwak_structs.asm:72:1: sEntityData.direction = 26
qwak_structs.asm:86:1: sEntityData.palleteOffset = 376
qwak_structs.asm:88:1: sEntityData.pipeIndex = 402
qwak_structs.asm:83:1: sEntityData.collisionY2 = 301
qwak_structs.asm:81:1: sEntityData.collisionX2 = 251
qwak_structs.asm:80:1: sEntityData.collisionX1 = 226
qwak_structs.asm:77:1: sEntityData.animFrame = 151
qwak_structs.asm:85:1: sEntityData.ignoreColl = 351
qwak_structs.asm:70:1: sEntityData.number = 0
qwak_structs.asm:78:1: sEntityData.originalY = 176
qwak_structs.asm:76:1: sEntityData.animBase = 126
qwak_structs.asm:74:1: sEntityData.movTimer = 76
qwak_structs.asm:87:1: sEntityData.numPipes = 401
qwak_structs.asm:73:1: sEntityData.active = 51
qwak_structs.asm:79:1: sEntityData.entState = 201
qwak_structs.asm:71:1: sEntityData.type = 1
qwak_structs.asm:84:1: sEntityData.speed = 326
qwak_structs.asm:75:1: sEntityData.animTimer = 101
qwak_structs.asm:89:1: sEntityData.lastPipeUsed = 410
sharedWRAM.asm:17:1: mBG3VOFS = $0055
QWAKSNES.asm:212:3: mBG3VOFS.lo = $0055
QWAKSNES.asm:213:3: mBG3VOFS.hi = $0056
QWAKSNES.asm:184:1: Bank80 = $808000
sharedWRAM.asm:66:1: Bank80.ValidPassword = $800285
Bank80.asm:3216:1: Bank80.WalkRightFrames = (9248,9250,9252,9254)
Bank80.asm:4829:1: Bank80.BubbleAnimData = (84,84,3,12,2,7)
Bank80.asm:4875:1: Bank80.kSinJumpFall = 17
Bank80.asm:1263:1: Bank80.giveScore = $8085a8
Bank80.asm:1265:1: Bank80.giveScore._ASSERT_axy8 = $8085a8
Bank80.asm:1264:1: Bank80.giveScore._ASSERT_jsr = $8085a8
Bank80.asm:1273:1: Bank80.giveScore._scLoop = $8085b1
Bank80.asm:1283:1: Bank80.giveScore._ok = $8085c4
Bank80.asm:1428:1: Bank80.plotStringAAtIndexX = $8086a6
Bank80.asm:1430:1: Bank80.plotStringAAtIndexX._ASSERT_axy8 = $8086a6
Bank80.asm:1429:1: Bank80.plotStringAAtIndexX._ASSERT_jsr = $8086a6
Bank80.asm:5449:1: Bank80.flowerFunc = $80a0f4
Bank80.asm:5451:1: Bank80.flowerFunc._ASSERT_axy8 = $80a0f4
Bank80.asm:5463:1: Bank80.flowerFunc._exit = $80a10c
Bank80.asm:5450:1: Bank80.flowerFunc._ASSERT_jsr = $80a0f4
Bank80.asm:4897:1: Bank80.NextDirectionLUT = $809d3d
Bank80.asm:19:1: Bank80.kBulletSpriteOffset = 1
Bank80.asm:4766:1: Bank80.BatRawAnimDataRight = (24832,24834,24836,24838)
Bank80.asm:4427:1: Bank80.entBubble = $8099d7
Bank80.asm:4428:1: Bank80.entBubble._ASSERT_axy8 = $8099d7
Bank80.asm:4437:1: Bank80.entBubble._safe = $8099e8
Bank80.asm:4546:1: Bank80.BossNormal = $809a95
Bank80.asm:4547:1: Bank80.BossNormal._ASSERT_axy8 = $809a95
Bank80.asm:4557:1: Bank80.BossNormal._notFlash = $809aab
Bank80.asm:4593:1: Bank80.BossNormal._noMove = $809afb
Bank80.asm:4575:5: Bank80.BossNormal._toggleDir = $809ad3
Bank80.asm:4580:2: Bank80.BossNormal._left = $809add
Bank80.asm:4589:1: Bank80.BossNormal._doneMove = $809af2
Bank80.asm:5818:1: Bank80.PROGRAM = $80bbd5
Bank80.asm:71:1: Bank80.kDefault_OBSEL = $62
Bank80.asm:2783:1: Bank80.kPlayerState = $808f3b
Bank80.asm:2787:2: Bank80.kPlayerState.jump = 3
Bank80.asm:2788:2: Bank80.kPlayerState.exit = 4
Bank80.asm:2786:2: Bank80.kPlayerState.flap = 2
Bank80.asm:2785:2: Bank80.kPlayerState.normal = 1
Bank80.asm:2789:2: Bank80.kPlayerState.dead = 5
Bank80.asm:2784:2: Bank80.kPlayerState.appear = 0
Bank80.asm:4741:1: Bank80.HeliRawFrames = (8320,8322,8324,8326,8352,8354,8356,8358)
Bank80.asm:2915:1: Bank80.customJumpUpdate = $808fe8
Bank80.asm:4385:1: Bank80.handleEntCollisionResult = $80998e
Bank80.asm:4386:1: Bank80.handleEntCollisionResult._ASSERT_axy8 = $80998e
Bank80.asm:4398:1: Bank80.handleEntCollisionResult._skipIgnore = $8099a2
Bank80.asm:4402:1: Bank80.handleEntCollisionResult._addDeltas = $8099a7
Bank80.asm:4392:1: Bank80.handleEntCollisionResult._entHitAndGoNext = $809996
Bank80.asm:4422:1: Bank80.handleEntCollisionResult._skipFlipDueToX = $8099d2
Bank80.asm:4411:1: Bank80.handleEntCollisionResult._ignoreCollision = $8099b9
Bank80.asm:4799:1: Bank80.CirclerRawFramesRight = (8672,8674,8676,8678)
Bank80.asm:1484:1: Bank80.plotStatusArea = $8086d5
Bank80.asm:1486:1: Bank80.plotStatusArea._ASSERT_axy8 = $8086d5
Bank80.asm:1485:1: Bank80.plotStatusArea._ASSERT_jsr = $8086d5
Bank80.asm:1491:2: Bank80.plotStatusArea._statusStart = $7e2600
Bank80.asm:2830:1: Bank80.joyToPlayerDelta_88 = $808f3b
Bank80.asm:2832:1: Bank80.joyToPlayerDelta_88._ASSERT_axy8 = $808f3b
Bank80.asm:2831:1: Bank80.joyToPlayerDelta_88._ASSERT_jsr = $808f3b
Bank80.asm:2859:1: Bank80.joyToPlayerDelta_88._fullSpeedRight = $808f77
Bank80.asm:2882:1: Bank80.joyToPlayerDelta_88._clearSpeedLeft = $808fa4
Bank80.asm:2891:1: Bank80.joyToPlayerDelta_88._noLR = $808fb3
Bank80.asm:2885:1: Bank80.joyToPlayerDelta_88._fullSpeedLeft = $808fa9
Bank80.asm:2866:1: Bank80.joyToPlayerDelta_88._left = $808f82
Bank80.asm:2895:1: Bank80.joyToPlayerDelta_88._endLR = $808fbb
Bank80.asm:2856:3: Bank80.joyToPlayerDelta_88._clearSpeedRight = $808f72
sharedWRAM.asm:44:1: Bank80.oldJoyUp = $800082
Bank80.asm:3370:1: Bank80.UpdateBulletEndYColl = $8092a2
Bank80.asm:3372:1: Bank80.UpdateBulletEndYColl._ASSERT_axy8 = $8092a2
Bank80.asm:3371:1: Bank80.UpdateBulletEndYColl._ASSERT_jsr = $8092a2
Bank80.asm:3379:1: Bank80.UpdateBulletEndYColl._updateY = $8092b0
Bank80.asm:3384:1: Bank80.UpdateBulletEndYColl._checkX = $8092ba
Bank80.asm:4285:1: Bank80.entGhostXResults = $8098e0
Bank80.asm:4286:1: Bank80.entGhostXResults._ASSERT_axy8 = $8098e0
Bank80.asm:4296:2: Bank80.entGhostXResults._toggleXForce = $8098f2
Bank80.asm:4304:1: Bank80.entGhostXResults._addXDelta = $809901
Bank80.asm:4290:2: Bank80.entGhostXResults._toggleX = $8098e6
Bank80.asm:4311:1: Bank80.entGhostXResults._ignoreCollision = $809910
Bank80.asm:1127:1: Bank80.scanJoystick_88 = $808508
Bank80.asm:1130:1: Bank80.scanJoystick_88._ASSERT_axy8 = $808508
Bank80.asm:1156:1: Bank80.scanJoystick_88._checkUD = $808521
Bank80.asm:1161:1: Bank80.scanJoystick_88._checkFire = $808527
Bank80.asm:1191:1: Bank80.scanJoystick_88._joyY = $80855c
Bank80.asm:1166:1: Bank80.scanJoystick_88._checkB = $80852c
Bank80.asm:1204:1: Bank80.scanJoystick_88._joyRight = $80856c
Bank80.asm:1195:1: Bank80.scanJoystick_88._joyDown = $808561
Bank80.asm:1129:1: Bank80.scanJoystick_88._ASSERT_jsr = $808508
Bank80.asm:1187:1: Bank80.scanJoystick_88._joyUp = $808557
Bank80.asm:1200:1: Bank80.scanJoystick_88._joyLeft = $808567
Bank80.asm:1170:1: Bank80.scanJoystick_88._joyEnd = $808532
Bank80.asm:1421:1: Bank80.plotStringAAtIndexXGameScreen = $8086a2
Bank80.asm:1423:1: Bank80.plotStringAAtIndexXGameScreen._ASSERT_axy8 = $8086a2
Bank80.asm:1422:1: Bank80.plotStringAAtIndexXGameScreen._ASSERT_jsr = $8086a2
Bank80.asm:1409:1: Bank80.WallCharLUT = $80869a
Bank80.asm:1410:2: Bank80.WallCharLUT._offset = 512
Bank80.asm:1411:2: Bank80.WallCharLUT._values = [$828200,$828880,$828f00,$829580]
Bank80.asm:3009:1: Bank80.enterOnGround = $80908e
Bank80.asm:3011:1: Bank80.enterOnGround._ASSERT_axy8 = $80908e
Bank80.asm:3010:1: Bank80.enterOnGround._ASSERT_jsr = $80908e
Bank80.asm:2283:1: Bank80.tileIsWall_88 = $808c48
Bank80.asm:2286:1: Bank80.tileIsWall_88._ASSERT_axy8 = $808c48
Bank80.asm:2285:1: Bank80.tileIsWall_88._ASSERT_jsr = $808c48
Bank80.asm:2294:1: Bank80.tileIsWall_88._yes = $808c56
Bank80.asm:2296:1: Bank80.tileIsWall_88._no = $808c57
Bank80.asm:20:1: Bank80.kEntsSpriteOffset = 2
sharedWRAM.asm:17:1: Bank80.mBG3VOFS = $800055
QWAKSNES.asm:212:3: Bank80.mBG3VOFS.lo = $800055
QWAKSNES.asm:213:3: Bank80.mBG3VOFS.hi = $800056
Bank80.asm:15:1: Bank80.kTileXCount = 16
Bank80.asm:4830:1: Bank80.allEntFrames := (8320,8322,8324,8326,8352,8354,8356,8358,8268,8270,8328,8330,8332,8334,8392,8394,8384,8386,8388,8390,8416,8418,8420,8422,8448,8450,8452,8454,24832,24834,24836,24838,8480,8482,8484,8486,24864,24866,24868,24870,8512,8514,8516,8518,8544,8546,8548,8550,8576,8578,8580,8582,8608,8610,8612,8614,8640,8642,8644,8646,8672,8674,8676,8678,8448,8452,8456,8460,8512,8516,8448,8452,8456,8460,8512,8516,8520,8524,8576,8580,8520,8524,8576,8580,8456,8460,8520)
Bank80.asm:2825:1: Bank80.kIntermission = $808f3b
Bank80.asm:2826:2: Bank80.kIntermission.firstExit = 80
Bank80.asm:2827:2: Bank80.kIntermission.secondExit = 95
Bank80.asm:3221:1: Bank80.FlapLeftFrames = (25608,25612)
Bank80.asm:2805:1: Bank80.kJumpIndexs = $808f3b
Bank80.asm:2807:2: Bank80.kJumpIndexs.floaty = 2
Bank80.asm:2806:2: Bank80.kJumpIndexs.normal = 0
Bank80.asm:2701:1: Bank80.BCDELUT = $808e6b
Bank80.asm:3738:1: Bank80.innerEntitiesLoop = $8094e8
Bank80.asm:5829:1: Bank80.VERSION = $80bc4a
Bank80.asm:2725:1: Bank80.toolToTileLUT = $808e7b
Bank80.asm:2921:1: Bank80.falling = $808ff2
Bank80.asm:2922:1: Bank80.falling._ASSERT_axy8 = $808ff2
Bank80.asm:101:1: Bank80.ClearWRAM = $80801d
Bank80.asm:5595:1: Bank80.animateDoor_88 = $80a1aa
Bank80.asm:5597:1: Bank80.animateDoor_88._ASSERT_axy8 = $80a1aa
Bank80.asm:5596:1: Bank80.animateDoor_88._ASSERT_jsr = $80a1aa
Bank80.asm:17:1: Bank80.kLevelSizeMax = 192
sharedWRAM.asm:48:1: Bank80.joyUpStop = $800086
Bank80.asm:3641:1: Bank80.setEntitySprites = $80946a
Bank80.asm:3643:1: Bank80.setEntitySprites._ASSERT_axy8 = $80946a
Bank80.asm:3642:1: Bank80.setEntitySprites._ASSERT_jsr = $80946a
Bank80.asm:3684:1: Bank80.setEntitySprites._bossOctopuss = $8094b0
Bank80.asm:3667:1: Bank80.setEntitySprites._loop = $809495
Bank80.asm:3675:1: Bank80.setEntitySprites._bossBear = $80949e
Bank80.asm:3672:1: Bank80.setEntitySprites._exit2 = $80949d
Bank80.asm:3662:1: Bank80.setEntitySprites._exit = $80948b
Bank80.asm:3646:2: Bank80.setEntitySprites._active = $80946f
Bank80.asm:3659:2: Bank80.setEntitySprites._nextEnt = $809488
Bank80.asm:3310:1: Bank80.removeBullet = $809244
Bank80.asm:3312:1: Bank80.removeBullet._ASSERT_axy8 = $809244
Bank80.asm:3311:1: Bank80.removeBullet._ASSERT_jsr = $809244
Bank80.asm:5834:1: Bank80.PASSWORD_LIVES = $80bc87
sharedWRAM.asm:47:1: Bank80.joyUpStart = $800085
Bank80.asm:29:1: Bank80.kTiles = $808000
Bank80.asm:56:2: Bank80.kTiles.diss = 20
Bank80.asm:47:2: Bank80.kTiles.shield = 13
Bank80.asm:32:2: Bank80.kTiles.wall = 1
Bank80.asm:48:2: Bank80.kTiles.spring = 14
Bank80.asm:42:2: Bank80.kTiles.key1 = 9
Bank80.asm:30:2: Bank80.kTiles.back = 0
Bank80.asm:49:2: Bank80.kTiles.potion = 15
Bank80.asm:45:2: Bank80.kTiles.key4 = 12
Bank80.asm:33:2: Bank80.kTiles.wall1 = 2
Bank80.asm:53:2: Bank80.kTiles.player = 18
Bank80.asm:35:2: Bank80.kTiles.wall3 = 4
Bank80.asm:40:2: Bank80.kTiles.fruit = 8
Bank80.asm:57:2: Bank80.kTiles.dissNoColide = 33
Bank80.asm:36:2: Bank80.kTiles.wall4 = 5
Bank80.asm:43:2: Bank80.kTiles.key2 = 10
Bank80.asm:44:2: Bank80.kTiles.key3 = 11
Bank80.asm:65:2: Bank80.kTiles.intermissionOldWall = 37
Bank80.asm:39:2: Bank80.kTiles.flower = 7
Bank80.asm:59:2: Bank80.kTiles.underHangStart = 34
Bank80.asm:34:2: Bank80.kTiles.wall2 = 3
Bank80.asm:63:2: Bank80.kTiles.middlesideShadow = 38
Bank80.asm:64:2: Bank80.kTiles.topLeftCorner = 39
Bank80.asm:60:2: Bank80.kTiles.underHang = 35
Bank80.asm:55:2: Bank80.kTiles.pipe = 19
Bank80.asm:61:2: Bank80.kTiles.shadowOpenCorner = 36
Bank80.asm:52:2: Bank80.kTiles.exit = 17
Bank80.asm:38:2: Bank80.kTiles.spike = 6
Bank80.asm:50:2: Bank80.kTiles.egg = 16
Bank80.asm:62:2: Bank80.kTiles.sideShadow = 37
Bank80.asm:4811:1: Bank80.OctopussRawFramesRight = (8460,8512,8516)
Bank80.asm:3760:1: Bank80.EntitiesActive = $809510
Bank80.asm:1298:1: Bank80.FlowerScore = $8085d3
Bank80.asm:2352:1: Bank80.END_LEFT_RIGHT_CHECK = $808c82
Bank80.asm:2372:2: Bank80.END_LEFT_RIGHT_CHECK._testC = $808ca2
Bank80.asm:2393:1: Bank80.END_LEFT_RIGHT_CHECK._noE = $808cc5
Bank80.asm:2369:2: Bank80.END_LEFT_RIGHT_CHECK._noB = $808c9f
Bank80.asm:2385:1: Bank80.END_LEFT_RIGHT_CHECK._doneFirstRow = $808cb7
Bank80.asm:2382:2: Bank80.END_LEFT_RIGHT_CHECK._noRight = $808cb4
Bank80.asm:3753:1: Bank80.updateEntitiesLoop = $80950c
Bank80.asm:2810:1: Bank80.kPlayerParams = $808f3b
Bank80.asm:2813:2: Bank80.kPlayerParams.jumpDeltaAccumFloat = 4
Bank80.asm:2811:2: Bank80.kPlayerParams.jumpStartDelta = 254
Bank80.asm:2812:2: Bank80.kPlayerParams.jumpDeltaAccum = 19
Bank80.asm:2814:2: Bank80.kPlayerParams.maxFallSpeed = 4
Bank80.asm:1299:1: Bank80.KeyScore = $8085db
Bank80.asm:1648:1: Bank80.pltScore = $8087cf
Bank80.asm:1650:1: Bank80.pltScore._ASSERT_axy8 = $8087cf
Bank80.asm:1649:1: Bank80.pltScore._ASSERT_jsr = $8087cf
Bank80.asm:1651:1: Bank80.pltScore._statusScore = $7e264e
Bank80.asm:3800:1: Bank80.entRight = $80956d
Bank80.asm:3801:1: Bank80.entRight._ASSERT_axy8 = $80956d
Bank80.asm:3217:1: Bank80.WalkLeftFrames = (25632,25634,25636,25638)
Bank80.asm:5212:1: Bank80.newCollision = $809f85
Bank80.asm:5214:1: Bank80.newCollision._ASSERT_axy8 = $809f85
Bank80.asm:5213:1: Bank80.newCollision._ASSERT_jsr = $809f85
Bank80.asm:4822:1: Bank80.OctopussBodyRawFramesLeft = (8520,8524)
Bank80.asm:1478:1: Bank80.kStatusAttributes = $20
Bank80.asm:3321:1: Bank80.bulletExit = $809254
Bank80.asm:3734:1: Bank80.updateEntities = $8094e6
Bank80.asm:3736:1: Bank80.updateEntities._ASSERT_axy8 = $8094e6
Bank80.asm:3735:1: Bank80.updateEntities._ASSERT_jsr = $8094e6
Bank80.asm:1372:1: Bank80.clearScreenMirrorToEmptyChar = $80865f
Bank80.asm:1374:1: Bank80.clearScreenMirrorToEmptyChar._ASSERT_axy8 = $80865f
Bank80.asm:1373:1: Bank80.clearScreenMirrorToEmptyChar._ASSERT_jsr = $80865f
sharedWRAM.asm:45:1: Bank80.oldJoyDown = $800083
Bank80.asm:3088:1: Bank80.setPlayerSpritePtrFromFrameNumber_88 = $809100
Bank80.asm:3090:1: Bank80.setPlayerSpritePtrFromFrameNumber_88._ASSERT_axy8 = $809100
Bank80.asm:3089:1: Bank80.setPlayerSpritePtrFromFrameNumber_88._ASSERT_jsr = $809100
sharedWRAM.asm:76:1: Bank80.mplexBuffer = $800384
qwak_structs.asm:102:1: Bank80.mplexBuffer.xmsb = $8003a5
qwak_structs.asm:101:1: Bank80.mplexBuffer.xpos = $800384
qwak_structs.asm:103:1: Bank80.mplexBuffer.ypos = $8003c6
Bank80.asm:4137:1: Bank80.springEntYCollideEnd = $8097e4
Bank80.asm:4138:1: Bank80.springEntYCollideEnd._ASSERT_axy8 = $8097e4
Bank80.asm:4155:1: Bank80.springEntYCollideEnd._ASSERT_A_lt_34 = $809804
Bank80.asm:4159:1: Bank80.springEntYCollideEnd._hit = $809809
Bank80.asm:4154:1: Bank80.springEntYCollideEnd._store = $809804
Bank80.asm:4162:2: Bank80.springEntYCollideEnd._ASSERT2_A_lt_34 = $80980d
Bank80.asm:5821:1: Bank80.MUSIC = $80bbf9
Bank80.asm:3984:1: Bank80.spiderFall = $8096c2
Bank80.asm:3985:1: Bank80.spiderFall._ASSERT_axy8 = $8096c2
Bank80.asm:4009:1: Bank80.spiderFall._noColide = $8096f6
Bank80.asm:4001:2: Bank80.spiderFall._collide = $8096e7
Bank80.asm:4810:1: Bank80.OctopussRawFramesLeft = (8448,8452,8456)
Bank80.asm:1632:1: Bank80.plot3EmptyStatusCharToZPLong = $8087be
Bank80.asm:1634:1: Bank80.plot3EmptyStatusCharToZPLong._ASSERT_axy8 = $8087be
Bank80.asm:1633:1: Bank80.plot3EmptyStatusCharToZPLong._ASSERT_jsr = $8087be
Bank80.asm:2952:1: Bank80.StartJump = $80901e
Bank80.asm:2953:1: Bank80.StartJump._ASSERT_axy8 = $80901e
Bank80.asm:69:1: Bank80.kDoorOpen = 14
Bank80.asm:3771:1: Bank80.entNormalMovement = $809536
Bank80.asm:3773:1: Bank80.entNormalMovement._ASSERT_axy8 = $809536
Bank80.asm:3772:1: Bank80.entNormalMovement._ASSERT_jsr = $809536
Bank80.asm:1211:1: Bank80.addXWithMSBAndClip_88 = $808572
Bank80.asm:1213:1: Bank80.addXWithMSBAndClip_88._ASSERT_axy8 = $808572
Bank80.asm:1212:1: Bank80.addXWithMSBAndClip_88._ASSERT_jsr = $808572
Bank80.asm:1235:1: Bank80.addXWithMSBAndClip_88._justStore = $808593
Bank80.asm:1232:1: Bank80.addXWithMSBAndClip_88._wentUnder = $80858e
Bank80.asm:4537:1: Bank80.entBoss = $809a87
Bank80.asm:4538:1: Bank80.entBoss._ASSERT_axy8 = $809a87
Bank80.asm:4258:1: Bank80.entGhostFunc = $8098b5
Bank80.asm:4259:1: Bank80.entGhostFunc._ASSERT_axy8 = $8098b5
Bank80.asm:656:1: Bank80.TSWaitForFire = $8083cc
Bank80.asm:657:1: Bank80.TSWaitForFire._ASSERT_axy8 = $8083cc
Bank80.asm:773:1: Bank80.TSWaitForFire._exit = $8083e0
Bank80.asm:5823:1: Bank80.NONE = $80bc03
Bank80.asm:557:1: Bank80.playerDead = $808325
Bank80.asm:569:1: Bank80.playerDead._exit = $808337
Bank80.asm:570:1: Bank80.playerDead._waitForAnimation = $808339
Bank80.asm:582:1: Bank80.playerDead._gameOver = $80834e
Bank80.asm:1753:1: Bank80.kSpriteEmptyVal = 224
Bank80.asm:2033:1: Bank80.Ent16_16_ORVal = $808a73
Bank80.asm:4805:1: Bank80.BearRawFramesRight = (8460,8512,8516)
Bank80.asm:2930:1: Bank80.OnGround = $808ffe
Bank80.asm:2931:1: Bank80.OnGround._ASSERT_axy8 = $808ffe
Bank80.asm:2938:1: Bank80.OnGround._skip = $80900b
sharedWRAM.asm:19:1: Bank80.mBG4VOFS = $800059
QWAKSNES.asm:212:3: Bank80.mBG4VOFS.lo = $800059
QWAKSNES.asm:213:3: Bank80.mBG4VOFS.hi = $80005a
Bank80.asm:4812:1: Bank80.OctopussEntAnimData = (70,73,3,4,2,4)
Bank80.asm:2439:1: Bank80.pltSingleTileNoLookup = $808cfc
Bank80.asm:2442:1: Bank80.pltSingleTileNoLookup._ASSERT_axy8 = $808cfc
Bank80.asm:2441:1: Bank80.pltSingleTileNoLookup._ASSERT_jsr = $808cfc
Bank80.asm:3449:1: Bank80.PlayerBulletFrames = (9420,9422,9452,9454,9676)
Bank80.asm:1039:1: Bank80.GoSetup = $80849a
Bank80.asm:1040:1: Bank80.GoSetup._ASSERT_axy8 = $80849a
Bank80.asm:1061:1: Bank80.GoSetup._clearScore = $8084bb
Bank80.asm:1073:1: Bank80.GoSetup._higher = $8084ce
Bank80.asm:1057:1: Bank80.GoSetup._next = $8084b6
Bank80.asm:291:1: Bank80.NMIFast = $808155
Bank80.asm:301:1: Bank80.NMIFast._ready = $808164
Bank80.asm:327:1: Bank80.NMIFast._Notvisible = $80819b
Bank80.asm:4782:1: Bank80.SpiderRawFramesWaitRight = (8516,8518)
Bank80.asm:5538:1: Bank80.shildFunction = $80a163
Bank80.asm:5539:1: Bank80.shildFunction._ASSERT_axy8 = $80a163
Bank80.asm:903:1: Bank80.TSStartGame = $8083e1
Bank80.asm:904:1: Bank80.TSStartGame._ASSERT_axy8 = $8083e1
Bank80.asm:5437:1: Bank80.fruitFunc = $80a0eb
Bank80.asm:5439:1: Bank80.fruitFunc._ASSERT_axy8 = $80a0eb
Bank80.asm:5438:1: Bank80.fruitFunc._ASSERT_jsr = $80a0eb
Bank80.asm:1104:1: Bank80.kTimers = $8084fa
Bank80.asm:1107:2: Bank80.kTimers.DoorAnimeRate = 10
Bank80.asm:1106:2: Bank80.kTimers.floatTimer = $50
Bank80.asm:1108:2: Bank80.kTimers.spawnBubble = 30
Bank80.asm:1105:2: Bank80.kTimers.dissBlocksValue = $8
Bank80.asm:5185:1: Bank80.Ent_Ent_Coll_skipSelf = $809f63
Bank80.asm:4495:1: Bank80.updateBubbles = $809a37
Bank80.asm:4497:1: Bank80.updateBubbles._ASSERT_axy8 = $809a37
Bank80.asm:4496:1: Bank80.updateBubbles._ASSERT_jsr = $809a37
Bank80.asm:4503:1: Bank80.updateBubbles._findFreeEnt = $809a44
Bank80.asm:4532:1: Bank80.updateBubbles._store = $809a83
Bank80.asm:4534:1: Bank80.updateBubbles._exit = $809a86
Bank80.asm:4510:1: Bank80.updateBubbles._foundOne = $809a51
sharedWRAM.asm:12:1: Bank80.mBG1HOFS = $80004b
QWAKSNES.asm:212:3: Bank80.mBG1HOFS.lo = $80004b
QWAKSNES.asm:213:3: Bank80.mBG1HOFS.hi = $80004c
Bank80.asm:4759:1: Bank80.WormRawFramesRight = (8416,8418,8420,8422)
Bank80.asm:3214:1: Bank80.RightFrames = (9216,)
Bank80.asm:3219:1: Bank80.JumpLeftFrames = (25664,25666)
Bank80.asm:4476:1: Bank80.updateEntAnimAndSetSprite = $809a16
Bank80.asm:4478:1: Bank80.updateEntAnimAndSetSprite._ASSERT_axy8 = $809a16
Bank80.asm:4477:1: Bank80.updateEntAnimAndSetSprite._ASSERT_jsr = $809a16
Bank80.asm:4491:1: Bank80.updateEntAnimAndSetSprite._notAnimUpdate = $809a36
Bank80.asm:3722:1: Bank80.addYDeltaEnt = $8094d9
Bank80.asm:3724:1: Bank80.addYDeltaEnt._ASSERT_axy8 = $8094d9
Bank80.asm:3723:1: Bank80.addYDeltaEnt._ASSERT_jsr = $8094d9
Bank80.asm:2944:1: Bank80.AbortJump = $809013
Bank80.asm:2945:1: Bank80.AbortJump._ASSERT_axy8 = $809013
Bank80.asm:1759:1: Bank80.disableAllEntSprites_88 = $808876
Bank80.asm:1761:1: Bank80.disableAllEntSprites_88._ASSERT_axy8 = $808876
Bank80.asm:1760:1: Bank80.disableAllEntSprites_88._ASSERT_jsr = $808876
Bank80.asm:4458:1: Bank80.setEntFrameForDir = $809a01
Bank80.asm:4459:1: Bank80.setEntFrameForDir._ASSERT_axy8 = $809a01
Bank80.asm:1458:1: Bank80.kSBC = $8086d5
Bank80.asm:1475:2: Bank80.kSBC.Digits = 240
Bank80.asm:1466:2: Bank80.kSBC.B = 251
Bank80.asm:1470:2: Bank80.kSBC.Score = 223
Bank80.asm:1465:2: Bank80.kSBC.BL = 250
Bank80.asm:1459:2: Bank80.kSBC.M = 205
Bank80.asm:1463:2: Bank80.kSBC.L = 208
Bank80.asm:1474:2: Bank80.kSBC.Flower = 236
Bank80.asm:1471:2: Bank80.kSBC.High = 229
Bank80.asm:1472:2: Bank80.kSBC.QwakP = 232
Bank80.asm:1460:2: Bank80.kSBC.TL = 206
Bank80.asm:1464:2: Bank80.kSBC.R = 210
Bank80.asm:1468:2: Bank80.kSBC.QWAKT = 211
Bank80.asm:1467:2: Bank80.kSBC.BR = 252
Bank80.asm:1473:2: Bank80.kSBC.X = 204
Bank80.asm:1469:2: Bank80.kSBC.QWAKB = 217
Bank80.asm:1461:2: Bank80.kSBC.T = 207
Bank80.asm:1462:2: Bank80.kSBC.TR = 209
Bank80.asm:6:1: Bank80.kVRAM = $808000
Bank80.asm:8:2: Bank80.kVRAM.gameScreen = 1024
Bank80.asm:12:2: Bank80.kVRAM.Sprite = 16384
Bank80.asm:7:2: Bank80.kVRAM.titleScreen = 0
Bank80.asm:10:2: Bank80.kVRAM.fontDest = 2560
Bank80.asm:9:2: Bank80.kVRAM.font = 2048
Bank80.asm:11:2: Bank80.kVRAM.gameChars = 4096
Bank80.asm:4544:1: Bank80.BossLut = $809a91
Bank80.asm:5789:1: Bank80.kStrings = $80bb6d
Bank80.asm:5792:2: Bank80.kStrings.cx16port = 4
Bank80.asm:5801:2: Bank80.kStrings.none = 22
Bank80.asm:5794:2: Bank80.kStrings.art = 8
Bank80.asm:5803:2: Bank80.kStrings.version = 26
Bank80.asm:5800:2: Bank80.kStrings.sfx = 20
Bank80.asm:5805:2: Bank80.kStrings.passwordBlank = 30
Bank80.asm:5798:2: Bank80.kStrings.didi = 16
Bank80.asm:5802:2: Bank80.kStrings.both = 24
Bank80.asm:5797:2: Bank80.kStrings.soci = 14
Bank80.asm:5806:2: Bank80.kStrings.optiroc = 32
Bank80.asm:5793:2: Bank80.kStrings.program = 6
Bank80.asm:5795:2: Bank80.kStrings.music = 10
Bank80.asm:5790:2: Bank80.kStrings.gameOver = 0
Bank80.asm:5804:2: Bank80.kStrings.password = 28
Bank80.asm:5796:2: Bank80.kStrings.specialThanks = 12
Bank80.asm:5791:2: Bank80.kStrings.original = 2
Bank80.asm:5799:2: Bank80.kStrings.saul = 18
sharedWRAM.asm:75:1: Bank80.tileMapTemp = $800294
Bank80.asm:4794:1: Bank80.FishRawAnimData = (48,52,4,1,0,0)
sharedWRAM.asm:26:1: Bank80.mWH3 = $800067
sharedWRAM.asm:3:1: Bank80.mOBSEL = $800039
Bank80.asm:1300:1: Bank80.BossScore = $8085e3
sharedWRAM.asm:28:1: Bank80.mOBJLOG = $80006b
Bank80.asm:3188:1: Bank80.awardLife_88 = $809182
Bank80.asm:3190:1: Bank80.awardLife_88._ASSERT_axy8 = $809182
Bank80.asm:3189:1: Bank80.awardLife_88._ASSERT_jsr = $809182
Bank80.asm:4665:1: Bank80.isTypeBoss = $809b74
Bank80.asm:4668:1: Bank80.isTypeBoss._ASSERT_axy8 = $809b74
Bank80.asm:4675:1: Bank80.isTypeBoss._notBoss = $809b80
Bank80.asm:4667:1: Bank80.isTypeBoss._ASSERT_jsr = $809b74
Bank80.asm:4678:1: Bank80.isTypeBoss._boss = $809b82
Bank80.asm:3935:1: Bank80.SpiderEntFuncLUT = $809667
Bank80.asm:5617:1: Bank80.animateInternal_88 = $80a1cc
Bank80.asm:5619:1: Bank80.animateInternal_88._ASSERT_axy8 = $80a1cc
Bank80.asm:5618:1: Bank80.animateInternal_88._ASSERT_jsr = $80a1cc
Bank80.asm:4785:1: Bank80.SpiderRawAnimData = (40,42,2,8,0,0)
Bank80.asm:3223:1: Bank80.ExitFrames = (9312,9314,25696,25698)
Bank80.asm:545:1: Bank80.incLevelGraphicSet = $808319
Bank80.asm:547:1: Bank80.incLevelGraphicSet._ASSERT_axy8 = $808319
Bank80.asm:546:1: Bank80.incLevelGraphicSet._ASSERT_jsr = $808319
Bank80.asm:975:1: Bank80.interMovePlayer = $80844e
Bank80.asm:976:1: Bank80.interMovePlayer._ASSERT_axy8 = $80844e
Bank80.asm:353:1: Bank80.PlayerCodeLUT = $8081b6
Bank80.asm:3798:1: Bank80.entNegativeTBLUD = $80956b
Bank80.asm:2201:1: Bank80.ScreenMirror = $7e2000
Bank80.asm:2302:1: Bank80.tileIsSafeToChange_88 = $808c59
Bank80.asm:2306:1: Bank80.tileIsSafeToChange_88._ASSERT_axy8 = $808c59
Bank80.asm:2305:1: Bank80.tileIsSafeToChange_88._ASSERT_jsr = $808c59
Bank80.asm:2312:1: Bank80.tileIsSafeToChange_88._yes = $808c63
Bank80.asm:3236:1: Bank80.PlayerFrameSpec := [(0,0,(9216,),0,255),(0,0,(25600,),0,255),(0,1,(9248,9250,9252,9254),0,8),(0,1,(25632,25634,25636,25638),0,8),(0,1,(9280,9282),0,8),(0,1,(25664,25666),0,8),(2,1,(9224,9228),0,8),(2,1,(25608,25612),-16,8),(1,1,(9284,9286,9288,9290),0,8),(0,1,(9312,9314,25696,25698),0,8)]
Bank80.asm:4017:1: Bank80.spiderRise = $809705
Bank80.asm:4018:1: Bank80.spiderRise._ASSERT_axy8 = $809705
Bank80.asm:3166:1: Bank80.clearPlayerStuct_88 = $80916d
Bank80.asm:3168:1: Bank80.clearPlayerStuct_88._ASSERT_axy8 = $80916d
Bank80.asm:3167:1: Bank80.clearPlayerStuct_88._ASSERT_jsr = $80916d
Bank80.asm:4872:1: Bank80.SinJumpTable = $809cbb
Bank80.asm:5663:1: Bank80.Level05 = $80a570
Bank80.asm:5662:1: Bank80.Level04 = $80a4a1
Bank80.asm:5665:1: Bank80.Level07 = $80a708
Bank80.asm:5664:1: Bank80.Level06 = $80a637
Bank80.asm:2171:1: Bank80.dmaScreenMirrorToTitleScreen_xx = $808ba4
Bank80.asm:2172:1: Bank80.dmaScreenMirrorToTitleScreen_xx._ASSERT_JSR = $808ba4
Bank80.asm:5661:1: Bank80.Level03 = $80a3d6
Bank80.asm:5660:1: Bank80.Level02 = $80a309
sharedWRAM.asm:68:1: Bank80.PasswordRedBullets = $800287
Bank80.asm:4906:1: Bank80.BaseAnimeFrameForDir = $809d5d
Bank80.asm:5667:1: Bank80.Level09 = $80a8a4
Bank80.asm:5666:1: Bank80.Level08 = $80a7db
Bank80.asm:277:1: Bank80.NMIReadyNF = $0035
sharedWRAM.asm:13:1: Bank80.mBG1VOFS = $80004d
QWAKSNES.asm:212:3: Bank80.mBG1VOFS.lo = $80004d
QWAKSNES.asm:213:3: Bank80.mBG1VOFS.hi = $80004e
Bank80.asm:517:1: Bank80.playerExit = $8082e7
Bank80.asm:529:1: Bank80.playerExit._exit = $8082ff
Bank80.asm:530:1: Bank80.playerExit._waitForAnimation = $808301
Bank80.asm:1617:1: Bank80.plotStatusRangeY = $8087ab
Bank80.asm:1619:1: Bank80.plotStatusRangeY._ASSERT_axy8 = $8087ab
Bank80.asm:1618:1: Bank80.plotStatusRangeY._ASSERT_jsr = $8087ab
Bank80.asm:2069:1: Bank80.dmaLevelChars_xx = $808ac0
Bank80.asm:2070:1: Bank80.dmaLevelChars_xx._ASSERT_JSR = $808ac0
Bank80.asm:5659:1: Bank80.fileTileMap = $80a23c
Bank80.asm:4818:1: Bank80.BearBodyAnimData = (76,78,2,4,2,5)
Bank80.asm:3847:1: Bank80.entLeftNoDelta = $8095ca
Bank80.asm:3848:1: Bank80.entLeftNoDelta._ASSERT_axy8 = $8095ca
sharedWRAM.asm:11:1: Bank80.mBG23NBA = $800049
Bank80.asm:2032:1: Bank80.EntUpperANDMask = $808a6f
Bank80.asm:4761:1: Bank80.WormRawAnimData = (16,20,4,8,0,0)
Bank80.asm:90:1: Bank80.RESETHi = $80800b
sharedWRAM.asm:57:1: Bank80.PasswordTemp = $800269
sharedWRAM.asm:61:2: Bank80.PasswordTemp.high = $800271
sharedWRAM.asm:59:2: Bank80.PasswordTemp.flowers = $80026a
sharedWRAM.asm:58:2: Bank80.PasswordTemp.lives = $800269
sharedWRAM.asm:60:2: Bank80.PasswordTemp.score = $80026b
sharedWRAM.asm:62:2: Bank80.PasswordTemp.currLevel = $800277
Bank80.asm:5612:1: Bank80.aDexit = $80a1cb
Bank80.asm:4773:1: Bank80.GhostRawAnimData = (32,36,4,8,0,0)
Bank80.asm:3865:1: Bank80.entDownNoDelta = $8095ed
Bank80.asm:3866:1: Bank80.entDownNoDelta._ASSERT_axy8 = $8095ed
Bank80.asm:75:1: Bank80.kShieldTimer = 500
Bank80.asm:5432:1: Bank80.TileFuncLookup = $80a0c7
Bank80.asm:1612:1: Bank80.StatusRangePairsLUT = $8087a3
Bank80.asm:1613:2: Bank80.StatusRangePairsLUT.start = $8087a3
Bank80.asm:1614:2: Bank80.StatusRangePairsLUT.end = $8087a7
sharedWRAM.asm:49:1: Bank80.joyFireEvent = $800087
Bank80.asm:22:1: Bank80.kBounds = $808000
Bank80.asm:26:2: Bank80.kBounds.screenMaxY = 192
Bank80.asm:23:2: Bank80.kBounds.screenMinX = 0
Bank80.asm:4362:1: Bank80.entBat = $809969
Bank80.asm:4363:1: Bank80.entBat._ASSERT_axy8 = $809969
Bank80.asm:5118:1: Bank80.collideAgainstRestEntry = $809eec
Bank80.asm:4281:1: Bank80.ghostLeft = $8098dd
Bank80.asm:1636:1: Bank80.plot2EmptyStatusCharToZPLong = $8087c1
sharedWRAM.asm:22:1: Bank80.mWOBJSEL = $80005f
Bank80.asm:4928:1: Bank80.checkSpriteToCharCollision_88 = $809d91
Bank80.asm:4930:1: Bank80.checkSpriteToCharCollision_88._ASSERT_axy8 = $809d91
Bank80.asm:4929:1: Bank80.checkSpriteToCharCollision_88._ASSERT_JSR = $809d91
Bank80.asm:4981:1: Bank80.checkSpriteToCharCollision_88._skipBL = $809e00
Bank80.asm:4990:1: Bank80.checkSpriteToCharCollision_88._skipBR = $809e10
Bank80.asm:4954:1: Bank80.checkSpriteToCharCollision_88._otherIsSame = $809dc7
Bank80.asm:4974:1: Bank80.checkSpriteToCharCollision_88._skipTR = $809df4
Bank80.asm:4596:1: Bank80.BossMoveTimerLut = $809afe
Bank80.asm:2682:1: Bank80.removeAllTilesOf_88 = $808e4f
Bank80.asm:2684:1: Bank80.removeAllTilesOf_88._ASSERT_axy8 = $808e4f
Bank80.asm:2683:1: Bank80.removeAllTilesOf_88._ASSERT_jsr = $808e4f
Bank80.asm:2688:1: Bank80.removeAllTilesOf_88._loop = $808e55
Bank80.asm:2694:1: Bank80.removeAllTilesOf_88._next = $808e62
Bank80.asm:2209:1: Bank80.plotTileMap_88 = $808bda
Bank80.asm:2211:1: Bank80.plotTileMap_88._ASSERT_axy8 = $808bda
Bank80.asm:2262:1: Bank80.plotTileMap_88._exit = $808c32
Bank80.asm:2210:1: Bank80.plotTileMap_88._ASSERT_jsr = $808bda
Bank80.asm:2228:1: Bank80.plotTileMap_88._pltY = $808bf4
Bank80.asm:2231:1: Bank80.plotTileMap_88._pltX = $808bf7
Bank80.asm:2972:1: Bank80.handleFall = $809045
Bank80.asm:2973:1: Bank80.handleFall._ASSERT_axy8 = $809045
Bank80.asm:2992:1: Bank80.handleFall._dontStopFloat = $80906c
Bank80.asm:3000:1: Bank80.handleFall._checkUpStart = $80907c
Bank80.asm:2983:1: Bank80.handleFall._didntJustStartFalling = $809058
Bank80.asm:2034:1: Bank80.Ent16_32_ORVal = $808a77
sharedWRAM.asm:31:1: Bank80.mTMW = $800071
Bank80.asm:5836:1: Bank80.PASSWORD_SPRING = $80bc9f
Bank80.asm:4817:1: Bank80.BearBodyRawFramesRight = (8576,8580)
Bank80.asm:4790:1: Bank80.kSpiderFallAnimOffset = 4
Bank80.asm:4783:1: Bank80.SpiderRawFramesFallLeft = (8544,8546)
Bank80.asm:3023:1: Bank80.changePlayerDir = $8090a8
Bank80.asm:3024:1: Bank80.changePlayerDir._ASSERT_axy8 = $8090a8
Bank80.asm:592:1: Bank80.EndOfGameLoop = $80835b
Bank80.asm:593:1: Bank80.EndOfGameLoop._ASSERT_axy8 = $80835b
Bank80.asm:599:1: Bank80.EndOfGameLoop._noBulletStart = $808369
Bank80.asm:1600:1: Bank80.kStatusRanges = $8087a3
Bank80.asm:1603:2: Bank80.kStatusRanges.High = 2
Bank80.asm:1601:2: Bank80.kStatusRanges.Score = 0
Bank80.asm:1604:2: Bank80.kStatusRanges.QWAKB = 3
Bank80.asm:1602:2: Bank80.kStatusRanges.QWAKT = 1
sharedWRAM.asm:73:1: Bank80.disableUpdateSpritesXYToOAMNF = $800293
sharedWRAM.asm:70:1: Bank80.PasswordLevelSkip = $800289
Bank80.asm:1290:1: Bank80.kScoreIndex = $8085cb
Bank80.asm:1291:2: Bank80.kScoreIndex.fruit = 0
Bank80.asm:1292:2: Bank80.kScoreIndex.flower = 1
Bank80.asm:1293:2: Bank80.kScoreIndex.key = 2
Bank80.asm:1294:2: Bank80.kScoreIndex.boss = 3
Bank80.asm:18:1: Bank80.kSprBase = 0
sharedWRAM.asm:64:1: Bank80.ActivePassword = $800278
Bank80.asm:67:1: Bank80.kKeyToWallDelta = 7
sharedWRAM.asm:8:1: Bank80.mBG3SC = $800043
Bank80.asm:1391:1: Bank80.clearScreenMirrorCommon_16x = $808674
Bank80.asm:1392:1: Bank80.clearScreenMirrorCommon_16x._ASSERT_a16 = $808674
Bank80.asm:4316:1: Bank80.entGhostCheckY = $809919
Bank80.asm:4331:1: Bank80.entGhostCheckY._down = $809932
Bank80.asm:4891:1: Bank80.CircleJumpTableCount = 48
Bank80.asm:5433:1: Bank80.TileFuncLUT = $80a0d3
Bank80.asm:618:1: Bank80.TSSetup = $808384
Bank80.asm:619:1: Bank80.TSSetup._ASSERT_axy8 = $808384
Bank80.asm:5411:1: Bank80.checkActionTile = $80a0b0
Bank80.asm:5413:1: Bank80.checkActionTile._ASSERT_axy8 = $80a0b0
Bank80.asm:5425:1: Bank80.checkActionTile._ASSERT_Y_LT_12 = $80a0c1
Bank80.asm:5412:1: Bank80.checkActionTile._ASSERT_jsr = $80a0b0
Bank80.asm:5424:1: Bank80.checkActionTile._found = $80a0c1
Bank80.asm:5504:1: Bank80.springFunc = $80a13b
Bank80.asm:5505:1: Bank80.springFunc._ASSERT_axy8 = $80a13b
Bank80.asm:68:1: Bank80.kDoorClosed = 10
Bank80.asm:3110:1: Bank80.updatePlayerAnim_88 = $809123
Bank80.asm:3112:1: Bank80.updatePlayerAnim_88._ASSERT_axy8 = $809123
Bank80.asm:3132:1: Bank80.updatePlayerAnim_88._store = $809141
Bank80.asm:3111:1: Bank80.updatePlayerAnim_88._ASSERT_jsr = $809123
Bank80.asm:3122:1: Bank80.updatePlayerAnim_88._skip = $809133
Bank80.asm:3125:1: Bank80.updatePlayerAnim_88._itTime = $809134
sharedWRAM.asm:21:1: Bank80.mW34SEL = $80005d
sharedWRAM.asm:40:1: Bank80.joyDown = $80007e
Bank80.asm:260:1: Bank80.MainLoopWait = $808138
sharedWRAM.asm:52:1: Bank80.PlayerData = $8000a2
qwak_structs.asm:44:1: Bank80.PlayerData.hasJumpedNZ = $8000ab
qwak_structs.asm:65:1: Bank80.PlayerData.flashColour = $8000bd
qwak_structs.asm:63:1: Bank80.PlayerData.exitAtIndex = $8000bc
qwak_structs.asm:61:1: Bank80.PlayerData.numBulletEgg = $8000bb
qwak_structs.asm:47:1: Bank80.PlayerData.startedJumpLR = $8000ae
qwak_structs.asm:66:1: Bank80.PlayerData.baseFlashTimeDelta = $8000be
qwak_structs.asm:49:1: Bank80.PlayerData.slowMoveNZ = $8000b0
qwak_structs.asm:54:1: Bank80.PlayerData.currAnim = $8000b5
qwak_structs.asm:41:1: Bank80.PlayerData.floatTimer = $8000a9
qwak_structs.asm:35:1: Bank80.PlayerData.minorState = $8000a3
qwak_structs.asm:58:1: Bank80.PlayerData.bulletUD = $8000b8
qwak_structs.asm:43:1: Bank80.PlayerData.onGroundNZ = $8000aa
qwak_structs.asm:53:1: Bank80.PlayerData.yDeltaAccum = $8000b3
QWAKSNES.asm:212:3: Bank80.PlayerData.yDeltaAccum.lo = $8000b3
QWAKSNES.asm:213:3: Bank80.PlayerData.yDeltaAccum.hi = $8000b4
qwak_structs.asm:59:1: Bank80.PlayerData.bulletLR = $8000b9
qwak_structs.asm:51:1: Bank80.PlayerData.forceJumpNZ = $8000b2
qwak_structs.asm:45:1: Bank80.PlayerData.isFallingNZ = $8000ac
qwak_structs.asm:40:1: Bank80.PlayerData.canFloatNZ = $8000a8
qwak_structs.asm:37:1: Bank80.PlayerData.deadNZ = $8000a4
qwak_structs.asm:55:1: Bank80.PlayerData.frameOffset = $8000b6
qwak_structs.asm:60:1: Bank80.PlayerData.bulletBurstNZ = $8000ba
qwak_structs.asm:34:1: Bank80.PlayerData.state = $8000a2
qwak_structs.asm:50:1: Bank80.PlayerData.hitBubbleNum = $8000b1
qwak_structs.asm:57:1: Bank80.PlayerData.bulletActive = $8000b7
qwak_structs.asm:39:1: Bank80.PlayerData.shieldTimer = $8000a6
QWAKSNES.asm:212:3: Bank80.PlayerData.shieldTimer.lo = $8000a6
QWAKSNES.asm:213:3: Bank80.PlayerData.shieldTimer.hi = $8000a7
qwak_structs.asm:46:1: Bank80.PlayerData.facingRight = $8000ad
qwak_structs.asm:38:1: Bank80.PlayerData.hasShieldNZ = $8000a5
qwak_structs.asm:48:1: Bank80.PlayerData.movingLRNZ = $8000af
Bank80.asm:5515:1: Bank80.potionFunc = $80a144
Bank80.asm:5516:1: Bank80.potionFunc._ASSERT_axy8 = $80a144
Bank80.asm:5520:1: Bank80.potionFunc._loop = $80a14b
Bank80.asm:5527:1: Bank80.potionFunc._next = $80a15a
Bank80.asm:5822:1: Bank80.SFX = $80bbff
Bank80.asm:5325:1: Bank80.checkSolidTile = $80a039
Bank80.asm:5327:1: Bank80.checkSolidTile._ASSERT_axy8 = $80a039
Bank80.asm:5326:1: Bank80.checkSolidTile._ASSERT_jsr = $80a039
Bank80.asm:5347:1: Bank80.checkSolidTile._checkNotShadow = $80a058
Bank80.asm:5350:1: Bank80.checkSolidTile._exitSafe = $80a05c
Bank80.asm:5332:1: Bank80.checkSolidTile._skipDoorCheck = $80a042
Bank80.asm:5343:1: Bank80.checkSolidTile._notsafe = $80a056
Bank80.asm:4735:1: Bank80.kESprFlags = 32
Bank80.asm:5827:1: Bank80.MARTINPIPER = $80bc35
Bank80.asm:4754:1: Bank80.SpringRawAnimData = (8,8,8,2,1,0)
Bank80.asm:1773:1: Bank80.clearSpritesMirror_xx = $808889
Bank80.asm:1774:1: Bank80.clearSpritesMirror_xx._ASSERT_JSR = $808889
Bank80.asm:1909:1: Bank80.Ent16_16 = $80897e
Bank80.asm:1910:1: Bank80.Ent16_16._ASSERT_axy8 = $80897e
Bank80.asm:3215:1: Bank80.LeftFrames = (25600,)
Bank80.asm:4784:1: Bank80.SpiderRawFramesFallRight = (8548,8550)
Bank80.asm:1000:1: Bank80.interEnterDoor = $808476
Bank80.asm:1001:1: Bank80.interEnterDoor._ASSERT_axy8 = $808476
Bank80.asm:1025:1: Bank80.interEnterDoor._exit = $80848d
Bank80.asm:4423:1: Bank80.nextEnt = $8099d2
Bank80.asm:4702:1: Bank80.hurtBoss = $809b90
Bank80.asm:4704:1: Bank80.hurtBoss._ASSERT_axy8 = $809b90
Bank80.asm:4722:1: Bank80.hurtBoss._exit = $809bb8
Bank80.asm:4703:1: Bank80.hurtBoss._ASSERT_jsr = $809b90
Bank80.asm:4724:1: Bank80.hurtBoss._killedBoss = $809bb9
Bank80.asm:5139:1: Bank80.collideEntAgainstRest = $809f14
Bank80.asm:5141:1: Bank80.collideEntAgainstRest._ASSERT_axy8 = $809f14
Bank80.asm:5140:1: Bank80.collideEntAgainstRest._ASSERT_jsr = $809f14
Bank80.asm:258:1: Bank80.MainLoop = $808136
Bank80.asm:3476:1: Bank80.kFishLimits = $80933f
Bank80.asm:3477:2: Bank80.kFishLimits.startTwo = 181
Bank80.asm:3478:2: Bank80.kFishLimits.maxY = 197
Bank80.asm:359:1: Bank80.playerAppear = $8081c2
Bank80.asm:3827:1: Bank80.entUpNoDelta = $8095a3
Bank80.asm:3828:1: Bank80.entUpNoDelta._ASSERT_axy8 = $8095a3
sharedWRAM.asm:2:1: Bank80.mINIDISP = $800037
Bank80.asm:4842:1: Bank80.EntityFrameData = $809bcd
Bank80.asm:4843:2: Bank80.EntityFrameData.lo = $809bcd
Bank80.asm:4844:2: Bank80.EntityFrameData.hi = $809c24
Bank80.asm:2332:1: Bank80.calcBCDEforTileY_88 = $808c65
Bank80.asm:2334:1: Bank80.calcBCDEforTileY_88._ASSERT_axy8 = $808c65
Bank80.asm:2351:1: Bank80.calcBCDEforTileY_88._canDoRight = $808c82
Bank80.asm:2333:1: Bank80.calcBCDEforTileY_88._ASSERT_jsr = $808c65
Bank80.asm:2342:1: Bank80.calcBCDEforTileY_88._canDoLeft = $808c72
Bank80.asm:4806:1: Bank80.BearEntAnimData = (64,67,3,4,2,4)
Bank80.asm:396:1: Bank80.playerNormal = $808207
Bank80.asm:480:1: Bank80.playerNormal._addY = $808298
Bank80.asm:428:6: Bank80.playerNormal._skipDeath = $808250
Bank80.asm:439:2: Bank80.playerNormal._checkBossDeath = $808263
Bank80.asm:445:1: Bank80.playerNormal._noSpriteCollision = $80826c
Bank80.asm:443:1: Bank80.playerNormal._normalEnt = $80826a
Bank80.asm:511:1: Bank80.playerNormal._noShield = $8082e5
Bank80.asm:459:1: Bank80.playerNormal._skipDeathCheck = $808285
Bank80.asm:431:2: Bank80.playerNormal._bossBounce = $808254
sharedWRAM.asm:79:1: Bank80.OAMMirror = $8003f3
Bank80.asm:3876:1: Bank80.entFishFunc = $809601
Bank80.asm:3877:1: Bank80.entFishFunc._ASSERT_axy8 = $809601
Bank80.asm:3893:1: Bank80.entFishFunc._moveFish = $80961e
Bank80.asm:3913:1: Bank80.entFishFunc._store = $809643
Bank80.asm:3890:1: Bank80.entFishFunc._next = $809619
Bank80.asm:3900:1: Bank80.entFishFunc._storeDirect = $80962a
Bank80.asm:3887:1: Bank80.entFishFunc._exit = $809616
Bank80.asm:3902:1: Bank80.entFishFunc._keepGoing = $80962d
Bank80.asm:3921:1: Bank80.entFishFunc._safe = $809651
sharedWRAM.asm:35:1: Bank80.mNMITIMEN = $800079
Bank80.asm:2094:1: Bank80.dmaFixedChars_xx = $808af3
Bank80.asm:2095:1: Bank80.dmaFixedChars_xx._ASSERT_JSR = $808af3
Bank80.asm:4832:1: Bank80.BossDummyAnimData = (87,87,2,12,2,6)
Bank80.asm:2662:1: Bank80.countTempMapTile_88 = $808e3e
Bank80.asm:2666:1: Bank80.countTempMapTile_88._ASSERT_axy8 = $808e3e
Bank80.asm:2665:1: Bank80.countTempMapTile_88._ASSERT_jsr = $808e3e
Bank80.asm:2673:1: Bank80.countTempMapTile_88._skip = $808e48
Bank80.asm:2669:1: Bank80.countTempMapTile_88._loop = $808e42
Bank80.asm:5835:1: Bank80.PASSWORD_RED = $80bc93
Bank80.asm:2817:1: Bank80.kPlayerStateExit = $808f3b
Bank80.asm:2818:2: Bank80.kPlayerStateExit.waitForAnimation = 0
Bank80.asm:2492:1: Bank80.convertIndexToScreenAndCRAM = $808d45
Bank80.asm:2495:1: Bank80.convertIndexToScreenAndCRAM._ASSERT_axy8 = $808d45
Bank80.asm:2494:1: Bank80.convertIndexToScreenAndCRAM._ASSERT_jsr = $808d45
Bank80.asm:2035:1: Bank80.Ent32_32_ORVal = $808a7b
Bank80.asm:5693:1: Bank80.TitleScreenData = $80bb29
Bank80.asm:5712:1: Bank80.TitleScreenData.Code = (6,7,10)
Bank80.asm:5713:1: Bank80.TitleScreenData.Art = (8,7,11)
Bank80.asm:5718:1: Bank80.TitleScreenData.Saul1 = (18,13,11)
Bank80.asm:5719:1: Bank80.TitleScreenData.Saul2 = (18,13,12)
Bank80.asm:5739:1: Bank80.TitleScreenData.allPos = (8464,8576,8710,8846,8910,8974,9100,9230,9300,8922,8986,9368,8982)
Bank80.asm:5729:1: Bank80.TitleScreenData.G1 = ((26,8,4),(2,0,6),(4,3,8),(6,7,10))
Bank80.asm:5737:1: Bank80.TitleScreenData.string = $80bb39
Bank80.asm:5731:1: Bank80.TitleScreenData.G3 = ((16,10,17),(18,13,11),(18,13,12),(32,12,18))
Bank80.asm:5695:1: Bank80.TitleScreenData.SpriteStruct = $80bb29
Bank80.asm:5697:2: Bank80.TitleScreenData.SpriteStruct._WDef = 12680
Bank80.asm:5699:2: Bank80.TitleScreenData.SpriteStruct._KDef = 12744
Bank80.asm:5698:2: Bank80.TitleScreenData.SpriteStruct._ADef = 12684
Bank80.asm:5696:2: Bank80.TitleScreenData.SpriteStruct._QDef = 12620
Bank80.asm:5701:2: Bank80.TitleScreenData.SpriteStruct.sprites = $80bb29
Bank80.asm:5705:2: Bank80.TitleScreenData.SpriteStruct.kUpper = $aa
Bank80.asm:5725:1: Bank80.TitleScreenData.Password = (28,5,19)
Bank80.asm:5730:1: Bank80.TitleScreenData.G2 = ((8,7,11),(10,7,12),(12,6,14),(14,7,16))
Bank80.asm:5715:1: Bank80.TitleScreenData.Special = (12,6,14)
Bank80.asm:5721:1: Bank80.TitleScreenData.Both = (24,7,22)
Bank80.asm:5724:1: Bank80.TitleScreenData.None = (22,30,22)
Bank80.asm:5722:1: Bank80.TitleScreenData.Music2 = (10,15,22)
Bank80.asm:5711:1: Bank80.TitleScreenData.Ported = (4,3,8)
Bank80.asm:5726:1: Bank80.TitleScreenData.PasswordBlank = (30,14,20)
Bank80.asm:5717:1: Bank80.TitleScreenData.Didi = (16,10,17)
Bank80.asm:5716:1: Bank80.TitleScreenData.Soci = (14,7,16)
Bank80.asm:5720:1: Bank80.TitleScreenData.Optiroc = (32,12,18)
Bank80.asm:5710:1: Bank80.TitleScreenData.Original = (2,0,6)
Bank80.asm:5709:1: Bank80.TitleScreenData.Version = (26,8,4)
Bank80.asm:5714:1: Bank80.TitleScreenData.Music = (10,7,12)
Bank80.asm:5741:1: Bank80.TitleScreenData.stringPos = $80bb53
Bank80.asm:5723:1: Bank80.TitleScreenData.SFX = (20,24,22)
Bank80.asm:5734:1: Bank80.TitleScreenData.AllStrings = ((26,8,4),(2,0,6),(4,3,8),(6,7,10),(8,7,11),(10,7,12),(12,6,14),(14,7,16),(16,10,17),(18,13,11),(18,13,12),(32,12,18))
Bank80.asm:4772:1: Bank80.GhostRawFramesRight = (24864,24866,24868,24870)
Bank80.asm:5113:1: Bank80.collidePlayerAgainstRest = $809ee8
Bank80.asm:5115:1: Bank80.collidePlayerAgainstRest._ASSERT_axy8 = $809ee8
Bank80.asm:5114:1: Bank80.collidePlayerAgainstRest._ASSERT_jsr = $809ee8
Bank80.asm:3026:1: Bank80.changePlayerAnimForCurrentDir = $8090ab
Bank80.asm:3027:1: Bank80.changePlayerAnimForCurrentDir._ASSERT_axy8 = $8090ab
Bank80.asm:3045:1: Bank80.changePlayerAnimForCurrentDir._notMoving = $8090c8
Bank80.asm:3034:1: Bank80.changePlayerAnimForCurrentDir._notFlap = $8090b6
Bank80.asm:3040:1: Bank80.changePlayerAnimForCurrentDir._onGround = $8090bf
Bank80.asm:3047:1: Bank80.changePlayerAnimForCurrentDir._still = $8090ca
Bank80.asm:3262:1: Bank80.PlayerColourLUT = $8091fc
Bank80.asm:3264:2: Bank80.PlayerColourLUT.lo = $8091fc
Bank80.asm:3265:2: Bank80.PlayerColourLUT.hi = $8091fe
Bank80.asm:3263:2: Bank80.PlayerColourLUT._colours = (16250,28144)
Bank80.asm:16:1: Bank80.kTileYCount = 12
Bank80.asm:5816:1: Bank80.ORIGINAL = $80bb99
Bank80.asm:4164:1: Bank80.springEntHandleX = $809810
Bank80.asm:4182:1: Bank80.springEntHandleX._left = $809835
Bank80.asm:610:1: Bank80.titleScreenLoop = $808376
Bank80.asm:611:1: Bank80.titleScreenLoop._ASSERT_axy8 = $808376
Bank80.asm:1113:1: Bank80.updateTickdowns_88 = $8084fa
Bank80.asm:1115:1: Bank80.updateTickdowns_88._ASSERT_axy8 = $8084fa
Bank80.asm:1114:1: Bank80.updateTickdowns_88._ASSERT_jsr = $8084fa
Bank80.asm:1117:1: Bank80.updateTickdowns_88._l = $8084fc
Bank80.asm:1120:1: Bank80.updateTickdowns_88._next = $808504
Bank80.asm:3218:1: Bank80.JumpRightFrames = (9280,9282)
Bank80.asm:1897:1: Bank80.EntSpriteConvertToOAMIndex = $808973
Bank80.asm:1898:1: Bank80.EntSpriteConvertToOAMIndex._ASSERT_axy8 = $808973
Bank80.asm:4099:1: Bank80.springEntFunc = $80979e
Bank80.asm:4133:1: Bank80.springEntFunc._falling = $8097df
Bank80.asm:4105:1: Bank80.springEntFunc._move = $8097a8
Bank80.asm:5819:1: Bank80.ART = $80bbe8
Bank80.asm:5310:1: Bank80.doMinMaxBitTest = $80a02f
Bank80.asm:5312:1: Bank80.doMinMaxBitTest._ASSERT_axy8 = $80a02f
Bank80.asm:5316:1: Bank80.doMinMaxBitTest._secPass = $80a035
Bank80.asm:5311:1: Bank80.doMinMaxBitTest._ASSERT_jsr = $80a02f
Bank80.asm:5318:1: Bank80.doMinMaxBitTest._secFail = $80a036
Bank80.asm:3073:1: Bank80.setPlayerAnimeTo_88 = $8090ed
Bank80.asm:3075:1: Bank80.setPlayerAnimeTo_88._ASSERT_axy8 = $8090ed
Bank80.asm:3074:1: Bank80.setPlayerAnimeTo_88._ASSERT_jsr = $8090ed
Bank80.asm:3083:1: Bank80.setPlayerAnimeTo_88._dontchange = $8090ff
sharedWRAM.asm:46:1: Bank80.oldJoyFire = $800084
sharedWRAM.asm:27:1: Bank80.mWBGLOG = $800069
Bank80.asm:5643:1: Bank80.setAnimateDoorToClose_88 = $80a1ee
Bank80.asm:5645:1: Bank80.setAnimateDoorToClose_88._ASSERT_axy8 = $80a1ee
Bank80.asm:5644:1: Bank80.setAnimateDoorToClose_88._ASSERT_jsr = $80a1ee
sharedWRAM.asm:10:1: Bank80.mBG12NBA = $800047
Bank80.asm:3302:1: Bank80.updateBullet = $80923a
Bank80.asm:3304:1: Bank80.updateBullet._ASSERT_axy8 = $80923a
Bank80.asm:3303:1: Bank80.updateBullet._ASSERT_jsr = $80923a
Bank80.asm:4750:1: Bank80.HeliRawAnimData = (0,0,8,8,0,0)
sharedWRAM.asm:50:1: Bank80.GameData = $800088
qwak_structs.asm:5:1: Bank80.GameData.high = $800090
qwak_structs.asm:7:1: Bank80.GameData.exitOpenNZ = $800097
qwak_structs.asm:4:1: Bank80.GameData.score = $80008a
qwak_structs.asm:2:1: Bank80.GameData.lives = $800088
qwak_structs.asm:3:1: Bank80.GameData.flowers = $800089
qwak_structs.asm:8:1: Bank80.GameData.musicMode = $800098
qwak_structs.asm:6:1: Bank80.GameData.currLevel = $800096
Bank80.asm:4823:1: Bank80.OctopussBodyRawFramesRight = (8576,8580)
Bank80.asm:5670:1: Bank80.Level12 = $80ab0b
Bank80.asm:5671:1: Bank80.Level13 = $80abda
Bank80.asm:5668:1: Bank80.Level10 = $80a975
Bank80.asm:5669:1: Bank80.Level11 = $80aa3c
Bank80.asm:5674:1: Bank80.Level16 = $80ae47
Bank80.asm:5675:1: Bank80.Level17 = $80af16
Bank80.asm:5672:1: Bank80.Level14 = $80acab
Bank80.asm:5673:1: Bank80.Level15 = $80ad7e
Bank80.asm:5676:1: Bank80.Level18 = $80afe7
Bank80.asm:5677:1: Bank80.Level19 = $80b0b8
Bank80.asm:4453:1: Bank80.setEntSpriteForDirection = $8099fe
Bank80.asm:4455:1: Bank80.setEntSpriteForDirection._ASSERT_axy8 = $8099fe
Bank80.asm:4454:1: Bank80.setEntSpriteForDirection._ASSERT_jsr = $8099fe
Bank80.asm:73:1: Bank80.kBossOctoBankOR = $10
Bank80.asm:4684:1: Bank80.isTypeBossBounceDetect = $809b84
Bank80.asm:4689:1: Bank80.isTypeBossBounceDetect._ASSERT_axy8 = $809b84
Bank80.asm:4688:1: Bank80.isTypeBossBounceDetect._ASSERT_jsr = $809b84
Bank80.asm:4696:1: Bank80.isTypeBossBounceDetect._yes = $809b8e
sharedWRAM.asm:32:1: Bank80.mTSW = $800073
sharedWRAM.asm:18:1: Bank80.mBG4HOFS = $800057
QWAKSNES.asm:212:3: Bank80.mBG4HOFS.lo = $800057
QWAKSNES.asm:213:3: Bank80.mBG4HOFS.hi = $800058
Bank80.asm:1367:1: Bank80.kEmptyTileNum = 47
Bank80.asm:4804:1: Bank80.BearRawFramesLeft = (8448,8452,8456)
Bank80.asm:2396:1: Bank80.DoIndexCheck = $808cc8
Bank80.asm:4767:1: Bank80.BatRawAnimData = (24,28,4,8,0,0)
Bank80.asm:5824:1: Bank80.BOTH = $80bc08
Bank80.asm:934:1: Bank80.interSetUp = $80840d
Bank80.asm:935:1: Bank80.interSetUp._ASSERT_axy8 = $80840d
Bank80.asm:5194:1: Bank80.hitY = $809f6b
Bank80.asm:5195:1: Bank80.hitY._ASSERT_axy8 = $809f6b
Bank80.asm:4869:1: Bank80.SpringDirectionToDeltaLUT = $809cb3
Bank80.asm:5568:1: Bank80.exitFunc = $80a18d
Bank80.asm:5570:1: Bank80.exitFunc._ASSERT_axy8 = $80a18d
Bank80.asm:5569:1: Bank80.exitFunc._ASSERT_jsr = $80a18d
Bank80.asm:5579:1: Bank80.exitFunc._notOpen = $80a1a2
sharedWRAM.asm:51:1: Bank80.LevelData = $800099
qwak_structs.asm:17:1: Bank80.LevelData.exitTargetFrame = $80009f
qwak_structs.asm:14:1: Bank80.LevelData.playerIndex = $80009b
qwak_structs.asm:16:1: Bank80.LevelData.exitFrame = $80009e
qwak_structs.asm:18:1: Bank80.LevelData.exitFrameDelta = $8000a0
qwak_structs.asm:13:1: Bank80.LevelData.totalKeys = $80009a
qwak_structs.asm:12:1: Bank80.LevelData.numKeysLeft = $800099
qwak_structs.asm:15:1: Bank80.LevelData.exitIndex = $80009c
qwak_structs.asm:19:1: Bank80.LevelData.levelGraphicsSet = $8000a1
Bank80.asm:1755:1: Bank80.SpriteUpperEmpty = $808875
sharedWRAM.asm:41:1: Bank80.joyFire = $80007f
Bank80.asm:3792:1: Bank80.ENTDirectionCheckFuncLUT = $80955d
Bank80.asm:2010:1: Bank80.entSpriteUpdateUpperFlagsGetIndexes = $808a58
Bank80.asm:2027:1: Bank80.entSpriteUpdateUpperFlagsGetIndexes._noMSB = $808a6e
Bank80.asm:3937:1: Bank80.spiderLookPlayer = $80966d
Bank80.asm:3938:1: Bank80.spiderLookPlayer._ASSERT_axy8 = $80966d
Bank80.asm:3960:2: Bank80.spiderLookPlayer._storeSprite = $80969a
Bank80.asm:3969:1: Bank80.spiderLookPlayer._left = $8096a9
Bank80.asm:3966:2: Bank80.spiderLookPlayer._noAnim = $8096a6
sharedWRAM.asm:42:1: Bank80.oldJoyLeft = $800080
Bank80.asm:280:1: Bank80.DMAZero = $80814f
sharedWRAM.asm:69:1: Bank80.PasswordHaveSpring = $800288
Bank80.asm:1714:1: Bank80.pltFlowers = $808833
Bank80.asm:1716:1: Bank80.pltFlowers._ASSERT_axy8 = $808833
Bank80.asm:1715:1: Bank80.pltFlowers._ASSERT_jsr = $808833
Bank80.asm:1717:1: Bank80.pltFlowers._statusFlowers = $7e26ba
Bank80.asm:4033:1: Bank80.circlerFunc = $809725
Bank80.asm:4034:1: Bank80.circlerFunc._ASSERT_axy8 = $809725
Bank80.asm:4069:1: Bank80.circlerFunc._subbedX = $80976a
Bank80.asm:4094:1: Bank80.circlerFunc._cirStore = $809795
Bank80.asm:4079:1: Bank80.circlerFunc._storeX = $809778
Bank80.asm:4039:1: Bank80.circlerFunc._cirActive = $80972f
Bank80.asm:4078:1: Bank80.circlerFunc._loadX = $809778
Bank80.asm:5815:1: Bank80.GAMEOVER = $80bb8f
sharedWRAM.asm:38:1: Bank80.joyRight = $80007c
Bank80.asm:3220:1: Bank80.FlapRightFrames = (9224,9228)
sharedWRAM.asm:71:1: Bank80.checkSpriteToCharData = $80028a
qwak_structs.asm:94:1: Bank80.checkSpriteToCharData.xDeltaCheck = $80028a
QWAKSNES.asm:212:3: Bank80.checkSpriteToCharData.xDeltaCheck.lo = $80028a
QWAKSNES.asm:213:3: Bank80.checkSpriteToCharData.xDeltaCheck.hi = $80028b
qwak_structs.asm:96:1: Bank80.checkSpriteToCharData.xDeltaBackup = $80028e
QWAKSNES.asm:212:3: Bank80.checkSpriteToCharData.xDeltaBackup.lo = $80028e
QWAKSNES.asm:213:3: Bank80.checkSpriteToCharData.xDeltaBackup.hi = $80028f
qwak_structs.asm:95:1: Bank80.checkSpriteToCharData.yDeltaCheck = $80028c
QWAKSNES.asm:212:3: Bank80.checkSpriteToCharData.yDeltaCheck.lo = $80028c
QWAKSNES.asm:213:3: Bank80.checkSpriteToCharData.yDeltaCheck.hi = $80028d
qwak_structs.asm:97:1: Bank80.checkSpriteToCharData.yDeltaBackup = $800290
QWAKSNES.asm:212:3: Bank80.checkSpriteToCharData.yDeltaBackup.lo = $800290
QWAKSNES.asm:213:3: Bank80.checkSpriteToCharData.yDeltaBackup.hi = $800291
Bank80.asm:282:1: Bank80.kHideScreen = $808151
Bank80.asm:283:2: Bank80.kHideScreen.hide = $80
Bank80.asm:284:2: Bank80.kHideScreen.show = $0f
sharedWRAM.asm:33:1: Bank80.mCOLDATA = $800075
Bank80.asm:4888:1: Bank80.CircleJumpTableStart = $809d00
Bank80.asm:4771:1: Bank80.GhostRawFramesLeft = (8480,8482,8484,8486)
sharedWRAM.asm:20:1: Bank80.mW12SEL = $80005b
Bank80.asm:3796:1: Bank80.entPositiveTBLUD = $809567
Bank80.asm:4781:1: Bank80.SpiderRawFramesWaitLeft = (8512,8514)
Bank80.asm:1734:1: Bank80.dmaOAM_xx = $80884d
Bank80.asm:1735:1: Bank80.dmaOAM_xx._ASSERT_JSR = $80884d
Bank80.asm:4854:1: Bank80.kSprites = $809cb3
Bank80.asm:4862:2: Bank80.kSprites.springFall = 12
Bank80.asm:4855:2: Bank80.kSprites.fish = 48
Bank80.asm:4864:2: Bank80.kSprites.bulletSprite = 0
Bank80.asm:4858:2: Bank80.kSprites.springNormal = 8
Bank80.asm:4865:2: Bank80.kSprites.bulletSplat = 6
Bank80.asm:4866:2: Bank80.kSprites.bulletRed = 8
Bank80.asm:4861:2: Bank80.kSprites.springFull = 11
Bank80.asm:4857:2: Bank80.kSprites.spiderRight = 42
Bank80.asm:4859:2: Bank80.kSprites.springCompress = 9
Bank80.asm:4863:2: Bank80.kSprites.bubbles = 84
Bank80.asm:4856:2: Bank80.kSprites.spiderLeft = 40
Bank80.asm:4860:2: Bank80.kSprites.springExpand = 10
Bank80.asm:1383:1: Bank80.clearMapInScreenMirror = $80866b
Bank80.asm:1385:1: Bank80.clearMapInScreenMirror._ASSERT_axy8 = $80866b
Bank80.asm:1384:1: Bank80.clearMapInScreenMirror._ASSERT_jsr = $80866b
sharedWRAM.asm:5:1: Bank80.mMOSIAC = $80003d
Bank80.asm:3707:1: Bank80.BuildEntCollisionTable = $8094cb
Bank80.asm:3709:1: Bank80.BuildEntCollisionTable._ASSERT_axy8 = $8094cb
Bank80.asm:3708:1: Bank80.BuildEntCollisionTable._ASSERT_jsr = $8094cb
Bank80.asm:5828:1: Bank80.OPTIROC = $80bc42
Bank80.asm:2195:1: Bank80.LevelCharsLUT = $808bd2
Bank80.asm:5687:1: Bank80.Level29 = $80b8c6
Bank80.asm:5686:1: Bank80.Level28 = $80b7f9
Bank80.asm:5681:1: Bank80.Level23 = $80b3ec
Bank80.asm:5680:1: Bank80.Level22 = $80b321
Bank80.asm:5679:1: Bank80.Level21 = $80b250
Bank80.asm:5678:1: Bank80.Level20 = $80b187
Bank80.asm:5685:1: Bank80.Level27 = $80b726
Bank80.asm:5684:1: Bank80.Level26 = $80b655
Bank80.asm:5683:1: Bank80.Level25 = $80b58a
Bank80.asm:5682:1: Bank80.Level24 = $80b4b7
Bank80.asm:3147:1: Bank80.setPlayerToIndexA = $809153
Bank80.asm:3468:1: Bank80.kBoss = $80933f
Bank80.asm:3470:2: Bank80.kBoss.hitPointsOctopuss = 9
Bank80.asm:3471:2: Bank80.kBoss.deathAnimTime = 25
Bank80.asm:3469:2: Bank80.kBoss.hitPoints = 7
Bank80.asm:3473:2: Bank80.kBoss.dead = 1
Bank80.asm:3472:2: Bank80.kBoss.normal = 0
Bank80.asm:3177:1: Bank80.removePickups_88 = $809176
Bank80.asm:3179:1: Bank80.removePickups_88._ASSERT_axy8 = $809176
Bank80.asm:3178:1: Bank80.removePickups_88._ASSERT_jsr = $809176
Bank80.asm:5825:1: Bank80.SPECIALTHANKS = $80bc0d
Bank80.asm:2522:1: Bank80.convertIndexToEntSpriteXY = $808d66
Bank80.asm:2524:1: Bank80.convertIndexToEntSpriteXY._ASSERT_axy8 = $808d66
Bank80.asm:2523:1: Bank80.convertIndexToEntSpriteXY._ASSERT_jsr = $808d66
Bank80.asm:5831:1: Bank80.PASSWORDBLANK = $80bc7a
Bank80.asm:5837:1: Bank80.PASSWORD_LEVEL = $80bcab
sharedWRAM.asm:16:1: Bank80.mBG3HOFS = $800053
QWAKSNES.asm:212:3: Bank80.mBG3HOFS.lo = $800053
QWAKSNES.asm:213:3: Bank80.mBG3HOFS.hi = $800054
Bank80.asm:3054:1: Bank80.incPlayerYDeltaAndReturn = $8090d0
Bank80.asm:3056:1: Bank80.incPlayerYDeltaAndReturn._ASSERT_axy8 = $8090d0
Bank80.asm:3055:1: Bank80.incPlayerYDeltaAndReturn._ASSERT_jsr = $8090d0
Bank80.asm:4824:1: Bank80.OctopussBodyAnimData = (80,82,2,4,2,5)
Bank80.asm:3819:1: Bank80.entUp = $809592
Bank80.asm:3820:1: Bank80.entUp._ASSERT_axy8 = $809592
Bank80.asm:4847:1: Bank80.EntityAnimData = $809c7b
Bank80.asm:4849:2: Bank80.EntityAnimData.frameRate = $809c89
Bank80.asm:4850:2: Bank80.EntityAnimData.frameSize = $809c97
Bank80.asm:4848:2: Bank80.EntityAnimData.frameCount = $809c7b
Bank80.asm:4851:2: Bank80.EntityAnimData.collisionBox = $809ca5
Bank80.asm:5630:1: Bank80.setAnimateDoorToOpen_88 = $80a1de
Bank80.asm:5632:1: Bank80.setAnimateDoorToOpen_88._ASSERT_axy8 = $80a1de
Bank80.asm:5631:1: Bank80.setAnimateDoorToOpen_88._ASSERT_jsr = $80a1de
sharedWRAM.asm:37:1: Bank80.joyLeft = $80007b
Bank80.asm:1895:1: Bank80.ENTSpriteDispatchLUT = $80896d
Bank80.asm:4816:1: Bank80.BearBodyRawFramesLeft = (8520,8524)
Bank80.asm:2453:1: Bank80.renderTile_88 = $808d07
Bank80.asm:2455:1: Bank80.renderTile_88._ASSERT_axy8 = $808d07
Bank80.asm:2454:1: Bank80.renderTile_88._ASSERT_jsr = $808d07
Bank80.asm:5817:1: Bank80.CX16PORT = $80bbba
Bank80.asm:1638:1: Bank80.plotEmptyStatusCharToZPLong = $8087c4
Bank80.asm:3838:1: Bank80.entLeft = $8095b7
Bank80.asm:3839:1: Bank80.entLeft._ASSERT_axy8 = $8095b7
Bank80.asm:930:1: Bank80.InterFuncLUT = $808407
Bank80.asm:4187:1: Bank80.springEntXCollideEnd = $80983d
Bank80.asm:4193:3: Bank80.springEntXCollideEnd._hit = $809847
Bank80.asm:4210:3: Bank80.springEntXCollideEnd._noclip = $809866
Bank80.asm:4215:3: Bank80.springEntXCollideEnd._store = $80986e
Bank80.asm:4199:2: Bank80.springEntXCollideEnd._noCollideRight = $809850
sharedWRAM.asm:80:1: Bank80.OAMMirrorHigh = $8005f3
Bank80.asm:3143:1: Bank80.setPlayerToSpawnPoint_88 = $809150
Bank80.asm:3145:1: Bank80.setPlayerToSpawnPoint_88._ASSERT_axy8 = $809150
Bank80.asm:3144:1: Bank80.setPlayerToSpawnPoint_88._ASSERT_jsr = $809150
Bank80.asm:3493:1: Bank80.unpackEntityBytes = $80933f
Bank80.asm:3495:1: Bank80.unpackEntityBytes._ASSERT_axy8 = $80933f
Bank80.asm:3494:1: Bank80.unpackEntityBytes._ASSERT_jsr = $80933f
Bank80.asm:3514:2: Bank80.unpackEntityBytes._l = $809365
Bank80.asm:3629:1: Bank80.unpackEntityBytes._BossOctopuss = $809456
Bank80.asm:3555:2: Bank80.unpackEntityBytes._setupBubbleLoop = $8093b3
Bank80.asm:3568:1: Bank80.unpackEntityBytes._BossBear = $8093cb
Bank80.asm:3545:1: Bank80.unpackEntityBytes._e = $8093a0
Bank80.asm:3576:1: Bank80.unpackEntityBytes._sharedBoss = $8093dc
Bank80.asm:3565:1: Bank80.unpackEntityBytes._noPipes = $8093ca
Bank80.asm:3539:2: Bank80.unpackEntityBytes._nextEnt = $809398
Bank80.asm:2913:1: Bank80.normalJumpUpdate = $808fe6
Bank80.asm:5102:1: Bank80.CollisionBoxesH = $809eda
Bank80.asm:1297:1: Bank80.FruitScore = $8085cb
Bank80.asm:3398:1: Bank80.UpdateBulletEndXColl = $8092d3
Bank80.asm:3400:1: Bank80.UpdateBulletEndXColl._ASSERT_axy8 = $8092d3
Bank80.asm:3399:1: Bank80.UpdateBulletEndXColl._ASSERT_jsr = $8092d3
Bank80.asm:3415:1: Bank80.UpdateBulletEndXColl._checkEnts = $8092f2
Bank80.asm:3434:2: Bank80.UpdateBulletEndXColl._exit2 = $80931e
Bank80.asm:3445:1: Bank80.UpdateBulletEndXColl._found = $80932f
Bank80.asm:3407:1: Bank80.UpdateBulletEndXColl._updateX = $8092e1
Bank80.asm:3436:1: Bank80.UpdateBulletEndXColl._boss = $80931f
Bank80.asm:4800:1: Bank80.CirclerRawAnimData = (56,60,4,2,0,0)
Bank80.asm:2204:1: Bank80.ScreenUpdateRequiredN0 = $0036
Bank80.asm:5106:1: Bank80.collideBulletAgainstRest = $809ee2
Bank80.asm:5108:1: Bank80.collideBulletAgainstRest._ASSERT_axy8 = $809ee2
Bank80.asm:5107:1: Bank80.collideBulletAgainstRest._ASSERT_jsr = $809ee2
Bank80.asm:1692:1: Bank80.pltLives = $808813
Bank80.asm:1694:1: Bank80.pltLives._ASSERT_axy8 = $808813
Bank80.asm:1693:1: Bank80.pltLives._ASSERT_jsr = $808813
Bank80.asm:1695:1: Bank80.pltLives._statusLives = $7e26b0
Bank80.asm:1709:1: Bank80.pltLives._safe = $80882e
Bank80.asm:3337:1: Bank80.bulletNotDead = $809265
Bank80.asm:3339:1: Bank80.bulletNotDead._ASSERT_axy8 = $809265
Bank80.asm:3338:1: Bank80.bulletNotDead._ASSERT_jsr = $809265
Bank80.asm:3353:1: Bank80.bulletNotDead._bulletFull = $809283
Bank80.asm:1640:1: Bank80.plotStatusCharToZPLong = $8087c6
Bank80.asm:1809:1: Bank80.updateAllSpriteXYsToOAMMirror_88 = $8088c5
Bank80.asm:1811:1: Bank80.updateAllSpriteXYsToOAMMirror_88._ASSERT_axy8 = $8088c5
Bank80.asm:1810:1: Bank80.updateAllSpriteXYsToOAMMirror_88._ASSERT_jsr = $8088c5
Bank80.asm:1868:1: Bank80.updateAllSpriteXYsToOAMMirror_88._noBullet = $80893d
Bank80.asm:1872:1: Bank80.updateAllSpriteXYsToOAMMirror_88._bulletTile = $808945
Bank80.asm:1890:1: Bank80.updateAllSpriteXYsToOAMMirror_88._notActive = $808968
Bank80.asm:1881:1: Bank80.updateAllSpriteXYsToOAMMirror_88._EntLoop = $808956
Bank80.asm:616:1: Bank80.TitleScreenLoopFuncLUT = $80837e
sharedWRAM.asm:65:1: Bank80.PasswordEntryIndex = $800284
Bank80.asm:3808:1: Bank80.entRightNoDelta = $80957e
Bank80.asm:3809:1: Bank80.entRightNoDelta._ASSERT_axy8 = $80957e
Bank80.asm:4792:1: Bank80.FishRawFramesUp = (8576,8578,8580,8582)
Bank80.asm:4376:1: Bank80.entBatYResults = $809982
Bank80.asm:4381:1: Bank80.entBatYResults._dontFall = $80998b
sharedWRAM.asm:77:1: Bank80.PasswordRAMCache = $8003e7
Bank80.asm:5830:1: Bank80.PASSWORD = $80bc5b
sharedWRAM.asm:55:1: Bank80.TICK_DOWN_END = $8000cd
Bank80.asm:2433:1: Bank80.pltSingleTile = $808cf8
Bank80.asm:2436:1: Bank80.pltSingleTile._ASSERT_axy8 = $808cf8
Bank80.asm:2435:1: Bank80.pltSingleTile._ASSERT_jsr = $808cf8
Bank80.asm:3767:1: Bank80.EntUpdateFuncLUT = $80951a
Bank80.asm:1368:1: Bank80.ClearEmptyTile = $80865e
Bank80.asm:3858:1: Bank80.entDown = $8095de
Bank80.asm:3859:1: Bank80.entDown._ASSERT_axy8 = $8095de
Bank80.asm:3324:1: Bank80.burstBullet = $809255
Bank80.asm:3326:1: Bank80.burstBullet._ASSERT_axy8 = $809255
Bank80.asm:3325:1: Bank80.burstBullet._ASSERT_jsr = $809255
Bank80.asm:4249:1: Bank80.springEndAnimate = $8098a4
sharedWRAM.asm:4:1: Bank80.mBGMODE = $80003b
Bank80.asm:3270:1: Bank80.startBullet = $809200
Bank80.asm:3272:1: Bank80.startBullet._ASSERT_axy8 = $809200
Bank80.asm:3296:1: Bank80.startBullet._normal = $809234
Bank80.asm:3271:1: Bank80.startBullet._ASSERT_jsr = $809200
Bank80.asm:3298:1: Bank80.startBullet._store = $809236
Bank80.asm:4622:1: Bank80.AnimateLowerHalfBoss = $809b35
Bank80.asm:4624:1: Bank80.AnimateLowerHalfBoss._ASSERT_axy8 = $809b35
Bank80.asm:4633:1: Bank80.AnimateLowerHalfBoss._exit = $809b4a
Bank80.asm:4623:1: Bank80.AnimateLowerHalfBoss._ASSERT_jsr = $809b35
Bank80.asm:337:1: Bank80.justRTI = $8081a8
sharedWRAM.asm:23:1: Bank80.mWH0 = $800061
sharedWRAM.asm:24:1: Bank80.mWH1 = $800063
sharedWRAM.asm:25:1: Bank80.mWH2 = $800065
Bank80.asm:5820:1: Bank80.SAUL = $80bbec
Bank80.asm:1610:1: Bank80.StatusRangePairs := ((223,229),(211,217),(229,232),(217,223))
Bank80.asm:2040:1: Bank80.dmaPalletes_XX = $808a7f
Bank80.asm:2041:1: Bank80.dmaPalletes_XX._ASSERT_JSR = $808a7f
sharedWRAM.asm:39:1: Bank80.joyUp = $80007d
sharedWRAM.asm:67:1: Bank80.PasswordInfiLives = $800286
sharedWRAM.asm:9:1: Bank80.mBG4SC = $800045
Bank80.asm:5100:1: Bank80.CollisionBoxesW = $809eca
Bank80.asm:5099:1: Bank80.CollisionBoxesX = $809ec2
Bank80.asm:5101:1: Bank80.CollisionBoxesY = $809ed2
Bank80.asm:1432:1: Bank80.psaaixCommon = $8086a8
Bank80.asm:1453:1: Bank80.psaaixCommon._done = $8086d4
Bank80.asm:5812:1: Bank80.StringTableLUT = $80bb6d
Bank80.asm:4752:1: Bank80.SpringRawFrames = (8268,8270,8328,8330,8332,8334,8392,8394)
Bank80.asm:4598:1: Bank80.BossDeath = $809b00
Bank80.asm:4600:1: Bank80.BossDeath._ASSERT_axy8 = $809b00
Bank80.asm:4619:1: Bank80.BossDeath._exit = $809b32
Bank80.asm:4599:1: Bank80.BossDeath._ASSERT_jsr = $809b00
Bank80.asm:3695:1: Bank80.deactivateAllEntities = $8094c2
Bank80.asm:3697:1: Bank80.deactivateAllEntities._ASSERT_axy8 = $8094c2
Bank80.asm:3696:1: Bank80.deactivateAllEntities._ASSERT_jsr = $8094c2
Bank80.asm:5166:1: Bank80.collideAgainstEntPlayerEntry = $809f3c
Bank80.asm:5167:1: Bank80.collideAgainstEntPlayerEntry._ASSERT_axy8 = $809f3c
Bank80.asm:5657:1: Bank80.LevelTable = $80a1fe
Bank80.asm:5496:1: Bank80.spikeFunc = $80a135
Bank80.asm:5497:1: Bank80.spikeFunc._ASSERT_axy8 = $80a135
Bank80.asm:5288:1: Bank80.makeMinMaxXYForX = $80a005
Bank80.asm:5290:1: Bank80.makeMinMaxXYForX._ASSERT_axy8 = $80a005
Bank80.asm:5289:1: Bank80.makeMinMaxXYForX._ASSERT_jsr = $80a005
Bank80.asm:2267:1: Bank80.addShadowsToMap_88 = $808c33
Bank80.asm:2269:1: Bank80.addShadowsToMap_88._ASSERT_axy8 = $808c33
Bank80.asm:2268:1: Bank80.addShadowsToMap_88._ASSERT_jsr = $808c33
Bank80.asm:3795:1: Bank80.entPositiveTBL = $809565
Bank80.asm:3239:1: Bank80.PlayerFrameData = $809188
Bank80.asm:3255:2: Bank80.PlayerFrameData.animFrameRate = $8091ee
Bank80.asm:3248:3: Bank80.PlayerFrameData._frameWords := (9216,25600,9248,9250,9252,9254,25632,25634,25636,25638,9280,9282,25664,25666,9224,9228,25608,25612,9284,9286,9288,9290,9312,9314,25696,25698)
Bank80.asm:3252:2: Bank80.PlayerFrameData.animFrameChar = $8091b0
Bank80.asm:3249:3: Bank80.PlayerFrameData._frameCount := [1,1,4,4,2,2,2,2,4,4]
Bank80.asm:3251:2: Bank80.PlayerFrameData.animFrameIndexs = $8091a6
Bank80.asm:3240:2: Bank80.PlayerFrameData.sizes = $809188
Bank80.asm:3241:2: Bank80.PlayerFrameData.animTypes = $809192
Bank80.asm:3253:2: Bank80.PlayerFrameData.animFrameAttri = $8091ca
Bank80.asm:3242:2: Bank80.PlayerFrameData.animXOffset = $80919c
Bank80.asm:3246:7: Bank80.PlayerFrameData.frames := (9312,9314,25696,25698)
Bank80.asm:3247:3: Bank80.PlayerFrameData._animDataIndex := [0,1,2,6,10,12,14,16,18,22]
Bank80.asm:3254:2: Bank80.PlayerFrameData.animFrameCount = $8091e4
Bank80.asm:4334:1: Bank80.entGhostYResults = $809935
Bank80.asm:4335:1: Bank80.entGhostYResults._ASSERT_axy8 = $809935
Bank80.asm:4357:1: Bank80.entGhostYResults._ignoreCollision = $809961
Bank80.asm:4339:2: Bank80.entGhostYResults._toggleY = $80993b
Bank80.asm:4348:2: Bank80.entGhostYResults._entHitAndGoNext = $80994f
Bank80.asm:4350:1: Bank80.entGhostYResults._entGhostCheckSprites = $809952
Bank80.asm:4765:1: Bank80.BatRawAnimDataLeft = (8448,8450,8452,8454)
Bank80.asm:2821:1: Bank80.kPlayerStateDeath = $808f3b
Bank80.asm:2822:2: Bank80.kPlayerStateDeath.animate = 0
Bank80.asm:3206:1: Bank80.kSpriteAnimationType = $809188
Bank80.asm:3207:2: Bank80.kSpriteAnimationType.none = 0
Bank80.asm:3208:2: Bank80.kSpriteAnimationType.loop = 1
Bank80.asm:5468:1: Bank80.keyFunc = $80a10f
Bank80.asm:5469:1: Bank80.keyFunc._ASSERT_axy8 = $80a10f
Bank80.asm:5487:1: Bank80.keyFunc._changeDoor = $80a12f
Bank80.asm:5481:1: Bank80.keyFunc._done = $80a129
Bank80.asm:4637:1: Bank80.AnimateUpperHalfBoss = $809b4b
Bank80.asm:4639:1: Bank80.AnimateUpperHalfBoss._ASSERT_axy8 = $809b4b
Bank80.asm:4653:2: Bank80.AnimateUpperHalfBoss._under = $809b66
Bank80.asm:4638:1: Bank80.AnimateUpperHalfBoss._ASSERT_jsr = $809b4b
Bank80.asm:4656:1: Bank80.AnimateUpperHalfBoss._playerLeft = $809b69
Bank80.asm:345:1: Bank80.GAMELOOP = $8081a9
Bank80.asm:349:2: Bank80.GAMELOOP._ASSERT_A_LT_6 = $8081b1
Bank80.asm:4840:1: Bank80.AllAnimData := ((0,0,8,8,0,0),(8,8,8,2,1,0),(16,20,4,8,0,0),(24,28,4,8,0,0),(32,36,4,8,0,0),(40,42,2,8,0,0),(48,52,4,1,0,0),(56,60,4,2,0,0),(64,67,3,4,2,4),(70,73,3,4,2,4),(76,78,2,4,2,5),(80,82,2,4,2,5),(84,84,3,12,2,7),(87,87,2,12,2,6))
Bank80.asm:5826:1: Bank80.SOCI = $80bc22
Bank80.asm:5057:1: Bank80.CSTCCX = $809e7c
Bank80.asm:5059:1: Bank80.CSTCCX._ASSERT_axy8 = $809e7c
Bank80.asm:5095:1: Bank80.CSTCCX._exit = $809ec1
Bank80.asm:5058:1: Bank80.CSTCCX._ASSERT_jsr = $809e7c
Bank80.asm:5086:1: Bank80.CSTCCX._noX = $809eb4
Bank80.asm:5091:1: Bank80.CSTCCX._checkRight = $809ebb
Bank80.asm:4995:1: Bank80.CSTCCY = $809e11
Bank80.asm:4997:1: Bank80.CSTCCY._ASSERT_axy8 = $809e11
Bank80.asm:4996:1: Bank80.CSTCCY._ASSERT_jsr = $809e11
Bank80.asm:5042:1: Bank80.CSTCCY._checkDown = $809e66
Bank80.asm:5037:2: Bank80.CSTCCY._onGround = $809e5d
Bank80.asm:5052:1: Bank80.CSTCCY._exit = $809e7b
Bank80.asm:5029:2: Bank80.CSTCCY._startFall = $809e50
sharedWRAM.asm:43:1: Bank80.oldJoyRight = $800081
Bank80.asm:3928:1: Bank80.entSpiderFunc = $80965d
Bank80.asm:3929:1: Bank80.entSpiderFunc._ASSERT_axy8 = $80965d
Bank80.asm:3200:1: Bank80.kSpriteType = $809188
Bank80.asm:3203:2: Bank80.kSpriteType.s32x32 = 2
Bank80.asm:3202:2: Bank80.kSpriteType.s16x32 = 1
Bank80.asm:3201:2: Bank80.kSpriteType.s16x16 = 0
sharedWRAM.asm:6:1: Bank80.mBG1SC = $80003f
Bank80.asm:4464:1: Bank80.getEntTableIndex = $809a08
Bank80.asm:4466:1: Bank80.getEntTableIndex._ASSERT_axy8 = $809a08
Bank80.asm:4465:1: Bank80.getEntTableIndex._ASSERT_jsr = $809a08
sharedWRAM.asm:14:1: Bank80.mBG2HOFS = $80004f
QWAKSNES.asm:212:3: Bank80.mBG2HOFS.lo = $80004f
QWAKSNES.asm:213:3: Bank80.mBG2HOFS.hi = $800050
Bank80.asm:1670:1: Bank80.pltHighScore = $8087f1
Bank80.asm:1672:1: Bank80.pltHighScore._ASSERT_axy8 = $8087f1
Bank80.asm:1673:1: Bank80.pltHighScore._statusHScore = $7e268e
Bank80.asm:1671:1: Bank80.pltHighScore._ASSERT_jsr = $8087f1
Bank80.asm:1684:1: Bank80.pltHighScore._l = $808805
Bank80.asm:84:1: Bank80.RESET = $808000
sharedWRAM.asm:53:1: Bank80.TICK_DOWN_START = $8000bf
Bank80.asm:4828:1: Bank80.BubbleRawFrames = (8456,8460,8520)
sharedWRAM.asm:30:1: Bank80.mTS = $80006f
Bank80.asm:1940:1: Bank80.Ent16_32 = $8089c2
Bank80.asm:1941:1: Bank80.Ent16_32._ASSERT_axy8 = $8089c2
Bank80.asm:3259:1: Bank80.PlayerJumpLUT = $8091f8
sharedWRAM.asm:15:1: Bank80.mBG2VOFS = $800051
QWAKSNES.asm:212:3: Bank80.mBG2VOFS.lo = $800051
QWAKSNES.asm:213:3: Bank80.mBG2VOFS.hi = $800052
Bank80.asm:5358:1: Bank80.checkOnDissTile = $80a05e
Bank80.asm:5360:1: Bank80.checkOnDissTile._ASSERT_axy8 = $80a05e
Bank80.asm:5363:1: Bank80.checkOnDissTile._exit = $80a063
Bank80.asm:5359:1: Bank80.checkOnDissTile._ASSERT_jsr = $80a05e
Bank80.asm:5366:1: Bank80.checkOnDissTile._c = $80a064
sharedWRAM.asm:29:1: Bank80.mTM = $80006d
Bank80.asm:1243:1: Bank80.ClipY = $808599
Bank80.asm:1245:1: Bank80.ClipY._ASSERT_axy8 = $808599
Bank80.asm:1244:1: Bank80.ClipY._ASSERT_jsr = $808599
Bank80.asm:1257:1: Bank80.ClipY._bottomOfScreen = $8085a5
Bank80.asm:21:1: Bank80.kBulletCollisionbox = 1
Bank80.asm:4798:1: Bank80.CirclerRawFramesLeft = (8640,8642,8644,8646)
Bank80.asm:5557:1: Bank80.clearShieldState = $80a180
Bank80.asm:5559:1: Bank80.clearShieldState._ASSERT_axy8 = $80a180
Bank80.asm:5558:1: Bank80.clearShieldState._ASSERT_jsr = $80a180
sharedWRAM.asm:56:1: Bank80.EntityData = $8000cd
qwak_structs.asm:90:1: Bank80.EntityData.pipeBubbleStart = $800268
qwak_structs.asm:82:1: Bank80.EntityData.collisionY1 = $8001e1
qwak_structs.asm:72:1: Bank80.EntityData.direction = $8000e7
qwak_structs.asm:86:1: Bank80.EntityData.palleteOffset = $800245
qwak_structs.asm:88:1: Bank80.EntityData.pipeIndex = $80025f
qwak_structs.asm:83:1: Bank80.EntityData.collisionY2 = $8001fa
qwak_structs.asm:81:1: Bank80.EntityData.collisionX2 = $8001c8
qwak_structs.asm:80:1: Bank80.EntityData.collisionX1 = $8001af
qwak_structs.asm:77:1: Bank80.EntityData.animFrame = $800164
qwak_structs.asm:85:1: Bank80.EntityData.ignoreColl = $80022c
qwak_structs.asm:70:1: Bank80.EntityData.number = $8000cd
qwak_structs.asm:78:1: Bank80.EntityData.originalY = $80017d
qwak_structs.asm:76:1: Bank80.EntityData.animBase = $80014b
qwak_structs.asm:74:1: Bank80.EntityData.movTimer = $800119
qwak_structs.asm:87:1: Bank80.EntityData.numPipes = $80025e
qwak_structs.asm:73:1: Bank80.EntityData.active = $800100
qwak_structs.asm:79:1: Bank80.EntityData.entState = $800196
qwak_structs.asm:71:1: Bank80.EntityData.type = $8000ce
qwak_structs.asm:84:1: Bank80.EntityData.speed = $800213
qwak_structs.asm:75:1: Bank80.EntityData.animTimer = $800132
qwak_structs.asm:89:1: Bank80.EntityData.lastPipeUsed = $800267
Bank80.asm:923:1: Bank80.INTERLOOP = $8083fc
Bank80.asm:924:1: Bank80.INTERLOOP._ASSERT_axy8 = $8083fc
sharedWRAM.asm:7:1: Bank80.mBG2SC = $800041
Bank80.asm:3481:1: Bank80.kSpiderValues = $80933f
Bank80.asm:3483:2: Bank80.kSpiderValues.rightStartWiggle = 209
Bank80.asm:3486:2: Bank80.kSpiderValues.leftStartFall = 30
Bank80.asm:3482:2: Bank80.kSpiderValues.yFallDelta = 2
Bank80.asm:3485:2: Bank80.kSpiderValues.leftStartWiggle = 46
Bank80.asm:3484:2: Bank80.kSpiderValues.rightStartFall = 225
Bank80.asm:3487:2: Bank80.kSpiderValues.pauseEndFallFrames = 32
Bank80.asm:3488:2: Bank80.kSpiderValues.riseDelayTime = 3
Bank80.asm:1037:1: Bank80.GameOverFuncLUT = $808496
Bank80.asm:2423:1: Bank80.clearTile = $808ce9
Bank80.asm:2426:1: Bank80.clearTile._ASSERT_axy8 = $808ce9
Bank80.asm:2425:1: Bank80.clearTile._ASSERT_jsr = $808ce9
Bank80.asm:1085:1: Bank80.GOWaitForFire = $8084e3
Bank80.asm:1086:1: Bank80.GOWaitForFire._ASSERT_axy8 = $8084e3
Bank80.asm:1098:1: Bank80.GOWaitForFire._exit = $8084f9
Bank80.asm:72:1: Bank80.kBossBearBankOR = $08
Bank80.asm:4758:1: Bank80.WormRawFramesLeft = (8384,8386,8388,8390)
Bank80.asm:5384:1: Bank80.CheckForShadowPlots = $80a089
Bank80.asm:5385:1: Bank80.CheckForShadowPlots._ASSERT_axy8 = $80a089
Bank80.asm:5404:1: Bank80.CheckForShadowPlots._exit2 = $80a0ac
Bank80.asm:5391:1: Bank80.CheckForShadowPlots._checkRemoveTile = $80a095
Bank80.asm:3222:1: Bank80.DeadFramesUpper = (9284,9286,9288,9290)
Bank80.asm:3450:1: Bank80.PlayerBulletAnimData = $809335
Bank80.asm:114:1: Bank80.InitSNESAndMirror = $808041
Bank80.asm:4793:1: Bank80.FishRawFramesDown = (8608,8610,8612,8614)
sharedWRAM.asm:54:1: Bank80.TickDowns = $8000bf
qwak_structs.asm:27:1: Bank80.TickDowns.shieldFlashTimer = $8000c3
qwak_structs.asm:28:1: Bank80.TickDowns.shieldFlashTimerSpeedUp = $8000c4
qwak_structs.asm:24:1: Bank80.TickDowns.playerAnim = $8000c0
qwak_structs.asm:23:1: Bank80.TickDowns.dissBlocks = $8000bf
qwak_structs.asm:29:1: Bank80.TickDowns.bubbleTimer = $8000c5
qwak_structs.asm:26:1: Bank80.TickDowns.bulletLifeTimer = $8000c2
qwak_structs.asm:25:1: Bank80.TickDowns.doorAnim = $8000c1
Bank80.asm:4443:1: Bank80.setNextEntDir = $8099f0
Bank80.asm:4444:1: Bank80.setNextEntDir._ASSERT_axy8 = $8099f0
Bank80.asm:2541:1: Bank80.convertLevelToTileMap_88 = $808d7e
Bank80.asm:2600:1: Bank80.convertLevelToTileMap_88._cont = $808ddf
Bank80.asm:2636:1: Bank80.convertLevelToTileMap_88._exitPos = $808e16
Bank80.asm:2581:1: Bank80.convertLevelToTileMap_88._loop = $808dbd
Bank80.asm:2580:1: Bank80.convertLevelToTileMap_88._row = $808dbb
Bank80.asm:2628:1: Bank80.convertLevelToTileMap_88._key = $808e0a
Bank80.asm:2644:1: Bank80.convertLevelToTileMap_88._2nd = $808e24
Bank80.asm:2632:1: Bank80.convertLevelToTileMap_88._dissBlock = $808e12
Bank80.asm:2622:1: Bank80.convertLevelToTileMap_88._playerPos = $808e01
Bank80.asm:2648:1: Bank80.convertLevelToTileMap_88._pipe = $808e2b
Bank80.asm:2542:1: Bank80.convertLevelToTileMap_88._ASSERT_JSR = $808d7e
Bank80.asm:5688:1: Bank80.Level30 = $80b997
Bank80.asm:5689:1: Bank80.Level31 = $80ba62
Bank80.asm:289:1: Bank80.NMI = $808151
Bank80.asm:1304:1: Bank80.PlotTransitionScreenAndMakeNextChars = $8085eb
Bank80.asm:1306:1: Bank80.PlotTransitionScreenAndMakeNextChars._ASSERT_axy8 = $8085eb
Bank80.asm:1305:1: Bank80.PlotTransitionScreenAndMakeNextChars._ASSERT_jsr = $8085eb
Bank80.asm:1357:1: Bank80.PlotTransitionScreenAndMakeNextChars._secondLoop = $808651
Bank80.asm:1344:1: Bank80.PlotTransitionScreenAndMakeNextChars._firstLoop = $80863d
Bank80.asm:4219:1: Bank80.springEntXLeft = $809873
Bank80.asm:4228:1: Bank80.springEntXLeft._noCollideLeft = $809880
Bank80.asm:4222:2: Bank80.springEntXLeft._hit = $809877
Bank80.asm:4247:1: Bank80.springEntXLeft._store2 = $8098a1
Bank80.asm:4240:1: Bank80.springEntXLeft._noClip2 = $809896
Bank80.asm:5206:1: Bank80.hitX = $809f83
Bank80.asm:4878:1: Bank80.kSinJumpMax = 34
Bank80.asm:1754:1: Bank80.SpriteEmptyVal = $808874
Bank80.asm:1979:1: Bank80.Ent32_32 = $808a14
Bank80.asm:1980:1: Bank80.Ent32_32._ASSERT_axy8 = $808a14
Bank80.asm:5584:1: Bank80.eggFunc = $80a1a3
Bank80.asm:5586:1: Bank80.eggFunc._ASSERT_axy8 = $80a1a3
Bank80.asm:5585:1: Bank80.eggFunc._ASSERT_jsr = $80a1a3
sharedWRAM.asm:72:1: Bank80.bulletFrame = $800292
Bank80.asm:1031:1: Bank80.gameOverLoop = $80848e
Bank80.asm:1032:1: Bank80.gameOverLoop._ASSERT_axy8 = $80848e
Bank80.asm:4880:1: Bank80.SpringFrameFrameTable = $809cde
Bank80.asm:2400:1: Bank80.BCDEYVALUECHECK = $808ccd
Bank80.asm:2408:1: Bank80.BCDEYVALUECHECK._checkH = $808cd8
Bank80.asm:2416:1: Bank80.BCDEYVALUECHECK._HNotWall = $808ce5
Bank80.asm:2403:2: Bank80.BCDEYVALUECHECK._writeMap = $808cd2
Bank80.asm:2737:1: Bank80.fileTiles = $808ea3
Bank80.asm:2792:1: Bank80.kPlayerAnimsIndex = $808f3b
Bank80.asm:2794:2: Bank80.kPlayerAnimsIndex.standLeft = 1
Bank80.asm:2799:2: Bank80.kPlayerAnimsIndex.flapRight = 6
Bank80.asm:2800:2: Bank80.kPlayerAnimsIndex.flapLeft = 7
Bank80.asm:2798:2: Bank80.kPlayerAnimsIndex.jumpLeft = 5
Bank80.asm:2796:2: Bank80.kPlayerAnimsIndex.standWalkLeft = 3
Bank80.asm:2802:2: Bank80.kPlayerAnimsIndex.exit = 9
Bank80.asm:2797:2: Bank80.kPlayerAnimsIndex.jumpRight = 4
Bank80.asm:2793:2: Bank80.kPlayerAnimsIndex.standRight = 0
Bank80.asm:2795:2: Bank80.kPlayerAnimsIndex.standWalkRight = 2
Bank80.asm:2801:2: Bank80.kPlayerAnimsIndex.dead = 8
sharedWRAM.asm:34:1: Bank80.mSETINI = $800077
Bank80.asm:2149:1: Bank80.dmaScreenMirror_xx = $808b76
Bank80.asm:2150:1: Bank80.dmaScreenMirror_xx._ASSERT_JSR = $808b76
Bank80.asm:3797:1: Bank80.entNegativeTBL = $809569
Bank80.asm:3211:1: Bank80.kPlayerSprFlags = 36
sharedWRAM.asm:7:1: mBG2SC = $0041
SNESDef.asm:19:1: kBaseSize_64x32 = 1
sharedWRAM.asm:19:1: mBG4VOFS = $0059
QWAKSNES.asm:212:3: mBG4VOFS.lo = $0059
QWAKSNES.asm:213:3: mBG4VOFS.hi = $005a
sharedWRAM.asm:24:1: mWH1 = $0063
sharedWRAM.asm:10:1: mBG12NBA = $0047
QWAKSNES.asm:193:2: FixedSectionChars = $829a00
sharedWRAM.asm:73:1: disableUpdateSpritesXYToOAMNF = $0293
sharedWRAM.asm:76:1: mplexBuffer = $0384
qwak_structs.asm:102:1: mplexBuffer.xmsb = $03a5
qwak_structs.asm:101:1: mplexBuffer.xpos = $0384
qwak_structs.asm:103:1: mplexBuffer.ypos = $03c6
sharedWRAM.asm:65:1: PasswordEntryIndex = $0284
sharedWRAM.asm:27:1: mWBGLOG = $0069
sharedWRAM.asm:48:1: joyUpStop = $0086
QWAKSNES.asm:201:2: SpritesChars = $838000
QWAKSNES.asm:196:2: CharPallete = $82aec0
sharedWRAM.asm:51:1: LevelData = $0099
qwak_structs.asm:17:1: LevelData.exitTargetFrame = $009f
qwak_structs.asm:14:1: LevelData.playerIndex = $009b
qwak_structs.asm:16:1: LevelData.exitFrame = $009e
qwak_structs.asm:18:1: LevelData.exitFrameDelta = $00a0
qwak_structs.asm:13:1: LevelData.totalKeys = $009a
qwak_structs.asm:12:1: LevelData.numKeysLeft = $0099
qwak_structs.asm:15:1: LevelData.exitIndex = $009c
qwak_structs.asm:19:1: LevelData.levelGraphicsSet = $00a1
sharedWRAM.asm:13:1: mBG1VOFS = $004d
QWAKSNES.asm:212:3: mBG1VOFS.lo = $004d
QWAKSNES.asm:213:3: mBG1VOFS.hi = $004e
sharedWRAM.asm:39:1: joyUp = $007d
sharedWRAM.asm:11:1: mBG23NBA = $0049
sharedWRAM.asm:16:1: mBG3HOFS = $0053
QWAKSNES.asm:212:3: mBG3HOFS.lo = $0053
QWAKSNES.asm:213:3: mBG3HOFS.hi = $0054
QWAKSNES.asm:98:1: playerTempCol = $000e
QWAKSNES.asm:97:1: Pointer4 = $000c
QWAKSNES.asm:212:3: Pointer4.lo = $000c
QWAKSNES.asm:213:3: Pointer4.hi = $000d
sharedWRAM.asm:52:1: PlayerData = $00a2
qwak_structs.asm:44:1: PlayerData.hasJumpedNZ = $00ab
qwak_structs.asm:65:1: PlayerData.flashColour = $00bd
qwak_structs.asm:63:1: PlayerData.exitAtIndex = $00bc
qwak_structs.asm:61:1: PlayerData.numBulletEgg = $00bb
qwak_structs.asm:47:1: PlayerData.startedJumpLR = $00ae
qwak_structs.asm:66:1: PlayerData.baseFlashTimeDelta = $00be
qwak_structs.asm:49:1: PlayerData.slowMoveNZ = $00b0
qwak_structs.asm:54:1: PlayerData.currAnim = $00b5
qwak_structs.asm:41:1: PlayerData.floatTimer = $00a9
qwak_structs.asm:35:1: PlayerData.minorState = $00a3
qwak_structs.asm:58:1: PlayerData.bulletUD = $00b8
qwak_structs.asm:43:1: PlayerData.onGroundNZ = $00aa
qwak_structs.asm:53:1: PlayerData.yDeltaAccum = $00b3
QWAKSNES.asm:212:3: PlayerData.yDeltaAccum.lo = $00b3
QWAKSNES.asm:213:3: PlayerData.yDeltaAccum.hi = $00b4
qwak_structs.asm:59:1: PlayerData.bulletLR = $00b9
qwak_structs.asm:51:1: PlayerData.forceJumpNZ = $00b2
qwak_structs.asm:45:1: PlayerData.isFallingNZ = $00ac
qwak_structs.asm:40:1: PlayerData.canFloatNZ = $00a8
qwak_structs.asm:37:1: PlayerData.deadNZ = $00a4
qwak_structs.asm:55:1: PlayerData.frameOffset = $00b6
qwak_structs.asm:60:1: PlayerData.bulletBurstNZ = $00ba
qwak_structs.asm:34:1: PlayerData.state = $00a2
qwak_structs.asm:50:1: PlayerData.hitBubbleNum = $00b1
qwak_structs.asm:57:1: PlayerData.bulletActive = $00b7
qwak_structs.asm:39:1: PlayerData.shieldTimer = $00a6
QWAKSNES.asm:212:3: PlayerData.shieldTimer.lo = $00a6
QWAKSNES.asm:213:3: PlayerData.shieldTimer.hi = $00a7
qwak_structs.asm:46:1: PlayerData.facingRight = $00ad
qwak_structs.asm:38:1: PlayerData.hasShieldNZ = $00a5
qwak_structs.asm:48:1: PlayerData.movingLRNZ = $00af
SNESDef.asm:18:1: kBaseSize_32x32 = 0
sharedWRAM.asm:9:1: mBG4SC = $0045
sharedWRAM.asm:54:1: TickDowns = $00bf
qwak_structs.asm:27:1: TickDowns.shieldFlashTimer = $00c3
qwak_structs.asm:28:1: TickDowns.shieldFlashTimerSpeedUp = $00c4
qwak_structs.asm:24:1: TickDowns.playerAnim = $00c0
qwak_structs.asm:23:1: TickDowns.dissBlocks = $00bf
qwak_structs.asm:29:1: TickDowns.bubbleTimer = $00c5
qwak_structs.asm:26:1: TickDowns.bulletLifeTimer = $00c2
qwak_structs.asm:25:1: TickDowns.doorAnim = $00c1
QWAKSNES.asm:103:1: ZPTemp5 = $0013
QWAKSNES.asm:102:1: ZPTemp4 = $0012
QWAKSNES.asm:101:1: ZPTemp3 = $0011
QWAKSNES.asm:100:1: ZPTemp2 = $0010
sharedWRAM.asm:57:1: PasswordTemp = $0269
sharedWRAM.asm:61:2: PasswordTemp.high = $0271
sharedWRAM.asm:59:2: PasswordTemp.flowers = $026a
sharedWRAM.asm:58:2: PasswordTemp.lives = $0269
sharedWRAM.asm:60:2: PasswordTemp.score = $026b
sharedWRAM.asm:62:2: PasswordTemp.currLevel = $0277
sharedWRAM.asm:75:1: tileMapTemp = $0294
sharedWRAM.asm:32:1: mTSW = $0073
sharedWRAM.asm:18:1: mBG4HOFS = $0057
QWAKSNES.asm:212:3: mBG4HOFS.lo = $0057
QWAKSNES.asm:213:3: mBG4HOFS.hi = $0058
sharedWRAM.asm:47:1: joyUpStart = $0085
QWAKSNES.asm:119:1: CollideCharBLI = $0023
QWAKSNES.asm:127:1: CollideInternalTTLX = $002b
QWAKSNES.asm:129:1: CollideInternalTTLY = $002d
SNESDef.asm:4:1: kSPri_3 = 48
QWAKSNES.asm:120:1: CollideCharBLC = $0024
SNESDef.asm:2:1: kSPri_1 = 16
QWAKSNES.asm:104:1: TempX = $0014
sharedWRAM.asm:70:1: PasswordLevelSkip = $0289
sharedWRAM.asm:79:1: OAMMirror = $03f3
QWAKSNES.asm:106:1: ActiveTile = $0016
QWAKSNES.asm:122:1: CollideCharBRC = $0026
sharedWRAM.asm:72:1: bulletFrame = $0292
QWAKSNES.asm:60:1: kEntity = $7f0000
QWAKSNES.asm:65:2: kEntity.ghost = $04
QWAKSNES.asm:68:2: kEntity.circler = $07
QWAKSNES.asm:64:2: kEntity.bat = $03
QWAKSNES.asm:74:2: kEntity.bossDummy = $0d
QWAKSNES.asm:73:2: kEntity.bubble = $0c
QWAKSNES.asm:67:2: kEntity.fish = $06
QWAKSNES.asm:62:2: kEntity.spring = $01
QWAKSNES.asm:70:2: kEntity.octopuss = $09
QWAKSNES.asm:71:2: kEntity.bearBody = $0a
QWAKSNES.asm:66:2: kEntity.spider = $05
QWAKSNES.asm:69:2: kEntity.bear = $08
QWAKSNES.asm:76:2: kEntity.maxBubbleMakers = 8
QWAKSNES.asm:72:2: kEntity.octopussBody = $0b
QWAKSNES.asm:77:2: kEntity.maxNumBubblesPerMaker = 2
QWAKSNES.asm:79:2: kEntity.deadFromRedBullet = 254
QWAKSNES.asm:78:2: kEntity.removedFromBullet = 255
QWAKSNES.asm:75:2: kEntity.maxEntities = 25
QWAKSNES.asm:61:2: kEntity.heli = $00
QWAKSNES.asm:63:2: kEntity.worm = $02
QWAKSNES.asm:126:1: CollideInternalSprBRY = $002a
QWAKSNES.asm:124:1: CollideInternalSprBRX = $0028
QWAKSNES.asm:121:1: CollideCharBRI = $0025
sharedWRAM.asm:29:1: mTM = $006d
QWAKSNES.asm:212:3: HLWord.lo = 0
QWAKSNES.asm:213:3: HLWord.hi = 1
sharedWRAM.asm:6:1: mBG1SC = $003f
QWAKSNES.asm:132:1: HideScreen = $0031
sharedWRAM.asm:41:1: joyFire = $007f
sharedWRAM.asm:71:1: checkSpriteToCharData = $028a
qwak_structs.asm:94:1: checkSpriteToCharData.xDeltaCheck = $028a
QWAKSNES.asm:212:3: checkSpriteToCharData.xDeltaCheck.lo = $028a
QWAKSNES.asm:213:3: checkSpriteToCharData.xDeltaCheck.hi = $028b
qwak_structs.asm:96:1: checkSpriteToCharData.xDeltaBackup = $028e
QWAKSNES.asm:212:3: checkSpriteToCharData.xDeltaBackup.lo = $028e
QWAKSNES.asm:213:3: checkSpriteToCharData.xDeltaBackup.hi = $028f
qwak_structs.asm:95:1: checkSpriteToCharData.yDeltaCheck = $028c
QWAKSNES.asm:212:3: checkSpriteToCharData.yDeltaCheck.lo = $028c
QWAKSNES.asm:213:3: checkSpriteToCharData.yDeltaCheck.hi = $028d
qwak_structs.asm:97:1: checkSpriteToCharData.yDeltaBackup = $0290
QWAKSNES.asm:212:3: checkSpriteToCharData.yDeltaBackup.lo = $0290
QWAKSNES.asm:213:3: checkSpriteToCharData.yDeltaBackup.hi = $0291
sharedWRAM.asm:34:1: mSETINI = $0077
sharedWRAM.asm:69:1: PasswordHaveSpring = $0288
qwak_structs.asm:102:1: sMplexBuffer.xmsb = 33
qwak_structs.asm:101:1: sMplexBuffer.xpos = 0
qwak_structs.asm:103:1: sMplexBuffer.ypos = 66
qwak_structs.asm:44:1: sPlayerData.hasJumpedNZ = 9
qwak_structs.asm:65:1: sPlayerData.flashColour = 27
qwak_structs.asm:63:1: sPlayerData.exitAtIndex = 26
qwak_structs.asm:61:1: sPlayerData.numBulletEgg = 25
qwak_structs.asm:47:1: sPlayerData.startedJumpLR = 12
qwak_structs.asm:66:1: sPlayerData.baseFlashTimeDelta = 28
qwak_structs.asm:49:1: sPlayerData.slowMoveNZ = 14
qwak_structs.asm:54:1: sPlayerData.currAnim = 19
qwak_structs.asm:41:1: sPlayerData.floatTimer = 7
qwak_structs.asm:35:1: sPlayerData.minorState = 1
qwak_structs.asm:58:1: sPlayerData.bulletUD = 22
qwak_structs.asm:43:1: sPlayerData.onGroundNZ = 8
qwak_structs.asm:53:1: sPlayerData.yDeltaAccum = 17
QWAKSNES.asm:212:3: sPlayerData.yDeltaAccum.lo = 17
QWAKSNES.asm:213:3: sPlayerData.yDeltaAccum.hi = 18
qwak_structs.asm:59:1: sPlayerData.bulletLR = 23
qwak_structs.asm:51:1: sPlayerData.forceJumpNZ = 16
qwak_structs.asm:45:1: sPlayerData.isFallingNZ = 10
qwak_structs.asm:40:1: sPlayerData.canFloatNZ = 6
qwak_structs.asm:37:1: sPlayerData.deadNZ = 2
qwak_structs.asm:55:1: sPlayerData.frameOffset = 20
qwak_structs.asm:60:1: sPlayerData.bulletBurstNZ = 24
qwak_structs.asm:34:1: sPlayerData.state = 0
qwak_structs.asm:50:1: sPlayerData.hitBubbleNum = 15
qwak_structs.asm:57:1: sPlayerData.bulletActive = 21
qwak_structs.asm:39:1: sPlayerData.shieldTimer = 4
QWAKSNES.asm:212:3: sPlayerData.shieldTimer.lo = 4
QWAKSNES.asm:213:3: sPlayerData.shieldTimer.hi = 5
qwak_structs.asm:46:1: sPlayerData.facingRight = 11
qwak_structs.asm:38:1: sPlayerData.hasShieldNZ = 3
qwak_structs.asm:48:1: sPlayerData.movingLRNZ = 13
